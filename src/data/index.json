[["an-ethical-web-development",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"Towards an Ethical Web Development\",\"description\":\"Thinking about what it means for an industry to determine a moral standard of practice.\",\"date\":\"2020.09.01\",\"slug\":\"an-ethical-web-development\",\"type\":\"text, texts\"};\n\tconst { title, description, date, slug, type } = metadata;\n</script>\n\n<p>Since the beginning of this summer, with everything that’s descending upon us with Covid-19 and the Black Lives Matter uprising, it feels like we are living through a moment of moral accounting. In Portland, antifa is in the street in running battles with secret police, exploited workers are speaking up about the realities of our treasured restaurant industry, business owners are shutting down and pulling a disappearing act instead of facing accountability for their behavior. This has me thinking about <em>my</em> industry, which we all know has massive problems around racism, techno-fascism, and robber-baron level exploitation. We’re still dealing with people who read <em>Snow Crash</em> and <em>Neuromancer</em> and think those books were descriptions of Utopias. </p>\n<p>There are a lot of people doing hard work right now to address these issues in the industry, working to identify how we can — as businesses — move toward a more just system of working, how we need to avoid baking our prejudices in to the AIs we build, and how the physical underpinning of the internet is built on an exploitative and extractive logic of global capital. This is all good and necessary work. It makes me think though, about if there are distinctions between the craft and practice of web development and the business logic and drive the industry. The industry vs the practice - as in the technical skill of painting vs the economic system of patronage. Clearly they are related, and clearly our conception of painting has always been tied to the economic structures that make it a reality as a profession, but is there a way to think about an Ethical Web Development? It would be tied to running an ethical business, and necessarily need to be supporting by an ethical economic system, but how could we articulate what it would look like the perform the craft and practice of web development ethically? What would an antiracist and antifascist web development practice look like?s</p>\n<p>Recently we were visiting my parents in Corvallis, and as it happens my moms partner is <a\n  href=\"https://www.michaelpnelson.com/biography\"\n  rel=\"nofollow\"\n>Michal Nelson</a> - a moral philosopher who specializes in ecological and environmental ethics. So I asked him if there were any frameworks for determining if a given industry (his discipline focuses on forestry and resource management for example) was acting “ethically”. How does an industry set its own standard of ethical behavior? He explained that acting “ethically” is essentially just staying internally consistent to a set of values that you’ve articulated — and in this way being “ethical” or “sustainable” doesn’t inherently hold any value. Many people or entities agree on the importance of acting ethically, but their baseline for what the core concepts actually mean, what they are talking about when they mean “harm” for example can vary wildly. </p>\n<p>An ethical framework is a tool to reduce the possibility space - to help determine what choices available should be taken rather than could be taken. It creates a heuristic for determining which actions will cultivate an environment that supports a set of desired values. Determining ethical considerations becomes a design problem — what values do we want to see in the world? What outcomes do we want and why? Who are we considering, who are we not considering? What are the edges and the limitations beyond which we decide not to concern ourselves?</p>\n<p>There are many ethics available to work from, and conflating a single ethic with the entire range of possible ethics can be a problem. If we assume that a utilitarian, individualist ethic is the <em>only</em> possible ethic we can work with (cough cough economics cough cough) it will necessarily preclude a whole range of outcomes that just aren’t possible to arrive at from those starting conditions. Another ethic based on compassion, animism, and collectivism would start with wildly different axioms and naturally arrive at different outcomes. This debate and tension is at play <em>today</em> among the people who study and try and outline what a sustainable future of forest management is - it’s an ongoing conversation (argument?) between people who don’t share the same basic axioms around what they are trying to talk about.</p>\n<p>Perhaps the core of any ethic is “harm reduction”. We can see this in the Hippocratic oath and the medical ethic — first do no harm. The issue is that “harm” is not a natural, discoverable property of the natural world. Harm is necessarily framed as a value judgment, the corollary to the idea of “good in the expanded field”. We can outline the structural requirements and definitions of harm, and use those value judgments to identify harm in the world, but it’s still a human judgement system being used to sort and order the world. The medical world to illustrate this, we can look at the contemporary prerogative of “informed consent”. We now define lack agency over medical decisions as a harm done to an individual. This has not always been the case.</p>\n<p>This starts to get at the ecological connections between the craft and the business and web development - we can easily frame accessibility as a fundamental requirement of an ethical web development practice in that it reduces the harm of excluding individuals from our work. But we can arrive at that principle from the logic of many different ethics, some of which could be wildly contradictory. From a utilitarian, efficiency and profit maximizing ethic, creating accessible web apps is ethical because not doing so would be to leave money on the table. From a humanistic and compassionate ethic, it’s accessible because it fosters inclusion and equity. So we see accessibility and a clearly defined ethical practice, but that doesn’t mean that we all agree on <em>why</em> accessibility is ethical. </p>\n<p>I think in order for us to define what we mean when we try and define how our industry can be ethical, we need to work through a few steps:</p>\n<ol>\n<li>What values do we want to encourage and foster in the environment? </li>\n<li>Where do we draw the distinction between things we are concerned with and things we are not?</li>\n<li>How do we determine who is effected by our ethic and who is not?</li>\n<li>How do we then define the rules for determine which actions we should take and which actions we should not take?</li>\n</ol>\n<p>If, as an industry and as individuals, we can have these conversations then we can start to come to terms with what it means to work every day in a world where we are actively supporting and enriching the worlds first trillionaire. Is an ethical web development one where we must boycott AWS? How do we feel about data centers in general? What about ISPs, what about underwater cables? </p>\n<p><a\n  href=\"https://www.eater.com/21398969/future-co-op-worker-owned-restaurants-ethical-business\"\n  rel=\"nofollow\"\n>Jaya Saxena’s recent piece in Eater</a> clearly identifies the problems associated with acting ethically as an individual — or even an industry — while remaining a part of a society that systemically undermines that ethic through structural design. </p>\n<blockquote>\n<p>Building an equitable restaurant, a place where all workers are paid fairly, have benefits, and can work in an anti-discriminatory environment, is going to take a near-undoing of the way most restaurants are run.</p>\n</blockquote>\n<p>Saxena examines some current models for employee-owned and cooperative businesses, and privately owned business that actively choose equality and community over profit. She identifies that is a compromise in these enterprises, and sums up the system issues at hand by concussing that ”… when it comes to restaurants, it’s hard to change one thing unless you’re changing everything.” </p>\n<p>There are systemic forces at work that prevent any individual, or even any small community from truly reaching a place of ethical behavior. This makes me think that there has to be a split between “acting ethically” and “being ethical”. We can all act ethically, working our way upstream against the system forces arrayed against us, but that’s no guarantee that we will, at the end of the day, be ethical. </p>\n<p>The essay identifies one restaurant and farm that solves their ethical crisis by charing $195 per person per meal, and frames that as a choice that <em>consumers</em> get to make. This is striking. We live in a time of unprecedented efficiency, unbelievable abundance, and massive wealth but if a <em>restaurant</em> is called to truly account for its exploitation to charge its true price, it’s immediately untenable. This feels like it must be true across many industries – Uber would rather cease service in California than treat it’s drivers like employees. What would it take to truly understand what the network of costs, values, debts, and the real price of things?</p>\n<p>Would an ethical web development be able to account for that cost and still be able to be a business in our society? During my early courses in fine art printmaking at University, I was taught that a blank sheet of paper had value on its own. Not only the price attached to it (steep, for nice paper) but also the work and craft that went in to making it. One had to be sure that the image we we’re impressing on the blank sheet of paper added value to it that than reduced it. Our work had to be more valuable than the paper, and if it wasn’t we didn’t make it. </p>\n<p><a href=\"http://lifewinning.com/tag/writes/\" rel=\"nofollow\">Ingrid Burrington</a> has written extensively about the physical realities of the internet, and what it means to turn the raw stuff of the earth into the objects we need to make computers. She’s even turned computers back into <a\n  href=\"https://twitter.com/lifewinning/status/1049653649562132482\"\n  rel=\"nofollow\"\n>raw stuff</a>. It’s hard to confront the reality of an open pit lithium mine and conclude that needs must for better batteries. </p>\n<p>Can web development be ethical? Maybe not. But that doesn’t mean that we don’t have an obligation to act ethically. If we can articulate the ethic we want to have in our industry, and stay internally consistent to those principles in an effort to manifest values we want in the world, maybe that’s enough. Or a start anyway. </p>\n","data":{"fm":{"title":"Towards an Ethical Web Development","description":"Thinking about what it means for an industry to determine a moral standard of practice.","date":"2020.09.01","slug":"an-ethical-web-development","type":"text, texts"}},"map":""}],["arcgis-for-developers",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"ArcGIS for Developers\",\"slug\":\"arcgis-for-developers\",\"date\":\"2015.10.31\",\"site\":\"https://developers.arcgis.com/\",\"description\":\"A fully developer-facing experience for the ArcGIS Platform, including marketing messaging, documentation, platform management, and online tools to enable a a developer to get the most out of the ArcGIS platform.\",\"type\":\"projects, esri\"};\n\tconst { title, slug, date, site, description, type } = metadata;\n</script>\n\n<p><img src=\"./title.png\" alt=\"ArcGIS for Developers\">\n<img src=\"./features.png\" alt=\"ArcGIS for Developers\">\n<img src=\"./docs.png\" alt=\"ArcGIS for Developers\">\n<img src=\"./app-list.png\" alt=\"ArcGIS for Developers\">\n<img src=\"./item-detail.png\" alt=\"ArcGIS for Developers\"></p>\n","data":{"fm":{"title":"ArcGIS for Developers","slug":"arcgis-for-developers","date":"2015.10.31","site":"https://developers.arcgis.com/","description":"A fully developer-facing experience for the ArcGIS Platform, including marketing messaging, documentation, platform management, and online tools to enable a a developer to get the most out of the ArcGIS platform.","type":"projects, esri"}},"map":""}],["arcgis-online",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"ArcGIS Online\",\"date\":\"2015.10.31\",\"slug\":\"arcgis-online\",\"site\":\"https://www.arcgis.com/\",\"description\":\"Designing, prototyping, and developing the web platform for the worlds leading GIS software.\",\"type\":\"projects, esri\"};\n\tconst { title, date, slug, site, description, type } = metadata;\n</script>\n\n<p><img src=\"./content.png\" alt=\"content\">\n<img src=\"./layer.png\" alt=\"layer\">\n<img src=\"./data.png\" alt=\"data\">\n<img src=\"./rendering.png\" alt=\"rendering\">\n<img src=\"./search.png\" alt=\"search\"></p>\n","data":{"fm":{"title":"ArcGIS Online","date":"2015.10.31","slug":"arcgis-online","site":"https://www.arcgis.com/","description":"Designing, prototyping, and developing the web platform for the worlds leading GIS software.","type":"projects, esri"}},"map":""}],[null,{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"At the Mountains of Madness\",\"site\":\"http://miskatonic.nikolas.ws/\",\"date\":\"2014-06-21T00:00:00.000Z\",\"description\":\"An exercise in digital publishing, this edition of _At the Mountains of Madness_ by H.P. Lovecraft is a free, open, public domain text. Created as a high-end, web-native publication in response to a personal desire the read the text online, and being unable to find a version that did the original physical publication any justice.\",\"type\":\"projects, department\",\"archived\":true};\n\tconst { title, site, date, description, type, archived } = metadata;\n</script>\n\n<p><img src=\"./title.png\" alt=\"At the Mountains of Madness\"></p>\n<p><img src=\"./start-reading.png\" alt=\"At the Mountains of Madness\"></p>\n<p><img src=\"./chapter-title.png\" alt=\"At the Mountains of Madness\"></p>\n<p><img src=\"./text.png\" alt=\"At the Mountains of Madness\"></p>\n<p><img src=\"./chapter-title-inverted.png\" alt=\"At the Mountains of Madness\"></p>\n<p><img src=\"./text-inverted.png\" alt=\"At the Mountains of Madness\"></p>\n","data":{"fm":{"title":"At the Mountains of Madness","site":"http://miskatonic.nikolas.ws/","date":"2014-06-21T00:00:00.000Z","description":"An exercise in digital publishing, this edition of _At the Mountains of Madness_ by H.P. Lovecraft is a free, open, public domain text. Created as a high-end, web-native publication in response to a personal desire the read the text online, and being unable to find a version that did the original physical publication any justice.","type":"projects, department","archived":true}},"map":""}],[null,{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"Axioms\",\"date\":\"2013-5-20\",\"description\":\"Bachelor of Fine Arts in Printmaking thesis. An exploration of examining the experiences and memories of the built city through print, collage, and drawing.\",\"type\":\"art, printmaking\",\"archived\":true};\n\tconst { title, date, description, type, archived } = metadata;\n</script>\n\n<p><img src=\"./armature01.jpg\" alt=\"Carceral Armature\"></p>\n<figcaption>Carceral Armature, Lithograph, Magnetic Tape, 2012</figcaption>\n<p>I am interested in exploring the connection between personal identity and external environment, specifically focusing on urban density. I am engaged with the idea that as we navigate our environment, we create an internal model — a mental map of our surroundings and our place within those surroundings. This internal model may or may not accurately reflect the external world. The connections and contradictions that occur when these two environments collide create definition of personal identity. If identities are shaped by cities, cities are shaped by collected identities. This is an intangible and emergent property rising from the imaginations of an entire cities inhabitants. In this fluid exchange, cities become organisms.</p>\n<p><img src=\"./armature03.jpg\" alt=\"Carceral Armature\"></p>\n<figcaption>Carceral Armature, Detail</figcaption>\n<p>The “hard” city of infrastructure and physical space creates the framework that the “soft” city of emotion, recollection, and assumption rests on. Urban structure and culture parallels the interactive relationship between human mind and body. Urban growth creates a feedback loop where change in individuals creates change in city, which effects further change in individuals. Our actions weigh on the city, but by inhabiting it we are irrevocably influenced.</p>\n<p><img src=\"./built01.jpg\" alt=\"All Cities Are Built Twice\"></p>\n<figcaption>All Cities Are Built Twice, Etching, Tusche Wash, 2012</figcaption>\n<p><img src=\"./built03.jpg\" alt=\"All Cities Are Built Twice\"></p>\n<figcaption>All Cities Are Built Twice, Detail</figcaption>\n<p>In the language of mechanical reproduction, this work uses printmaking as its primary medium in order to create densities of visual texture, and comment on a world of analog and digital reproduction. Print allows some degree of non-linear process. Through the use of the multiple, stage proofing, and the technique of chine-collé, I am able to create an image that layers over itself at different stages of time. This collapsing of image is present in all the work, sometimes being composited, sliced apart, and re-composited until the original is entirely removed and a new image exists over its deconstructed framework. Each piece is based upon a single system of relationships and gridded framework co-opted from a typographic practice, reflecting the hard infrastructures of construction and communication that contemporary society is built on. Writing systems are a central component of my work in that they allow an individual to create a permanent mark of their thoughts on the environment. Writing is a direct externalization of identity. Through abstraction of city form and iconography, I seek to reflect the abstract forces that fundamentally guide our globalized world.</p>\n<p><img src=\"./replica01.jpg\" alt=\"An Exact Replica of a Thing that Never Existed\"></p>\n<figcaption>An Exact Replica of a Thing that Never Existed, Etching, Silkscreen, 2012</figcaption>\n<p><img src=\"./replica02.jpg\" alt=\"An Exact Replica of a Thing that Never Existed\"></p>\n<figcaption>An Exact Replica of a Thing that Never Existed, Detail</figcaption>\n<p>I am focusing on the blurred distinction between human geography and physical geography as it comments on post-modern urbanism, issues of sprawl and lack of specificity and physical place in a post-geographic, globalized system of living on a human level. I examine the connections to local environment and context within the global city. With these prints, I seek to examine the current relevancy of both physical and informational infrastructures, from highways to the internet, shipping lines to global markets, built environments to typographic systems, in defining place and self.</p>\n<p><img\n  src=\"./capacities01.jpg\"\n  alt=\"The Capacities of the Human Body to Locate Itself\"\n></p>\n<figcaption>The Capacities of the Human Body to Locate Itself, Etching, Giclee, 2012</figcaption>\n<p><img\n  src=\"./capacities02.jpg\"\n  alt=\"The Capacities of the Human Body to Locate Itself\"\n></p>\n<figcaption>The Capacities of the Human Body to Locate Itself, Detail</figcaption>\n<h4>Bibliography</h4>\n<h5>Gibson, William. “Dead Man Sings”, <em>Distrust That Particular Flavor</em>. New York: Putnam Group, 2012</h5>\n<p>A short essay discussing the unnoticed shift that human life took when analog, and later digital, media started to elongate our collective memories. Interesting discussion of what effect locating identities and human narratives outside of our head, or oral traditions, can have on a society.</p>\n<h5>Gibson, William. <em>Pattern Recognition</em>. New York: Berkley Publishing Group, 2003</h5>\n<p>Gibson’s seventh novel. A densely layered quasi-narrative dealing with problems of geographic specificity, globalized fashion trends and trade, the power of corporations in the realm of cultural influence, and the capabilities of pareidolia and obsession.</p>\n<h5>Calvino, Italo. <em>Invisible Cities</em>. Orlando: Harcourt, 1974</h5>\n<p>Calvino describes cities are as they felt and lived in experientially rather than descriptively or objectively. He raises issues of mirroring, reflecting, and the relationships between person and place. As he dissects and lays bare a single city, questions of semantic reasoning and possibilities of communication are raised.</p>\n<h5>Dear, Michael, Flusty, Steven. “Postmodern Urbanism.” <em>Annals of the Association of American Geographers</em>, Vol. 88, No. 1 (Mar., 1998), pp. 50-72</h5>\n<p>Dear and Flusty set out to describe how the modernist Chicago School theory of urbanism does not hold with post-modern geographies, in particular Los Angeles. They describe the city structure of Los Angeles in relation to landscape opportunities and necessities, population demographics, and market pressures of late-stage capitalism. They go on to describe how the physical regions of the post-modern city are indicative of social structures, and how these hierarchies either enforce or subvert cultural patterns. They forecast a city with the post-modern structures of Los Angeles taken to dystopian extremes.</p>\n","data":{"fm":{"title":"Axioms","date":"2013-5-20","description":"Bachelor of Fine Arts in Printmaking thesis. An exploration of examining the experiences and memories of the built city through print, collage, and drawing.","type":"art, printmaking","archived":true}},"map":""}],["the-most-exciting-design-systems-are-boring",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"The Most Exciting Design Systems Are Boring\",\"author\":\"Josh Clarg\",\"slug\":\"the-most-exciting-design-systems-are-boring\",\"year\":2017,\"source\":\"https://bigmedium.com/ideas/boring-design-systems.html\",\"thesis\":\"What it says on the tin.\",\"tags\":\"design systems, design/development\",\"type\":\"annotation, bibliography\"};\n\tconst { title, author, slug, year, source, thesis, tags, type } = metadata;\n</script>\n\n<blockquote>\n<p>Design-system builders should resist the lure of the new. Don’t confuse design-system work with a rebrand or a tech-stack overhaul. The system’s design patterns should be familiar, even boring.</p>\n</blockquote>\n<blockquote>\n<p>The job is not to invent, but to curate.</p>\n</blockquote>\n<p>When building a design system, the primary job is in working with what’s already existing rather than starting from scratch and greenfielding everything.</p>\n","data":{"fm":{"title":"The Most Exciting Design Systems Are Boring","author":"Josh Clarg","slug":"the-most-exciting-design-systems-are-boring","year":2017,"source":"https://bigmedium.com/ideas/boring-design-systems.html","thesis":"What it says on the tin.","tags":"design systems, design/development","type":"annotation, bibliography"}},"map":""}],["building-a-client-library",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"Building a Client Library for ArcGIS\",\"slug\":\"building-a-client-library\",\"date\":\"2015.3.09\",\"description\":\"Writing a wrapper client library to smooth out design weirdness at the API level leads to plenty of design thinking on the way things should be.\",\"type\":\"text, texts\"};\n\tconst { title, slug, date, description, type } = metadata;\n</script>\n\n<p>This year I built a JavaScript wrapper for Node and the Browser around the ArcGIS REST API to simplify working with that platform as a developer. This was as an exercise in API design, as well as making a tool that I wanted to use but didn’t exist yet. The project is a bare-bones library to ease interactions with the ArcGIS REST API in JavaScript and Node apps.</p>\n<p>Sometimes – and for sure in this case – an API can be rough, built over time, and not provide the sort of logical models that work well with specific language environments. This was the case with the ArcGIS REST API that I was running in to. A lot of the decisions had been made over the course of years, and didn’t translate very smoothly a language as young as Node.js.</p>\n<p>The first step was to figure out what problems I wanted to solve. A lot of my work with Esri PDX has been about content handling, and so this is where I started. Reading <em>all</em> the doc to get a big picture of what’s going on with the API, and talk to everyone who’s done work like this before to figure out what problems <em>they</em> needed to solve was the first step. From there I felt I had enough context and information to make the thing useful for more people than just me, and make sure that it was coherent with the underlying goals of the original API.</p>\n<p>This project works to simplify and unify the gap between the ArcGIS REST API and a contemporary Node application. This library is a UI in the most basic sense of the term — it provides an interface between the developer and the servers. That interface needs to be well designed and thoughtful in order to make the process as smooth, intuitive, and pleasurable as possible.</p>\n<p>One of the most important parts of the project is to provide developers with a way to access the ArcGIS platform without needing to architect their entire application around opinionated frameworks (like Dojo, for example). Though the library itself is written in ES6, it’s distributed as plain, normal ES5 – both as a node package and a packaged bundle. This means it works both in Node and the browser, and has very few opinions on how it integrates with the rest of your app.</p>\n<p>Right now, the library wraps most of the basic platform content management and interactions - getting and editing users, organizations, and items. The Node ArcGIS Client Library is an open source project — so it’s scope will increase as the community works to accomplish more goals and workflows.</p>\n<h2>Setting up the client</h2>\n<p>The first step in using the library is initializing the client with your target portal.</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\">var ArcGIS = require(&#39;arcgis&#39;)\nvar arcgis = ArcGIS()</code>`}</pre>\n<p>This sets up a default object for interacting with the API. This default is going to talk to ArcGIS Online as an anonymous, unauthenticated user. One can authenticate this client session as a named user by passing in a user token obtained from a successful OAuth login process.</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\">var arcgis = Arcgis(&#123;\n  token: namedUserToken\n&#125;)</code>`}</pre>\n<p>This isn’t exclusive to ArcGIS Online. The API for interacting with your organization’s installation of Portal or Server is the same. Setting up the client session with your instance is done by specifying your API domain.</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\">var arcgis = Arcgis(&#123;\n  domain: &#39;ago.my-server.com&#39;,\n  token: namedUserToken\n&#125;)</code>`}</pre>\n<p>Beyond the initialization of the client, the library is exclusively async. All the functions return promises by default.</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\">function log (m) &#123;\n  console.log(m)\n&#125;\nfunction ohNo (err) &#123;\n  return new Error(err)\n&#125;\narcgis.request()\n.then(log)\n.catch(ohNo)</code>`}</pre>\n<p>You can also pass in a node-style callback, if you’d prefer.</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\">function log (err, results) &#123;\n  if (err) &#123;\n    return new Error(err)\n  &#125; else &#123;\n    console.log(results)\n  &#125;\n&#125;\narcgis.request(&#123;&#125;, log)</code>`}</pre>\n<p>Both methods work just as well, and use all the same business logic. I like promises, but maybe you don’t. This is one of the main reasons the library does its best to avoid inflicting my opinions on your codebase.</p>\n<p>Once we have an authenticated session, we can do all sorts of stuff — like figure out who we are:</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\">function hello (user) &#123;\n  console.log(&#39;Hello, &#39; + user.firstName)\n&#125;\narcgis.user(&#39;NikolasWise&#39;).then(hello)</code>`}</pre>\n<p>We can get all of the items that user has in the platform:</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\">function getContent (user) &#123;\n  return user.content()\n&#125;\nfunction logContent (content) &#123;\n  console.log(content)\n&#125;\narcgis.user(&#39;NikolasWise&#39;)\n.then(getContent)\n.then(logContent)</code>`}</pre>\n<p>Or a list of all the groups that a user is a member of.</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\">function logGroups (item) &#123;\n  item.groups.forEach(function (group) &#123;\n    console.log(group.title)\n  &#125;)\n&#125;\narcgis.user(&#39;NikolasWise&#39;).then(logGroups)</code>`}</pre>\n<p>The library also can interact with the user’s organization, returning information, members, or all the content associated with the organization.</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\">function logOrg (org) &#123;\n  console.log(org)\n&#125;\narcgis.organization(&#39;esripdx&#39;).then(logOrg)</code>`}</pre>\n<p>The organization call defaults to ‘self’ — whatever organization the current user is a member of.</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\">function getMembers (org) &#123;\n  return org.members()\n&#125;\nfunction log (members) &#123;\n  console.log(members)\n&#125;\narcgis.organization().then(getMembers).then(log)</code>`}</pre>\n<p>Many of the content calls are abstractions or helper methods for longer, more complicated calls to the <code>search</code> endpoint.</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\">function getContent (org) &#123;\n  return org.content()\n&#125;\nfunction log (items) &#123;\n  console.log(items)\n&#125;\narcgis.organization().then(getContent).then(log)</code>`}</pre>\n<p>In this way we are able to create a transitional layer between the API itself (a super complicated call to the search endpoint) and what application developers need (all my organization’s content).</p>\n<h2>Working with content</h2>\n<p>Platform content is the weakest link in the library as of today. ArcGIS supports a huge range of item types, and quite a number of sophisticated things you can do with those item types. For now the basics are more or less in place — like getting an item’s details:</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\">var layerID = &#39;a5e5e5ac3cfc44dfa8e90b92cd7289fb&#39;\nfunction logItem (item) &#123;\n  console.log(item)\n&#125;\narcgis.item(layerID).then(logItem)</code>`}</pre>\n<p>Or updating the those details and editing the permissions:</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\">var layerId = &#39;a5e5e5ac3cfc44dfa8e90b92cd7289fb&#39;\nfunction updateItem (item) &#123;\n  return item.update(&#123;\n    snippet: &#39;Building footprints in my neighborhood in Portland, Oregon&#39;\n  &#125;)\n&#125;\nfunction shareItem (item) &#123;\n  console.log(item)\n  return item.permissions(&#123;\n    access: &#39;public&#39;\n  &#125;)\n&#125;\narcgis.item(layerId)\n.then(updateItem)\n.then(shareItem)</code>`}</pre>\n<p>So far, there’s some support for item-type-specific methods that are starting to open up the possibilities of manipulating your content from Node — like getting all the data in a layer.</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\">var layerID = &#39;a5e5e5ac3cfc44dfa8e90b92cd7289fb&#39;\nfunction getData (item) &#123;\n  return item.data()\n&#125;\nfunction logData (data) &#123;\n  console.log(data)\n&#125;\narcgis.item(layerId)\n.then(getData)\n.then(logData)</code>`}</pre>\n<p>There is a lot more of the platform that we could cover than this - services, analysis, layer creation and tile publishing all are actions that this library or ones like it could cover.</p>\n","data":{"fm":{"title":"Building a Client Library for ArcGIS","slug":"building-a-client-library","date":"2015.3.09","description":"Writing a wrapper client library to smooth out design weirdness at the API level leads to plenty of design thinking on the way things should be.","type":"text, texts"}},"map":""}],["calcite-web",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"Calcite Web\",\"slug\":\"calcite-web\",\"site\":\"http://esri.github.io/calcite-web\",\"date\":\"2015.11.25\",\"description\":\"A framework that addresses common design problems and interactive elements for Esri, creating a united visual language and user experience.\",\"type\":\"projects, esri\"};\n\tconst { title, slug, site, date, description, type } = metadata;\n</script>\n\n<p><img\n  src=\"https://photos.smugmug.com/Projects/Calcite-web/i-FNjrvmC/0/1db11e90/X3/title-X3.png\"\n  alt=\"Calite Web Homepage\"\n></p>\n<h2>Design System, Development Framework</h2>\n<p><a href=\"http://www.esri.com/about-esri\" rel=\"nofollow\">Esri</a> is a large, international technology company with development teams all over the world — from Portland to Glasgow to Zurich to Beijing. Esri’s <em>design</em> team however, is based in the Redlands, California mother-ship. This meant that a lot of the design tools created for Esri’s web presence were unevenly distributed across the huge number of teams who needed to develop web properties.</p>\n<p>At <a href=\"http://pdx.esri.com/\" rel=\"nofollow\">Esri PDX R&D</a> we had <a href=\"http://paulcpederson.com/\" rel=\"nofollow\">assembled</a> a <a href=\"http://patrickarlt.com/\" rel=\"nofollow\">strong</a> <a href=\"http://ungoldman.com/\" rel=\"nofollow\">team</a> of designer/developers. We sat down to create a design system that we could distribute to <em>all</em> of Esri’s development teams, with the goal of creating a unified user experience for all our customers, and keeping all of our properties aligned and in sync as we moved forward.</p>\n<p><img\n  src=\"https://photos.smugmug.com/Projects/Calcite-web/i-ddZ8k6m/0/e1ea0445/X3/examples-doc-X3.png\"\n  alt=\"Calcite Web Examples\"\n></p>\n<h2>Goals</h2>\n<p>Building a design library and CSS framework can be a complicated affair, made more complicated by the large audience of developers we had to make the project work for.</p>\n<p><strong>Adoption:</strong> We had to make the framework incredibly attractive to Esri developers, and incredible easy for them to use. Our main goal was unification, so any barriers to adoption needed to be removed.</p>\n<p><strong>Composabillity:</strong> To this end, we needed using the framework to be as simple is including a CSS file and copy-pasting code samples.</p>\n<p><strong>Modularity:</strong> Many of the projects at Esri have rigid, preexisting code bases and technologies that we needed to integrate smoothly with — we needed to provide a system that works in whatever tech stack it finds itself in.</p>\n<p><strong>No Opinions:</strong> We wanted the framework to provide a full set of interactive patterns — requiring JavaScript — but also work in any JavaScript framework environment.</p>\n<p><strong>Robust:</strong> Certain aspects of the framework — like <a\n  href=\"/projects/viewport-grid\"\n>the grid system</a> had major functional requirements. The grid itself needed to be column based, fully responsive by default, and work down to IE 8.</p>\n<p><strong>Flexible:</strong> Developers needed to have access to a wide range of patterns, ensuring that common structures didn’t get independently invented in different projects. Designers needed to have the freedom to create on-off pages that stood out without feeling constricted.</p>\n<p><img\n  src=\"https://photos.smugmug.com/Projects/Calcite-web/i-RtQW5gB/0/e5bee077/X3/patterns-doc-X3.png\"\n  alt=\"Calcite Web Patterns\"\n></p>\n<h2>Using Sass</h2>\n<p>Sass — through the <a\n  href=\"https://github.com/sass/node-sass\"\n  rel=\"nofollow\"\n>Node Sass project</a> allowed us to meet many of our goals. A major theoretical underpinning to the framework’s .SCSS involved making the specificity graph as flat as possible, and decoupling style code from selectors. This allows the design code to be reused and adapted basically anywhere in any given project.</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\">@mixin tab-contents() &#123;\n  @include box-sizing(border-box);\n  border: 1px solid $lighter-gray;\n  margin-top: -1px;\n&#125;\n@if $include-tabs == true &#123;\n .tab-section &#123; @include tab-section(); &#125;\n&#125;</code>`}</pre>\n<p>The CSS development principles are outlined in <a\n  href=\"http://paulcpederson.com/articles/css-for-people-who-hate-css/\"\n  rel=\"nofollow\"\n>an excellent article (and Esri User Conference presentation) by Paul Pederson.</a></p>\n<h2>JavaScript, or Not</h2>\n<p>All of our interactive patterns require a <code>.js-</code> prefix hook to bind JS events too. This lets projects using <a\n  href=\"https://angularjs.org/\"\n  rel=\"nofollow\"\n>Angular</a> or <a href=\"https://facebook.github.io/react/\" rel=\"nofollow\">React</a> to write their own component code for the interactions while still getting all the canonical design code for a pattern.</p>\n<p><img\n  src=\"https://photos.smugmug.com/Projects/Calcite-web/i-nJkf5G2/0/abe4593b/X3/event-bus-doc-X3.png\"\n  alt=\"Calcite Web Patterns\"\n></p>\n<p>The JS portion of the framework uses Publication / Subscription event bus to connect user intent and component behavior. This allows for programmatic control of the UI, and lets a pattern communicate to the rest of the application. The JavaScript library is written as a set of ES6 modules, and is compiled to an ES5 UMD module, attaching itself to the <code>window</code> on load.</p>\n<p><img\n  src=\"https://photos.smugmug.com/Projects/Calcite-web/i-npTCL4g/0/705a3306/X3/color-doc-X3.png\"\n  alt=\"Calcite Web Grayscale\"\n></p>\n<h2>The Brand</h2>\n<p>Color and Typography do most of the heavy lifting when communicated brand identity on the Web. We developed a gray scale, and selected a limited set of colors from the immense set of <a\n  href=\"https://github.com/Esri/calcite-colors\"\n  rel=\"nofollow\"\n>Esri’s color pallete</a> to expose as simple color classes and variables. We updated the typography to Avenir NExt by Adrian Frutiger and Akira Kobayashi to give Esri’s classic Avenir print style a boost that it needed for screen display.</p>\n<p><img\n  src=\"https://photos.smugmug.com/Projects/Calcite-web/i-9Gp8DGk/0/3575a9d5/X3/type-doc-X3.png\"\n  alt=\"Calcite Web Type\"\n></p>\n<h2>Conclusion</h2>\n<p>The framework as been very successful so far — being integrated into new designs for esri.com, new sections of <a\n  href=\"http://www.arcgis.com/home/item.html?id=52bdc7ab7fb044d98add148764eaa30a\"\n  rel=\"nofollow\"\n>ArcGIS Online</a>, and a number of <a\n  href=\"https://developers.arcgis.com/\"\n  rel=\"nofollow\"\n>related ArcGIS properties</a>.</p>\n","data":{"fm":{"title":"Calcite Web","slug":"calcite-web","site":"http://esri.github.io/calcite-web","date":"2015.11.25","description":"A framework that addresses common design problems and interactive elements for Esri, creating a united visual language and user experience.","type":"projects, esri"}},"map":""}],["macwright/a-clean-start-for-the-web",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"A Clean Start for the Web\",\"slug\":\"macwright/a-clean-start-for-the-web\",\"thesis\":\"How do we make the web fun, participatory, and good?\",\"source\":\"https://macwright.com/2020/08/22/clean-starts-for-the-web.html\",\"author\":\"Tom Macwright\",\"year\":2020,\"tags\":\"internet, web\",\"type\":\"annotation, bibliography\"};\n\tconst { title, slug, thesis, source, author, year, tags, type } = metadata;\n</script>\n\n<blockquote>\n<p>The web’s evolution over the last decade has mirrored the American economy. All of the essential indicators are going “up and to the right,” a steady stream of fundamental advances reassure use that there “is progress,” but the actual experience and effects for individuals stagnates or regresses.</p>\n</blockquote>\n<p>tmcw is approaching the contemporary problem of technical debt, the result when our system is so complex and fucked that it’s starting to collapse and there’s nothing we can do about.</p>\n<blockquote>\n<p>The platform side is what changed last week, when Mozilla laid off 250 employees and indicated that it would affect Firefox development … The real winner is not just Chrome, but Chrome’s engine. One codebase, KHTML, split into WebKit (Safari), and Blink (Chrome, Microsoft Edge, Opera, etc.)</p>\n</blockquote>\n<blockquote>\n<p>This a textbook monoculture. In one sense, it’s a victory for collaboration because nobody’s ‘wasting time’ on competing implementations and web developers can expect the same features and bugs across different browsers. But in a deeper way, it threatens one of the basic principles of how the web has evolved.</p>\n</blockquote>\n<p>Tmcw identifies that our browsers our now a monoculture, which is an interesting problem to have because 1) there are some clear indications that a monoculture by technical behemoths is <em>bad</em> but it’s only an interesting because 2) browsers should just be all implementing the spec anyway. The <em>spec</em> is an interesting problem, since <em>it also</em> is just a monoculture dominated by technical behemoths. </p>\n<blockquote>\n<p>Organizations like the WHATWG, W3C, and IETF have been collaboration spaces for independent developers, corporations, and academics to discuss potential new features of the web.</p>\n</blockquote>\n<p>At least the spec pretends or tries to be open and community oriented. </p>\n<blockquote>\n<p> Chrome has been moving extremely fast, adding new specifications and ideas at a startling rate, and it’s becoming one of the hardest pieces of software to replicate.</p>\n</blockquote>\n<p>The problem is that Google dominates the spec, and is gaining monopoly on the <em>spec</em>. </p>\n<blockquote>\n<p>Not only is it nearly impossible to build a new browser from scratch, once you have one the ongoing cost of keeping up with standards requires a full team of experts. </p>\n</blockquote>\n<p>This is probably the point and the goal of the hostile takeover of the spec. The creation of a platform that becomes a monopoly on a market is a hallmark tech company business model.</p>\n<blockquote>\n<p>The web has had about 25 years to grow, few opportunities to shrink, and is now surrounded by an extremely short-sighted culture that is an outgrowth of economic and career short-termism.</p>\n</blockquote>\n<p>Haha, Im not sure I have any insight here but its funny</p>\n<blockquote>\n<p>For folks who just want to create a web page, who don’t want to enter an industry, there’s a baffling array of techniques, but all the simplest, probably-best ones are stigmatized. It’s easier to stumble into building your resume in React with GraphQL than it is to type some HTML in Notepad.</p>\n</blockquote>\n<p>Tmcw identifies that there is a problem for creators in that making web shit is outlandishly difficult.</p>\n<blockquote>\n<p>The end result is that I no longer expect pages to be fast, even with uBlock installed in Firefox and a good local fiber internet provider.</p>\n</blockquote>\n<p>Tmcw indentifies that there is a problem for consumers in that    our technical debt has resulted in a horrible experience. </p>\n<blockquote>\n<p>I don’t want to lay all of the blame at those web developers … Segment offered a big page of on/off switches with hundreds of data providers & ad-tech companies on it. And, sure, enough, some folks closer to the business side started clicking all those buttons.</p>\n</blockquote>\n<p>This is an interesting way of throwing the business team under the bus for making choices that are obvious to them and removing our own culpability in building these systems. </p>\n<blockquote>\n<p>How do we make the web fun, participatory, and good?</p>\n</blockquote>\n<p>There is Tmcw’s thesis: which obviously has a ton of value judgment wrapped up in it. </p>\n<blockquote>\n<p> the current web which has basically thrown away semantic HTML as an idea.</p>\n</blockquote>\n<p>Is that true or is that just a dig at the current dominant process and system?</p>\n<blockquote>\n<p>Then there’s the “application web”. This started as server applications…</p>\n</blockquote>\n<p>We’ve seen Tmcw dig at the front-end space before.</p>\n<blockquote>\n<p>The problem is that the “document web” is often plagued by application characteristics - it’s the JavaScript and animations and complexity that makes your average newspaper website an unmitigated disaster. Where document websites adopt application patterns they often accidentally sacrifice accessibility, performance, and machine readability.</p>\n</blockquote>\n<p>I feel this is classic Tmcw “get off my lawn” crankiness. Rich Harris addresses this: <code>It's a spectrum, and the interesting stuff happens in the middle. There's magic in that grey area. I still believe the web has the potential to be a fundamentally more expressive medium than its predecessors (http://worrydream.com/MediaForThinkingTheUnthinkable/ is on a similar wavelength to that notion)</code> </p>\n<blockquote>\n<p>The application web uses JSX, not HTML, and would like that in the browser itself, or Svelte, instead of JavaScript, and would like that too.</p>\n</blockquote>\n<p>Haha our boy is coming for Rich! I’m not I understand what the dig here is … he’s mad at a language that has a compile step? Isn’t that what like … most applications use? Rust, C, whatever, they all compile down to a native runtime language. </p>\n<blockquote>\n<p>When I read blog posts from ‘traditional web developers’ who are mad that HTML & CSS aren’t enough anymore and that everything is complicated – I think this is largely that the application stack for building websites has replaced the document stack in a lot of places.</p>\n</blockquote>\n<p>I mean, that’s a decent point. The problem is that we’ve created a disconnect between what we want to build, why we won’t to build it, and how we build it. We use insane toolchains to solve simple problems, and not all tools are for the same thing. </p>\n<blockquote>\n<p>The appeal of social networks is partly because they let us create documents without thinking about web technology, and they provide guarantees around performance, accessibility, and polish that otherwise would take up our time.</p>\n</blockquote>\n<p>This seems like a decent point well made. Those of us who want to reduce tech behemoth monoculture absolutely need to reckon with the real value that social networks offer to users. </p>\n<blockquote>\n<p>standards like RSS and services like Instapaper show that pleasing formatting and distribution can be done at the platform level and be provided on top of existing vanilla websites.</p>\n</blockquote>\n<p>Thats a decent proof of concept the problem, as illustrated above, is around the tools and systems we’ve built for ourselves to make things “easier”.</p>\n<blockquote>\n<p>Okay, so let’s say we’re creating a new document web … First, you need a minimal, standardized markup language for sending documents around. … Then, you need a browser … Could you build a pure-Markdown-browsing browser that goes straight through this pipeline? Maybe?</p>\n</blockquote>\n<p>This is a pretty interesting idea, but sounds like it’s absolutely a subset of the current system which is railed against above. Maybe the idea is that it can grow independently  <em>from</em> being a subset <em>to</em> being something more. </p>\n<blockquote>\n<p>The problem with imagining the application web is that it’s pretty expansive.</p>\n</blockquote>\n<p>Yeah no shit tmcw. Im not sure how any of this gets around the problem outlined above: hostile takeover of a public spec by private tech behemoths. </p>\n<blockquote>\n<p>The worse the ‘Mac App Store’ and ‘Windows App Store’ and ’App Store’ and ’Play Store’ get, the bigger a cut those monopolies demand, the more it costs to be a Mac or Windows developer, the more that applications get pushed to the web. Sure, some applications are better on the web. But a lot are just there because it’s the only place left where you can easily, cheaply, and freely share or sell a product.</p>\n</blockquote>\n<p>Creating an “App Web” could so easily just colonize that space with those same models of monoculture. </p>\n<blockquote>\n<p>There are a lot of other ways to look at and solve this problem. I think it is a problem, for everyone except Google.</p>\n</blockquote>\n<p>Right, this is the goal for Google. And creating a new set of specs is not going to <em>solve</em> that problem, because that problem is a reflection of our current society and what we value and how we work. </p>\n<blockquote>\n<p>The idea of a web browser being something we can comprehend, of a web page being something that more people can make, feels exciting to me.</p>\n</blockquote>\n<p>This is a good goal, and I endorse it! Our medium tho is that of the technical monoculture, the baked in assumptions that a small group has used to create this new world. The issue is with the hardware and the physical things and the human society that surrounds and makes those things possible. </p>\n<blockquote>\n<p>What if we could start over?</p>\n</blockquote>\n<p>Tmcw is calling for a revolution of the web without being so explicit about it. The idea he is presenting is that there needs to be a messy, democratic, socialist approach to our <em>specs</em> that create more room for the individual, and that in empowering the individual with rights also creates a number of responsibilities to the society that they must uphold. This is a socialist argument for the web, and I wholly agree with it. I think that he needs to be explicit about what he’s actually calling for and imagine what the real world repercussions of the position would be, and how we need to make the same call of our society for the same ends. </p>\n","data":{"fm":{"title":"A Clean Start for the Web","slug":"macwright/a-clean-start-for-the-web","thesis":"How do we make the web fun, participatory, and good?","source":"https://macwright.com/2020/08/22/clean-starts-for-the-web.html","author":"Tom Macwright","year":2020,"tags":"internet, web","type":"annotation, bibliography"}},"map":""}],[null,{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"Coffee Time\",\"site\":\"http://coffeetime.io/\",\"date\":\"2014-04-24T00:00:00.000Z\",\"description\":\"An Android and iOS app designed to manage intra-office coffee debt. Designed the app itself and the accompanying website with <a href=\\\"http://paulcpederson.com\\\">Paul Pederson</a>. API and back-end by the wonderful team at Esri PDX.\",\"type\":\"projects, esri\",\"archived\":true};\n\tconst { title, site, date, description, type, archived } = metadata;\n</script>\n\n<p><img src=\"./title.png\" alt=\"Coffee Time\"></p>\n<p><img src=\"./app.png\" alt=\"Coffee Time\"></p>\n<p><img src=\"./api.png\" alt=\"Coffee Time\"></p>\n<p><img src=\"./docs.png\" alt=\"Coffee Time\"></p>\n","data":{"fm":{"title":"Coffee Time","site":"http://coffeetime.io/","date":"2014-04-24T00:00:00.000Z","description":"An Android and iOS app designed to manage intra-office coffee debt. Designed the app itself and the accompanying website with <a href=\"http://paulcpederson.com\">Paul Pederson</a>. API and back-end by the wonderful team at Esri PDX.","type":"projects, esri","archived":true}},"map":""}],["frost/design-systems-agile-and-industrialization",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"Design Systems, Agile, and Industrialization\",\"slug\":\"frost/design-systems-agile-and-industrialization\",\"author\":\"Brad Frost\",\"year\":2020,\"source\":\"https://bradfrost.com/blog/post/design-systems-agile-and-industrialization/\",\"thesis\":\"Design systems are reflections of organizational processes.\",\"tags\":\"design systems, design/development\",\"type\":\"annotation, bibliography\"};\n\tconst { title, slug, author, year, source, thesis, tags, type } = metadata;\n</script>\n\n<blockquote>\n<p>There’s a big difference between having smart, reusable patterns at your disposal and creating a dictatorial culture designed to enforce conformity and swat down anyone coloring outside the lines.</p>\n</blockquote>\n<p>Frost is responding to the concert that design systems can enforce a Taylorist dehumanization of our work, but that they only do this as a reflection of existing organizational principles.</p>\n<p>Working with other leaders in the design systems world, Frost suggests that design systems should be boring – that is they should primarily focus on the parts of the process that are foundational and allow of the team to do spend time on the interesting problems.</p>\n<blockquote>\n<p>Not having to reinvent things from scratch every time you need something is generally a good idea.</p>\n</blockquote>\n<p>The work that we do under the system of ‘Agile’ is part of the organization structure that pushes for Taylorized dehumanization of web development. Our systems that we build have the ability to either support individual expression and humanity, or to suppress it. The difference between these outcomes is the broader system underlying our approaches to work.</p>\n","data":{"fm":{"title":"Design Systems, Agile, and Industrialization","slug":"frost/design-systems-agile-and-industrialization","author":"Brad Frost","year":2020,"source":"https://bradfrost.com/blog/post/design-systems-agile-and-industrialization/","thesis":"Design systems are reflections of organizational processes.","tags":"design systems, design/development","type":"annotation, bibliography"}},"map":""}],["eastfork-pottery",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"East Fork Pottery\",\"slug\":\"eastfork-pottery\",\"date\":\"2018.06.25\",\"site\":\"https://eastforkpottery.com\",\"description\":\"Pushing the Shopify platform to its limits to create a smooth and playful experience.\",\"type\":\"projects, fuzzco\"};\n\tconst { title, slug, date, site, description, type } = metadata;\n</script>\n\n<p>Alex & Connie Mattisse run Eastfork Pottery out of Asheville, NC. They both have a strong design sense, and a clear understanding of their brands identity and point of view. </p>\n<p>This meant that the challenges of this project centered around pushing Shopify towards a more contemporary client-side user experience, including lazy-loading grid items and smooth client-side page transitions.</p>\n<p><img\n  src=\"https://photos.smugmug.com/Projects/Eastfork/i-cP8LrmX/0/ddeae95c/X5/home-X5.png\"\n  alt=\"home\"\n></p>\n<p>The project had a strong editorial design aspect, simple layout with strong typography and photography.</p>\n<p><img\n  src=\"https://photos.smugmug.com/Projects/Eastfork/i-vQ7T4bm/0/d731ecea/X5/pottery-X5.png\"\n  alt=\"pottery\"\n></p>\n<p>The catalog view used a staggered grid that repeated every 15 items. This meant I needed to request paginated sets of items in multiples of 15, then repeat the layout within the pages. </p>\n<p><img\n  src=\"https://photos.smugmug.com/Projects/Eastfork/i-hCHnw2C/0/2caa267e/X5/modal-X5.png\"\n  alt=\"modal\"\n></p>\n<p>A quick shopping modal from the catalog view allows for browsing and adding items to the cart without going back and forth to individual item pages. The color option swatches swap the active image for quickly previewing the many colorways.</p>\n<p><img\n  src=\"https://photos.smugmug.com/Projects/Eastfork/i-zQQcHhf/0/e406a0b6/X5/description-X5.png\"\n  alt=\"description\"\n></p>\n<p>The product detail pages needed to carry the editorial feel, and allow for the voice to exist for products.  </p>\n<p>[TK] The registry</p>\n<p>[TK] The animated logo goodness.</p>\n<p><img\n  src=\"https://photos.smugmug.com/Projects/Eastfork/i-GFMq4LN/0/7f9fd3c9/X3/cart-X3.png\"\n  alt=\"cart\"\n></p>\n<p>The UX for the cart needed to avoid the standard form submission for updating the cart contents. Abstracting the cart interactions into an API that can be called by use actions on the DOM was critical – and allowed us to have natural update methods tied directly to input interactions.</p>\n<p>[TK] The quiz thingy, and the need to add arbitrary data to the cart that gets carried through to the packing manager.</p>\n<p>[TK] The add a gift card bit</p>\n<p><img\n  src=\"https://photos.smugmug.com/Projects/Eastfork/i-BwfNf2t/0/a59a20e1/X5/about-X5.png\"\n  alt=\"about\"\n></p>\n<p>Another interesting design moment was the image treatment on the long-form content pages. Each page as a unique colorway in reference to the season glazes (configurable for each section from the Shopify Admin interface), and the images are a gray-scaled and multiplied over the background color. On hover, the image transitions to a full-color treatment. Animating the transition between these sates is tricky – CSS blend modes cannot be transitioned as they are binary states. The effect is achieved by having <em>two</em> images, one with the multiply & grayscale, and one full-color but transparent positioned above it. On hover, the opacity of the top image is transitioned, providing the desired effect.</p>\n","data":{"fm":{"title":"East Fork Pottery","slug":"eastfork-pottery","date":"2018.06.25","site":"https://eastforkpottery.com","description":"Pushing the Shopify platform to its limits to create a smooth and playful experience.","type":"projects, fuzzco"}},"map":""}],["empty-room-i",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"An Empty Room I\",\"slug\":\"empty-room-i\",\"source\":\"https://photos.smugmug.com/Prints/Prints/i-ZTNJTLf/0/7af009e0/XL/empty-room-1-800-XL.png\",\"alt\":\"Black and white Risograph with halftone dots depecting an empty room, looking through an archway to a door.\",\"description\":\"One layer Risograph on Stonehenge Cream \\\\#110\",\"date\":\"2017.01.01\",\"edition\":10,\"size\":\"5x5 inches.\",\"media\":\"Risograph\",\"type\":\"art, risograph, edition\"};\n\tconst { title, slug, source, alt, description, date, edition, size, media, type } = metadata;\n</script>\n\n\n","data":{"fm":{"title":"An Empty Room I","slug":"empty-room-i","source":"https://photos.smugmug.com/Prints/Prints/i-ZTNJTLf/0/7af009e0/XL/empty-room-1-800-XL.png","alt":"Black and white Risograph with halftone dots depecting an empty room, looking through an archway to a door.","description":"One layer Risograph on Stonehenge Cream \\#110","date":"2017.01.01","edition":10,"size":"5x5 inches.","media":"Risograph","type":"art, risograph, edition"}},"map":""}],["empty-room-i",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"An Empty Room II\",\"slug\":\"empty-room-i\",\"source\":\"https://photos.smugmug.com/Prints/Prints/i-swpfRT6/0/afe88f66/XL/empty-room-2-800-XL.png\",\"alt\":\"Black and white Risograph with halftone dots, looking down a hallway into a kitchen with a diamond floor pattern.\",\"description\":\"One layer Risograph on Stonehenge Cream \\\\#110\",\"date\":\"2017.01.02\",\"edition\":10,\"size\":\"5x5 inches.\",\"media\":\"Risograph\",\"type\":\"art, risograph, edition\"};\n\tconst { title, slug, source, alt, description, date, edition, size, media, type } = metadata;\n</script>\n\n\n","data":{"fm":{"title":"An Empty Room II","slug":"empty-room-i","source":"https://photos.smugmug.com/Prints/Prints/i-swpfRT6/0/afe88f66/XL/empty-room-2-800-XL.png","alt":"Black and white Risograph with halftone dots, looking down a hallway into a kitchen with a diamond floor pattern.","description":"One layer Risograph on Stonehenge Cream \\#110","date":"2017.01.02","edition":10,"size":"5x5 inches.","media":"Risograph","type":"art, risograph, edition"}},"map":""}],["empty-room-i",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"An Empty Room III\",\"slug\":\"empty-room-i\",\"source\":\"https://photos.smugmug.com/Prints/Prints/i-ZJ5zFbh/0/00bd2583/XL/empty-room-3-800-XL.png\",\"alt\":\"Black and white Risograph with halftone dots depecting an empty room with an old telephone next to a closet.\",\"description\":\"One layer Risograph on Stonehenge Cream \\\\#110\",\"date\":\"2017.01.03\",\"edition\":10,\"size\":\"5x5 inches.\",\"media\":\"Risograph\",\"type\":\"art, risograph, edition\"};\n\tconst { title, slug, source, alt, description, date, edition, size, media, type } = metadata;\n</script>\n\n\n","data":{"fm":{"title":"An Empty Room III","slug":"empty-room-i","source":"https://photos.smugmug.com/Prints/Prints/i-ZJ5zFbh/0/00bd2583/XL/empty-room-3-800-XL.png","alt":"Black and white Risograph with halftone dots depecting an empty room with an old telephone next to a closet.","description":"One layer Risograph on Stonehenge Cream \\#110","date":"2017.01.03","edition":10,"size":"5x5 inches.","media":"Risograph","type":"art, risograph, edition"}},"map":""}],["empty-room-i",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"An Empty Room IV\",\"slug\":\"empty-room-i\",\"source\":\"https://photos.smugmug.com/Prints/Prints/i-qxW2n3g/0/eaedebbd/XL/empty-room-4-800-XL.png\",\"alt\":\"Black and white Risograph with halftone dots depecting an empty room, a radiator by a doorframe.\",\"description\":\"One layer Risograph on Stonehenge Cream \\\\#110\",\"date\":\"2017.01.04\",\"edition\":10,\"size\":\"5x5 inches.\",\"media\":\"Risograph\",\"type\":\"art, risograph, edition\"};\n\tconst { title, slug, source, alt, description, date, edition, size, media, type } = metadata;\n</script>\n\n\n","data":{"fm":{"title":"An Empty Room IV","slug":"empty-room-i","source":"https://photos.smugmug.com/Prints/Prints/i-qxW2n3g/0/eaedebbd/XL/empty-room-4-800-XL.png","alt":"Black and white Risograph with halftone dots depecting an empty room, a radiator by a doorframe.","description":"One layer Risograph on Stonehenge Cream \\#110","date":"2017.01.04","edition":10,"size":"5x5 inches.","media":"Risograph","type":"art, risograph, edition"}},"map":""}],["empty-room-i",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"An Empty Room V\",\"slug\":\"empty-room-i\",\"source\":\"https://photos.smugmug.com/Prints/Prints/i-K3KMsx8/0/49163269/XL/empty-room-5-800-XL.png\",\"alt\":\"Black and white Risograph with halftone dots depecting an empty room, a small closet in the foreground.\",\"description\":\"One layer Risograph on Stonehenge Cream \\\\#110\",\"date\":\"2017.01.05\",\"edition\":10,\"size\":\"5x5 inches.\",\"media\":\"Risograph\",\"type\":\"art, risograph, edition\"};\n\tconst { title, slug, source, alt, description, date, edition, size, media, type } = metadata;\n</script>\n\n\n","data":{"fm":{"title":"An Empty Room V","slug":"empty-room-i","source":"https://photos.smugmug.com/Prints/Prints/i-K3KMsx8/0/49163269/XL/empty-room-5-800-XL.png","alt":"Black and white Risograph with halftone dots depecting an empty room, a small closet in the foreground.","description":"One layer Risograph on Stonehenge Cream \\#110","date":"2017.01.05","edition":10,"size":"5x5 inches.","media":"Risograph","type":"art, risograph, edition"}},"map":""}],["chimero/everything-easy-is-hard-again",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"Everything Easy is Hard Again\",\"slug\":\"chimero/everything-easy-is-hard-again\",\"author\":\"Frank Chimero\",\"source\":\"https://frankchimero.com/blog/2018/everything-easy/\",\"tags\":\"internet, web\",\"type\":\"annotation, bibliography\"};\n\tconst { title, slug, author, source, tags, type } = metadata;\n</script>\n\n\n","data":{"fm":{"title":"Everything Easy is Hard Again","slug":"chimero/everything-easy-is-hard-again","author":"Frank Chimero","source":"https://frankchimero.com/blog/2018/everything-easy/","tags":"internet, web","type":"annotation, bibliography"}},"map":""}],["factorial-race",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"Factorial! Race!\",\"description\":\"Finding an upper limit on factorials in JavaScript\",\"date\":\"2021.06.07\",\"slug\":\"factorial-race\",\"type\":\"text, texts\"};\n\tconst { title, description, date, slug, type } = metadata;\n</script>\n\n<p>For the past while now, I’ve been tinkering on <a\n  href=\"https://www.dicegraph.com/\"\n  rel=\"nofollow\"\n>a side project</a> that builds and graphs arbitrary probability distributions created by dice rolling outcomes. It’s extremely niche and dorky, but it’s a been a really fun way to explore both product design development and new concepts in math and programming that have otherwise never presented themselves during my career.</p>\n<p>This is an article about the second bit.</p>\n<p>One of the interesting things that I discovered early on was that when adding the ability to <em>multiply and reduce</em> dice rather than just <em>multiply or reduce</em> dice (ie; roll 1d6, roll the resulting number of dice, on a 4 or higher roll again, sum the total results. Complicated!) the distributions are <a\n  href=\"https://en.wikipedia.org/wiki/Normal_distribution\"\n  rel=\"nofollow\"\n>not normal</a>, which means in order to actually graph the distribution we need to calculate every possible outcome. Not a big deal, since computers are good at this sort of stuff!</p>\n<p>However, I quickly discovered an upper bound: the calculation requires working with <a\n  href=\"https://en.wikipedia.org/wiki/Factorial\"\n  rel=\"nofollow\"\n>factorials</a>. When the factorials get big, JavaScript gives up and returns <code>Infinity</code>. This is because there is <a\n  href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\"\n  rel=\"nofollow\"\n>a maximum limit</a> to the size of a double-precision floating-point number that JS uses for the <code>Number</code> type. Wow, this got both mathy and programmery really quickly.</p>\n<p>This gave us an upper bound of <code>170!</code>, since the rest of the distribution calculations don’t like it when you pass them <code>Infinity</code>.</p>\n<pre class=\"language-js\">{@html `<code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">factorial</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> x <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">?</span> x <span class=\"token operator\">*</span> <span class=\"token function\">factorial</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n<span class=\"token function\">factorial</span><span class=\"token punctuation\">(</span><span class=\"token number\">170</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 7.257415615307994e+306</span>\n<span class=\"token function\">factorial</span><span class=\"token punctuation\">(</span><span class=\"token number\">171</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Infinity</span></code>`}</pre>\n<p>Lucky for us, JavaScript has implemented a <a\n  href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt\"\n  rel=\"nofollow\"\n>Big Integer</a> type for integers that are … well … big! I was able to refactor my <code>factorial</code> function to use <code>BigInt</code>s.</p>\n<pre class=\"language-js\">{@html `<code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">big_factorial</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> x <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">?</span> x <span class=\"token operator\">*</span> <span class=\"token function\">big_factorial</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">-</span> <span class=\"token function\">BigInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">BigInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">big_factorial</span><span class=\"token punctuation\">(</span><span class=\"token function\">BigInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">171</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 1241018070217667823424840524103103992616605577501693185388951803611996075221691752992751978120487585576464959501670387052809889858690710767331242032218484364310473577889968548278290754541561964852153468318044293239598173696899657235903947616152278558180061176365108428800000000000000000000000000000000000000000n</span></code>`}</pre>\n<p>So what’s our new upper bound? We can handle <code>170!</code> easily, how high can we go? <code>1,000!</code>? <code>10,000!</code>?</p>\n<pre class=\"language-js\">{@html `<code class=\"language-js\"><span class=\"token function\">big_factorial</span><span class=\"token punctuation\">(</span><span class=\"token function\">BigInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 402387260…0n</span>\n<span class=\"token function\">big_factorial</span><span class=\"token punctuation\">(</span><span class=\"token function\">BigInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">10000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// RangeError: Maximum call stack size exceeded</span></code>`}</pre>\n<p>Turns out <code>1,000!</code> is a walk in the park. <code>10,000!</code> gets a little more interesting! The error that returns on the function is about <a\n  href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Too_much_recursion\"\n  rel=\"nofollow\"\n>too much recursion</a>. We’re calling <code>big_factorial</code> <em>from</em> <code>big_factorial</code> ten thousand times and the browser thinks this means something is wrong, so it bails out on the process.</p>\n<p>So, what if we refactor our recursive <code>big_factorial</code> to use a loop?</p>\n<pre class=\"language-js\">{@html `<code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">big_fast_factorial</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">let</span> r <span class=\"token operator\">=</span> <span class=\"token function\">BigInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token function\">BigInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> x<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    r <span class=\"token operator\">=</span> r <span class=\"token operator\">*</span> i<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> r<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token function\">big_fast_factorial</span><span class=\"token punctuation\">(</span><span class=\"token function\">BigInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">10000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 284625…0n in about 70ms</span></code>`}</pre>\n<p><code>10,000!</code> is fast! We can get reliably get the result of that in less than 100ms. And since our loop will run as long as it needs to, our upper bound should now be based on compute and return time, rather than type errors or browser guardrails. Lets see what we can do now:</p>\n<pre class=\"language-js\">{@html `<code class=\"language-js\"><span class=\"token function\">big_fast_factorial</span><span class=\"token punctuation\">(</span><span class=\"token function\">BigInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">20000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// ~300ms</span>\n<span class=\"token function\">big_fast_factorial</span><span class=\"token punctuation\">(</span><span class=\"token function\">BigInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">30000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// ~650ms</span>\n<span class=\"token comment\">// …</span>\n<span class=\"token function\">big_fast_factorial</span><span class=\"token punctuation\">(</span><span class=\"token function\">BigInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">90000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// ~7238ms</span>\n<span class=\"token function\">big_fast_factorial</span><span class=\"token punctuation\">(</span><span class=\"token function\">BigInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">100000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// ~9266ms</span></code>`}</pre>\n<p>Things … start to get slow above 30 or 40 thousand factorial. Every additional ten thousand to our initial number adds more and more time to the compute function. Im sure theres some fancy <code>O(n)</code> complexity notation to express this, but I don’t really want to figure that out. It’s too slow to use an in a UI above say, <code>50,000!</code>.</p>\n<p>Turns out tho, even mathematicians don’t really calculate factorials this big. They use <a\n  href=\"https://en.wikipedia.org/wiki/Stirling%27s_approximation\"\n  rel=\"nofollow\"\n>Stirlings’ Approximation</a> instead, since it’s faster and “good enough”. It looks sort of like this:</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\">𝑒ln(𝑛!) = 𝑛!\nwhere\nln(𝑛!) = ∑𝑛𝑘=1(ln𝑛)</code>`}</pre>\n<p>It would be pretty cool to do this in JavaScript! And personally, I love “good enough”. I’ve already got a handy function for running Big Sigma calculations:</p>\n<pre class=\"language-js\">{@html `<code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">new_arr</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">s<span class=\"token punctuation\">,</span>n</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>s <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> n <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token function\">Array</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span> <span class=\"token operator\">=></span> v <span class=\"token operator\">></span> s<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Σ</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">min<span class=\"token punctuation\">,</span> max<span class=\"token punctuation\">,</span> fn</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">new_arr</span><span class=\"token punctuation\">(</span>min<span class=\"token punctuation\">,</span> max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">acc<span class=\"token punctuation\">,</span> val</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> acc<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></code>`}</pre>\n<p>So lets try this out:</p>\n<pre class=\"language-js\">{@html `<code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">log</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nMath<span class=\"token punctuation\">.</span><span class=\"token function\">exp</span><span class=\"token punctuation\">(</span><span class=\"token function\">Σ</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000000</span><span class=\"token punctuation\">,</span> log<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Infinity</span></code>`}</pre>\n<p>Oh no! The end result of our <code>1,000,000!</code> function <em>is still Infinity</em>. Thats because one million factorial is … very big. It could still fit into a <code>BigInt</code>, but then we have another problem: we cant run <code>Math</code> functions on the <code>BigInt</code> type. And we can’t rewrite the functions to use <code>BigInt</code>s because the type is, by definition, <em>only for integers</em>. and <code>𝑒</code> is definitely not an integer. Even a math library like <a\n  href=\"https://mathjs.org/\"\n  rel=\"nofollow\"\n>math.js</a> has the same issues around typing, despite trying to account for it.</p>\n<p>Naturally, this leads to a simple proposal: FaaStorials! Fast Factorials as a Service! Since factorials are immutable, it should be possible to store the first 1,000,000 or so in a database, and provide an API for querying and returning them. Even a slow network request would be faster than computing the factorial locally. It should be possible to crunch (slowly) all the factorials, and write them to a database for retrieval on demand. I wrote this function and got about 7,000 rows written before I realized it would probably be expensive.</p>\n<p>According to my rough estimating, <code>1,000,000!</code> would send a response that weights about <code>700kb</code>, and the whole database would be in the neighborhood of <code>350gb</code>. This would cost me about $80 a month to store, maybe $100 a month to pay for the requests as well. I pulled the plug on the script.</p>\n<p>As with many problems, the upper bound ends up being defined by time and money, the end!</p>\n","data":{"fm":{"title":"Factorial! Race!","description":"Finding an upper limit on factorials in JavaScript","date":"2021.06.07","slug":"factorial-race","type":"text, texts"}},"map":""}],["lencioni/five-disfunctions",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"The Five Dysfunctions of a Team\",\"slug\":\"lencioni/five-disfunctions\",\"author\":\"Patrick Lencioni\",\"year\":2002,\"source\":\"https://www.tablegroup.com/books/dysfunctions/\",\"tags\":\"business, teamwork\",\"thesis\":\"Someone sent me a copy of _The Five Dysfunctions of a Team_. I didn't really like it.\",\"type\":\"annotation, bibliography\"};\n\tconst { title, slug, author, year, source, tags, thesis, type } = metadata;\n</script>\n\n<p><em>The Five Dysfunctions of a Team</em> by Lencioni reads like middle-manager fan fiction. Beyond the outrageously bad dialogue and cutely arranged set pieces, all spread out across large type, short chapters, and generous white space to pad this brief seminar into a “real book”, Lencioni’s thesis throughout is freighted with the zeitgeist of the early 2000s late capitalist striving.</p>\n<p>Structuring this self-help seminar for middle managers disillusioned with their directionless grind to nowhere as a “fable” (or “bad fiction”) makes it read like a shockingly earnest first draft of Max Barry’s <em>Company</em>, which is a satirical skewering of corporate management consultants and practices.</p>\n<p>Team dysfunctions are seen as failings of individual actions, and that the behavior of individuals in a team is the root cause for failure of the team. This implies that behaving differently in an organization is enough to the change the outcomes of that organization. This is flatly untrue - individuals have little to no ability to change the outcomes of structural and organizational decisions that have been built into the fabric of the group. Lencioni’s fictional startup is built on capitalist axioms that inherently undermine the very points he’s trying to argue. For instance, the root dysfunction he identifies is “Lack of Trust”. There is literally no reason, cause, or benefit to “trusting” a corporate team. When employment is at will and there are no protections for workers, focusing on individual impact and the appearance of productivity to peers and higher ups becomes the sole function of work. Placing the goals and priorities of an organization above your own is deeply foolish when that same organization has no doubts or qualms about your place in it. The organization of structural power defines the absence or presence trust, and individual behavior has no sway on that power structure.</p>\n<p>The dysfunctions in total are as follows: Absence of trust, fear of conflict, lack of commitment, avoidance of accountability, and inattention to results. When viewed through the lense of structural power, it’s clear that absence of trust and fear of conflict are two sides of the same coin - as are lack of commitment and avoidance of accountability. All four are more easily understood by the systems that are in place for doing work rather than behaviors of individuals. The fifth is perhaps true, but nearly tautological to the point of uselessness. To imply that a dysfunction team is inattentive to any results is absurd, so the implication is that the team is inattentive to the <em>correct</em> results. If you focus on the right thing you won’t be wrong. Not very helpful. Again, the lense of organizational power is helpful: instead of asking what results are attended to, the question becomes what results are valued and rewarded.</p>\n<p>The approach that Lencioni takes in demonstrating (crudely) his ideal team also suffers from one of the key rhetorical traps outlined in <em>Keywords: The New Language of Capitalism</em> by Leary - speaking of the corporate as if it where literally corporal. The Team in this case becomes embodied, and in doing so it erases the humanity of its members. This is the key contradiction in the dysfunctions - Lencioni identifies that the only way to sublimate ones individuality away for the sake of the corporate structure is through individual improvement, which he equates to moral improvement. This is perhaps less a flaw in his reasoning than a description of corporate America’s ideal employee. The corporation desires all of the reward and benefit of your labor, and the complete devotion of yourself to producing that labor, while disavowing any risks or consequences that may attend it as your own personal problem. Lencioni deserves credit at least for outlining the goals and structures of vampire capitalism so clearly.</p>\n<p>Lencioni continues to show that a team of leaders <em>must</em> necessarily remove themselves from the teams they lead, and create a cloister amongst themselves. In doing so, he advocates for placing the goals of the collective leadership team over their individual goals and the goals of their individual groups. This is the regular party line for corporate technocrats: the humans below us whom we rely on to perform labor matters less than the group of peers who direct and profit from that labor. This rhetoric performs two jobs; the first is working to distance the powerless from the powerful, and the second to justify the distance that the powerful already sense between them and their subjects. There can be no relationship of peers between a rich owner of a company and white collar workers whose labor they profit from. It’s been known and observed that being rich and owning companies means you are no longer able to act like or understand people who are not rich or own companies. You lose empathy for them, and see only other rich owners as your group of peers. Lencioni works to sooth any moral qualms the rich may have about this while indoctrinating the middle managers who are the true audience to the necessity of aligning with capital over labor. This scene immediately segues into our brave executive team having a conversation about “adjusting the amount of resources allocated to engineering” - in other word firing people.</p>\n<p>This is the core issue I have with the entire book. Any consequences of wielding power are firmly denied - placed within the realm of the “strategic decision” while the political structure of the corporation demands and requires individual subservience to collective goals with absolutely no reciprocation of any kind. Sorry, it’s a strategic decision and we’re allocating resources elsewhere. Now your entire family doesn’t have health insurance. Is anyone truly surprised that an absence of trust is endemic to the corporate structure?</p>\n<p>Lencioni goes on to demonstrate a firing in action. “My husband is a lawyer so you will have a tough time making the case to fire me?” What is this? This is insane. In what world do these people live in where at-will employment isn’t a thing? You can be fired at any time for any reason. The VP in question goes on to negotiate her own firing. 3 months severance and instant vesting of stock. Is this seriously how Lencioni imagines this works? Is this really how this works for these people? Because for people like me it’s much more like “hand in your gun and your badge immediately, we’ll give you two weeks severance if you sign this NDA”. People like me <em>want</em> to be fired so we can collect unemployment. And later, “Companies don’t usually fire contractors” what planet is this dude on?</p>\n<p>Through the book, Lencioni uses phrases and idiomatic structures that I don’t think I’ve ever encountered before. “Enter the danger.” What does that mean? Is it the danger zone?  These come at a quick pace, and are present in both the dialog and the interstitial narration. The overall effect is one of complete disorientation, the feeling is that your bobbing at sea in the text without being able to get firm bearings on any sort of shared, consensus reality. “They called each other on the carpet”? What the fuck?</p>\n<p>Our hero’s behavior definitely looks like what CEOs and top brass like to pretend they are doing, so we’re creating tautological support for managers to continue doing whatever they are already doing and dressing it up as an insight. The only thing that’s surprising about this grift is that I didn’t realize what was happening sooner.</p>\n<p>This book has a terrible definition of politics - instead of embracing that politics is the application of power (and therefor inherent and necessary in any social group, especially a firm) Lencioni seems to define politics as dishonest interpersonal behavior -“acting a given way in order to solicit a certain reaction” or something. This shows that Lencioni has absolutely no understanding of the power that the heads of firms do wield, as understanding the mechanisms of that power would necessarily be politics.</p>\n<p>In a scene where the executives are considering selling the company, we see them weighing the decision in terms of their own personal benefit. This means they each own a good amount of stock. This means that they are owners of the company. This means that they have a completely different relationship to the work as their employees, who are not owners, own no stock, and make no decisions. What does this do for our middle manager audience? They reject the offer, so it must be a lesson in valuing the work over the money (or a reinforcement that the whole point is to chase more and more money)</p>\n<p>The final 35 pages of the book are the actual seminar - Lencioni has padded 35 pages of content into 222 (not counting the final dedication to the fallen of 9/11 to really cement the early 2000’s tone). The seminar includes a questionnaire that each member of a team should fill out, however it helpfully reminds the reader that no part of the assessment may be reproduced or stored in any way. I guess you have to buy everyone a book and have them fill it out in the book. At the end of the assessment there is an advertisement for Lencioni’s consulting services. The transparent grift is breathtaking. The overview of the dysfunctions solidify the slog of the previous terrible fiction: in short that the individual behavior and interpersonal relationships are more important than organizational structure in defining outcomes, and that what behaviors you are currently doing are correct but you should probably hire Lencioni as a consultant because it takes constant work and maintenance to avoid falling apart.</p>\n<p>In short, a perfect grift to tell the Silicon Valley middle manager or executive exactly what they want to hear, formulated in a way to extract as much money out of them as possible.</p>\n","data":{"fm":{"title":"The Five Dysfunctions of a Team","slug":"lencioni/five-disfunctions","author":"Patrick Lencioni","year":2002,"source":"https://www.tablegroup.com/books/dysfunctions/","tags":"business, teamwork","thesis":"Someone sent me a copy of _The Five Dysfunctions of a Team_. I didn't really like it.","type":"annotation, bibliography"}},"map":""}],["eco/foucaults-pendulum",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"Foucault's Pendulum\",\"slug\":\"eco/foucaults-pendulum\",\"author\":\"Umberto Eco\",\"year\":1982,\"source\":\"https://bookshop.org/books/foucault-s-pendulum-9780151327652/9780156032971\",\"tags\":\"conspiracies, numerology\",\"thesis\":\"The horror of meaninglessness leads us to seek a deeper meaning in pareidolic connections of arbitrary facts. Actively encouraging this tendency — even cynically and for profit — can lead to earnest commitment from your audience and end in tragedy.\",\"type\":\"annotation, bibliography\"};\n\tconst { title, slug, author, year, source, tags, thesis, type } = metadata;\n</script>\n\n<p>Reading Foucault’s Pendulum in 2021 was a deeply depressing experience. </p>\n<p>To speak directly to the current client of conspiracy theory and American politics, Eco deals <em>explicitly and directly</em> with emergent facism and proliferation of conspiracy theory. In 1982. And focuses on Christian nationalism. In 1982. And basically sketches out the situation that led to the crises that led to Jan. 6. In 1982. </p>\n<p>It’s a great book — long and winding, with a compelling <em>in media res</em> that centers Eco’s <em>probably unique</em> interest and understanding of Italian post-war facism and semiotics. While the primary story is told by the narrator Casaubon, most of the books told as other, tangentially related stories. Some of these are Casaubon’s, a lot of these are another character Belbo’s, and the rest are from a wide variety of strange and interesting characters they meet. </p>\n<p>As far as the plot goes, the story is about the Knights Templar and Gnostic mysticism. The fundamental premise of the novel is that there are a lot of coincidences around historical stories that have really unsatisfying explanations, and in to this void step the gnostics, who are sure that there is something that can be known that will explain everything. And by everything, we get to explanations of <em>everything</em>. Our protagonists Casaubon, Belbo, and Diatollevi, seek to create the grand unified theory of everything. They build on gnostic traditions and methods to explain a cohesive story of the unexplained. They call is “The Plan”. Initially they do it from a sense of cynical parody, then from an attempt to extract money from their marks, and ultimately they fall victim to the appeal of the pareidolic connection, and convince themselves that this is a natural way of interpreting history. This has immense consequences for all three of them. </p>\n<p>There is a lot I’m not touching on here — from the role that the women in the novel play (problematic at best, especially with Lorenza, and I’m not too sure about Eco’s treatment of Lia, the novels most level-headed character) to specific Christian theological histories (honestly I just don’t give a shit). But the core of the book is worth considering in relation to our current time and place.</p>\n","data":{"fm":{"title":"Foucault's Pendulum","slug":"eco/foucaults-pendulum","author":"Umberto Eco","year":1982,"source":"https://bookshop.org/books/foucault-s-pendulum-9780151327652/9780156032971","tags":"conspiracies, numerology","thesis":"The horror of meaninglessness leads us to seek a deeper meaning in pareidolic connections of arbitrary facts. Actively encouraging this tendency — even cynically and for profit — can lead to earnest commitment from your audience and end in tragedy.","type":"annotation, bibliography"}},"map":""}],["fun-with-json-ld",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"Fun With JSON-LD\",\"slug\":\"fun-with-json-ld\",\"description\":\"Learning about JSON-LD is all about and why we should.\",\"date\":\"2020.08.25\",\"type\":\"text, texts\"};\n\tconst { title, slug, description, date, type } = metadata;\n</script>\n\n<p>Working with <a href=\"https://www.adamriemer.me/\" rel=\"nofollow\">Adam Riemer</a> on SmugMug’s SEO has been a really illuminating experience. SEO consulting has always been flagged in my mind as “Snake Oil Business”, but Adam really is the best in the field. Almost all of his SEO suggestions focus on performance and accessibility, and he has some clear, hard metrics to define “good”. This squares with my fundamental understanding of good SEO practices, and has broadened my horizons and understanding of of the practice.</p>\n<p>Something that Adam introduced me to is JSON-LD – a way of creating structured metadata for pages that’s more explicit that microdata formats. Here’s what I’ve learned about JSON-LD so far. </p>\n<p>JSON-LD is Google’s preferred format for accurately and succinctly structuring metadata for pages. This gives them insight into what’s on your page and why, and they use The Algorithm to interact and consume this data. Using their standards gives you the <em>opportunity</em> to get top, fancy search results but there’s no guarantee of that. The best thing to do is to use your structured data to give the best, more accurate, and complete picture of what content your page has for your audience. Trying to game SEO here is probably going to backfire, just describe things as they are as clearly as possible.</p>\n<p>The primary <em>purpose</em> of structured data is to create a machine-readable and algorithm friendly metadata for your content. This allows the content to be consumed by the crawlers and the robots, and join in the mesh of content that Google exposes to users when they perform searches or ask questions of it.</p>\n<p>Clearly this is a double-edged proposition. By using structured data you’re explicitly buying in to the ecosystem that Google is creating, and allowing your content to be trawled and used and understood however they want. You undoubtable end up providing value to Google in excess to what they are providing to you. Not to mention participating in the project of making the world machine-readable, which has it’s own philosophical freight. </p>\n<p><a href=\"https://schema.org/\" rel=\"nofollow\">Schema.org</a> has a lot of data types that might be appropriate for your project: Articles, Books, Breadcrumbs, Carousel, Course, Critic Review, Dataset, Event, How-to, Local Business, Movie, Podcast, Product, Software App, and Video are all ones that look interesting to me. </p>\n<p>For something like this site, we’re using pretty much entirely <code>Website</code> and <code>Article</code> – and connect them with a <code>CollectionPage</code> and a <code>Person</code> who is me! Maybe some of the art will be a <code>CreativeWork</code>.</p>\n<p>Some information on these types:</p>\n<ul>\n<li>Article: <a\n  href=\"https://schema.org/Article\"\n  rel=\"nofollow\"\n>https://schema.org/Article</a></li>\n<li>Person: <a\n  href=\"https://schema.org/Person\"\n  rel=\"nofollow\"\n>https://schema.org/Person</a></li>\n<li>Collection Page: <a\n  href=\"https://schema.org/CollectionPage\"\n  rel=\"nofollow\"\n>https://schema.org/CollectionPage</a></li>\n<li>Creative Work: <a\n  href=\"https://schema.org/CreativeWork\"\n  rel=\"nofollow\"\n>https://schema.org/CreativeWork</a></li>\n<li>Web Site: <a\n  href=\"https://schema.org/WebSite\"\n  rel=\"nofollow\"\n>https://schema.org/WebSite</a></li>\n</ul>\n<p>Lets work through <a\n  href=\"https://developers.google.com/search/docs/data-types/article\"\n  rel=\"nofollow\"\n>Google’s example of an article</a>, maybe for this article!</p>\n<p>Here’s the <code>script</code> tag that is home to our structured data:</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\">&lt;script type=&quot;application/ld+json&quot;&gt;\n…\n&lt;/script&gt;</code>`}</pre>\n<p>We fill it with a JSON object that describes our data structure:</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\">&#123;\n  &quot;@context&quot;: &quot;https://schema.org&quot;,\n  &quot;@type&quot;: &quot;Article&quot;,\n  &quot;headline&quot;: &quot;Article headline&quot;,\n  &quot;datePublished&quot;: &quot;2020-08-25T16:42:53.786Z&quot;,\n  &quot;dateModified&quot;: &quot;2020-08-25T16:42:53.786Z&quot;\n&#125;</code>`}</pre>\n<p>The <code>@context</code> key clues the robot in to the data definition we’re going to be using, which is the <code>schema.org</code> definitions. The <code>@type</code> tag associates the following data with the pre-defined structure. From there on it’s relevant data! <code>headline</code>, <code>datePublished</code> and <code>dateModified</code> are all directly pulled from the content itself. In out case our data looks like this:</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\">&#123;\n  &quot;@context&quot;: &quot;https://schema.org&quot;,\n  &quot;@type&quot;: &quot;Article&quot;,\n  &quot;headline&quot;: &quot;Fun With JSON-LD&quot;,\n  &quot;datePublished&quot;: &quot;2020-08-12T08:00:00+08:00&quot;,\n  &quot;dateModified&quot;: &quot;2020-08-12T08:00:00+08:00&quot;\n&#125;</code>`}</pre>\n<p>Open question: <code>BlogPosting</code> or <code>Article</code>? Im going to stick with <code>BlogPosting</code> since these texts are really just that. I would use <code>Article</code> if I was writing a news piece or a review, or something maybe more scholarly. </p>\n<p>The last required field is an <code>image</code>:</p>\n<blockquote>\n<p>For best results, provide multiple high-resolution images (minimum of 300,000 pixels when multiplying width and height) with the following aspect ratios: 16x9, 4x3, and 1x1.</p>\n</blockquote>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\">&#123;\n\t…\n  &quot;image&quot;: [\n    &quot;https://example.com/photos/1x1/photo.jpg&quot;,\n    &quot;https://example.com/photos/4x3/photo.jpg&quot;,\n    &quot;https://example.com/photos/16x9/photo.jpg&quot;\n  ]\n&#125;</code>`}</pre>\n<p>This means that creating thumbnails for every Article is important, and those images need to exist on the page in a way that user can see. </p>\n<p>For this site, the main use of these images is going to be for sharing thumbnails. The fact that the image needs to be on the pages is interesting, since that really influences the design of the page. I’ve found that creating the necessity for a prominent thumbnail or hero image that accompanies each article is a recipe for a) not writing articles and b) bland stock photography. I want to avoid both. That means for this site I’m going to do illustrated images, small sketches and motif explorations that may or may not illustrate the article, and attach it to the <em>bottom</em> of the article.</p>\n<p>There are two other sections I want to look at, even though they are not requirements according to Google. These are the <code>author</code> and the <code>publisher</code> fields. The goal of using these fields is to create an association between you and your work; or in the case of the <code>publisher</code> field between an imprint entity and the creative works they’ve published. In our use case for this site, my goal is to create a machine-readable entity that is ‘Nikolas Wise’ and attach my articles and my work to that, in order to create a coherent entity that is exposed to the broader web. </p>\n<p>The <code>author</code> field is a <code>Person</code> or an <code>Organization</code>, the <code>publisher</code> field is an <code>Organization</code>. Lets start with <code>Person</code>:</p>\n<blockquote>\n<p>A person (alive, dead, undead, or fictional).\n<a\n  href=\"https://schema.org/Person\"\n  rel=\"nofollow\"\n>https://schema.org/Person</a></p>\n</blockquote>\n<p>It gets added to our LSON-LD like this:</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\">&#123;\n\t…\n  &quot;author&quot;: &#123;\n\t  &quot;@type&quot;: &quot;Person&quot;,\n\t  …\n  &#125;\n&#125;</code>`}</pre>\n<p>There are a lot of properties in this schema, like <code>deathPlace</code> and <code>knows</code>. One could really get into this and make it a very robust and complete data object, but I’m not sure how much value that would bring at the end of the day. There’s a fine line between following specs and best practices to achieve a goal and ticking boxes to structure our lives solely in order to make them legible to the algorithm. I guess we each decide where that line is for ourselves.</p>\n<p>For me, I’m going to stick with <code>name</code>, <code>url</code>, <code>image</code>, <code>jobTitle</code>, <code>knowsLanguage</code>, and <code>sameAs</code>. Although <code>publishingPrinciples</code> seems interesting, and I might write one of those. </p>\n<p>Most of the fields are simple text strings, and can get filled out like so:</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\">&#123;\n\t…\n  &quot;author&quot;: &#123;\n\t  &quot;@type&quot;: &quot;Person&quot;,\n\t\t&quot;name&quot;: &quot;Nikolas Wise&quot;,\n\t\t&quot;url&quot;: &quot;https://nikolas.ws&quot;,\n\t\t&quot;image&quot;: &quot;https://photos.smugmug.com/Portraits/i-ThnJCF5/0/f9013fdc/X4/wise-X4.jpg&quot;,\n\t\t&quot;jobTitle&quot;: &quot;Web Developer&quot;,\n\t\t&quot;knowsLanguage&quot;: &quot;en, fr&quot;,\n\t\t&quot;sameAs&quot;: …,\n  &#125;\n&#125;</code>`}</pre>\n<p>The language codes are from the <a\n  href=\"https://tools.ietf.org/html/bcp47\"\n  rel=\"nofollow\"\n>language code spec</a>, and could also be <a\n  href=\"https://schema.org/Language\"\n  rel=\"nofollow\"\n>language</a> schema objects. The job title could be a <a\n  href=\"https://schema.org/DefinedTerm\"\n  rel=\"nofollow\"\n>Defined Term</a> schema object. </p>\n<p>The <code>sameAs</code> key is an interesting one, it’s either a URL or an array of URLs that connect this <code>@person</code> with other parts of the web that are <em>also</em> that <code>@person</code>. </p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\">&#123;\n\t…\n  &quot;@person&quot;: &#123;\n\t  …\n\t\t&quot;sameAs&quot;: [\n\t\t\t&quot;https://twitter.com/nikolaswise&quot;,\n\t\t\t&quot;https://github.com/nikolaswise&quot;,\n\t\t\t&quot;https://www.instagram.com/nikolaswise/&quot;,\n\t\t\t&quot;https://www.linkedin.com/in/nikolas-wise-6b170265/&quot;,\n\t\t],\n  &#125;\n&#125;</code>`}</pre>\n<p>This will connect “me” with this site and my twitter, github, instagram, and linkedin profiles. Those are the pages that I want to the algorithm to associate with “me”.</p>\n<p><code>@organization</code> is similar to <code>@person</code> in a lot of ways, and the fundamental idea is the same. The goal is to create a single entity that the algorithm can connect disparate pages and items too. I’m not going to set of an <code>@organization</code> here, but the the <a href=\"https://schema.org/Organization\" rel=\"nofollow\"><code>@organization</code> schema type</a> has the spec for the object. </p>\n<p>So that’s it! That means the entire JSON-LD for this article – and therefor the rest of the texts as well, looks like this:</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\">&lt;script type=&quot;application/ld+json&quot;&gt;\n\t&#123;\n\t  &quot;@context&quot;: &quot;https://schema.org&quot;,\n\t  &quot;@type&quot;: &quot;Article&quot;,\n\t  &quot;headline&quot;: &quot;Article headline&quot;,\n\t  &quot;datePublished&quot;: &quot;2020-08-25T16:42:53.786Z&quot;,\n\t  &quot;dateModified&quot;: &quot;2020-08-25T16:42:53.786Z&quot;,\n\t  &quot;image&quot;: [\n\t    &quot;https://example.com/photos/1x1/photo.jpg&quot;,\n\t    &quot;https://example.com/photos/4x3/photo.jpg&quot;,\n\t    &quot;https://example.com/photos/16x9/photo.jpg&quot;\n\t  ],\n\t  &quot;author&quot;: &#123;\n\t\t  &quot;@type&quot;: &quot;Person&quot;,\n\t\t\t&quot;name&quot;: &quot;Nikolas Wise&quot;,\n\t\t\t&quot;url&quot;: &quot;https://nikolas.ws&quot;,\n\t\t\t&quot;image&quot;: &quot;https://photos.smugmug.com/Portraits/i-ThnJCF5/0/f9013fdc/X4/wise-X4.jpg&quot;,\n\t\t\t&quot;jobTitle&quot;: &quot;Web Developer&quot;,\n\t\t\t&quot;knowsLanguage&quot;: &quot;en, fr&quot;,\n\t\t\t&quot;sameAs&quot;: [\n\t\t\t\t&quot;https://twitter.com/nikolaswise&quot;,\n\t\t\t\t&quot;https://github.com/nikolaswise&quot;,\n\t\t\t\t&quot;https://www.instagram.com/nikolaswise/&quot;,\n\t\t\t\t&quot;https://www.linkedin.com/in/nikolas-wise-6b170265/&quot;,\n\t\t\t],\n\t  &#125;\n\t&#125;\n&lt;/script&gt;</code>`}</pre>\n","data":{"fm":{"title":"Fun With JSON-LD","slug":"fun-with-json-ld","description":"Learning about JSON-LD is all about and why we should.","date":"2020.08.25","type":"text, texts"}},"map":""}],["headless-cms-introduction",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"Headless CMS; A Brief Introduction\",\"description\":\"What _is_ a Headless CMS, and how can it be useful for building websites and apps?\",\"date\":\"2021.05.28\",\"slug\":\"headless-cms-introduction\",\"type\":\"text, texts\"};\n\tconst { title, description, date, slug, type } = metadata;\n</script>\n\n<p>A Content Management System is a central aspect of any web project - even projects where you would never think of as “having” or “using” a CMS. In these sorts of projects the content management system <em>is</em> the codebase, and the strategy for managing content is identical to the process for managing code. This, obviously, is not ideal for anyone who wants to edit content and not code, or in uncomfortable in the workflows that developers rely on for our day-to-day practice — like Git. The other end of the spectrum of CMS is something like Squarespace — the code is the content. Not ideal if you want to edit code and not content. A traditional CMS like Wordpress attempts to split the difference; the CMS controls the code and the content, but makes an attempt to keep them at least a little independant by storage content in a database and providing an admin interface for editing and authoring that content.</p>\n<p>All of the above approach the problem of content management with the same set of assumptions: the CMS is responsible for taking the content, combining it with the code, and assembling and delivering the entire website. Both parts are coupled together, with the CMS rendering the “head” of the website or app.</p>\n<p>In the past few years with rise of build-time generated and static sites, a new approach to this problem has been articulated and built by a number of companies. The basic idea underlying this new approach is that the CMS should only be in charge of content, and interacted with like any other API. This decouples the code from the content, and removes the CMS from any responsibility of interacting with the code at all. This style of CMS does not render anything out to the web, and is thus called a headless CMS. In short, a headless CMS has no website out of the box. This means there is not a default theme (there are no themes!) to configure, there is no classic “blog” visuals or interfaces to configure and map too content. A blog is just one of many things a headless CMS can be used for.</p>\n<p>A headless CMS has a number of advantages: the first among them is that the product in charge of managing content can focus solely on managing content, and be very, very good at authoring, creating, and editing without needing to also be a good tool for building web apps with. The second biggest advantage is it provides the development team with complete freedom to meet the real-world business use cases associated with the project without relying on the CMS to support those use cases.</p>\n<p>Search Engine Optimization is an excellent example of these two characteristics at work – we are completely free to implement any SEO improvements without any support from the CMS, because the CMS doesn’t do anything but manage content. SEO tags and page metadata can become content like any other content, and the codebase of the web app is responsible for rendering the actual website as it goes over the wire and gets consumed by browsers. Instead of relying on Wordpress Plugins or trusting that Squarespace is following best practices, all of the implementation details over your SEO strategy is completely in your teams control — just like any project <em>without</em> a CMS integration — while the content itself is entirely in your strategy or marketing teams control.</p>\n<p>A Headless CMS exposes content via an API, and that’s all it does. </p>\n<p>Contentful provides a set of client libraries that allow content to be consumed in a developers language of choice, meaning that the technologies or systems used to render your app can be selected by any set of criteria at hand, rather than being forced into a decision by the CMS – if you use Wordpress you’re writing your app in PHP within Wordpress. With Contentful you can <a\n  href=\"https://github.com/contentful-labs/contentful-go\"\n  rel=\"nofollow\"\n>write your app in Go</a> if you want and live your best life.</p>\n<p>Below is a quick overview of using the Contentful JavaScript SDK to access content in the Headless CMS. It returns JSON and can be used at run-time or build-time to add content to a website or app:</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\">const contentful = require(&#39;contentful&#39;)\n\nconst client = contentful.createClient(&#123;\n  space: &lt;space-id&gt;,\n  accessToken: &lt;access-token&gt;,\n  host: &lt;host&gt;\n&#125;)</code>`}</pre>\n<p>The <code>client</code> provides a set of methods for interacting and querying the content database; </p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\"> getSpace: async ƒ getSpace(),\n  getContentType: async ƒ getContentType(),\n  getContentTypes: async ƒ getContentTypes(),\n  getEntry: async ƒ getEntry(),\n  getEntries: async ƒ getEntries(),\n  getAsset: async ƒ getAsset(),\n  getAssets: async ƒ getAssets(),\n  createAssetKey: async ƒ createAssetKey(),\n  getLocales: async ƒ getLocales(),\n  parseEntries: ƒ parseEntries(),\n  sync: async ƒ sync()</code>`}</pre>\n<p>You can use the <code>getEntries</code> function to get all the entries available:</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\">client.getEntries()\n  .then(entries =&gt; &#123;\n    console.log(entries)\n  &#125;)</code>`}</pre>\n<p>Or query on metadata or content:</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\">  client.getEntries(&#123;\n    content_type: &#39;lesson&#39;,\n    &#39;fields.slug[in]&#39;: &#39;content-management&#39;\n  &#125;).then(entries =&gt; &#123;\n    console.log(entries)\n  &#125;)</code>`}</pre>\n<p>Contentful in particular is interesting because one of the fields you can add to your entries is a reference <em>to other entries</em>. This gives the information architecture model some pretty amazing abilities to structure and enable pretty much any sort of content strategy you want to build. Some simple key-value pairs for getting strings to complicated, nested, conditional data structures. </p>\n<p>And from the code’s perspective, it’s all just JSON! </p>\n<p>For an example of how one can write components that consume this general API data, I’ve put together a small sample of how to create a component that’s defined by JSON structures, and how handling different configuration keys alongside content strings can create a powerful way to integrate with a Headless CMS like Contentful. Check out the <a\n  href=\"https://component-doc-sample.glitch.me/\"\n  rel=\"nofollow\"\n>demo on Glitch</a>.</p>\n","data":{"fm":{"title":"Headless CMS; A Brief Introduction","description":"What _is_ a Headless CMS, and how can it be useful for building websites and apps?","date":"2021.05.28","slug":"headless-cms-introduction","type":"text, texts"}},"map":""}],[null,{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"Heavy Pop\",\"date\":\"2016-05-01T00:00:00.000Z\",\"description\":\"Fine press monograph for artist [Morgan Rosskopf's](http://morganrosskopf.com/) solo show at [One Grand Gallery](http://www.onegrandgallery.com/) commissioned by the artist and the gallery.\",\"type\":\"art, riso, edition, book\",\"archived\":true};\n\tconst { title, date, description, type, archived } = metadata;\n</script>\n\n<p class=\"text-center trailer-2\">\n\t<a href=\"http://www.ogpdx.com/morgan-rosskopf-heavy-pop/1a4u531deq9xqrkunjqyk5di9aewey\" class=\"nav-link\">Buy the Book</a>\n</p>\n<p>The project is a collection of drawing and collages by Morgan Rosskopf. The book is printed in off-process CMYK and hand bound in experimental reverse drum leaf perfect binding. The monograph works with the rest of the gallery show, acting as documentation and a piece of art in its own right — an object treated in the same manner of a cassette tape for sale at a concert.</p>\n<p><img src=\"./heavy-pop-01.jpg\" alt=\"Heavy Pop Detail\"></p>\n<p>Morgan is trained a fine art printmaker, and the multiple is a valuable part of her art practice. This show, however, focused on individual works – drawing and collages. Morgan wanted to provide a low-cost object that worked in the tradition of the multiple to supplement the show without providing literal prints of the work.</p>\n<p><img src=\"./heavy-pop-02.jpg\" alt=\"Heavy Pop Detail\"></p>\n<p>The translation between formats, density of image, and literal color space all worked together to create a new interpretation of Morgan’s work — some ideas were able to come forward with the process, while others became more muted. The monograph became a unique art object itself, rather than a piece of documentation.</p>\n<p><img src=\"./heavy-pop-03.jpg\" alt=\"Heavy Pop Detail\"></p>\n","data":{"fm":{"title":"Heavy Pop","date":"2016-05-01T00:00:00.000Z","description":"Fine press monograph for artist [Morgan Rosskopf's](http://morganrosskopf.com/) solo show at [One Grand Gallery](http://www.onegrandgallery.com/) commissioned by the artist and the gallery.","type":"art, riso, edition, book","archived":true}},"map":""}],["how-to-design-while-developing",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"How to Design While Developing\",\"slug\":\"how-to-design-while-developing\",\"date\":\"2016.5.15\",\"description\":\"Moving beyond the idea that the designer and the developer on a web project are different people, and that somehow those are different things.\",\"type\":\"text, texts\"};\n\tconst { title, slug, date, description, type } = metadata;\n</script>\n\n<p>For a long time, websites got made with one person designing how it should look and one person developing the code that made it look that way.</p>\n<p>A lot of times, this is still how things get done - one team makes static Photoshop comps, and hands them off to a team of developers who know stuff like whether React or Ember or Node or Ruby is the best thing. This can sometimes cause friction. The designer expects the website to look exactly like the comp, the developer writes a bunch of custom CSS and HTML to fit the design, and whoever needs to make sure the whole thing is WCAAG compliant spends weeks hating both of them. When the next comp comes down the line, it all happens again. For a big site, this leads to design drift, and a hugely tangled codebase that’s a <a\n  href=\"http://paulcpederson.com/articles/css-for-people-who-hate-css/\"\n  rel=\"nofollow\"\n>nightmare to try and untangle</a>.</p>\n<p>This splitting of systems is an artificial one that’s sustained by organizational assumptions: we need designers, and we need developers. The thing about Design though - capital D <em>design</em> - is that it’s simply a method of deciding on a structure to accomplish a purpose. The design tools and methods one uses to accomplish good design is always in tune with the thing being made. A building doesn’t go from painting to construction drawings, nor does a car go from modeling clay to racetrack. The clay and the paint are very useful steps to <em>start</em> the process of design. They help us to be creative and loose and explore new solutions to the problems at hand. This exploratory work helps us to understand how a thing will <em>feel</em> in the world.</p>\n<p>These initial drawings and sketches get translated into their final structures, and translation is a process that can enrich both what is being translated <em>to</em> as well as what is being translated <em>from</em>. Every precise moment may not align directly, since differences in context can have deep implications for meaning.</p>\n<p>We turn our drawings into objects with all the considerations of the final materiality present. We can’t ignore the shape of the engine or structural code requirements, although our models and paintings certainly can. Design is provisional until the point at which it exists in the world, and when talking about the web even this isn’t any sort of ending. A website is its own sort of thing, with its own structure and requirements that need to be present and known throughout the entire process of design.</p>\n<p>A drawing and a website will never look the same. This is mostly because a website isn’t static. Because of this, what a website <em>looks like</em> is just a small piece of what a website <em>is</em>. A website is what it enables its users to accomplish, what its developers have to do to keep it stable and moving forward.</p>\n<p>The best way to meet our goals as people who make good websites is to focus less on those drawings right away. Instead we should think more about simplicity and elegance than the detail oriented perfection of a jpeg.</p>\n<p>Don’t get me wrong - the jpeg can be important. It shows us how we think we can solve our problems, a glimpse of how we want our website to looks and feel, and the tone we want to communicate. Through all this it needs to have to room to change and breath as it comes to life and become a real thing. Our drawings should not be on the level of “what does this look like” but “what problem does this solve and how”. At every step in the process we can work to make the real thing better, to solve new questions that arise as we move through the process of design / development – a process where there is no gap between those two ideas.</p>\n<p>To design a website is to develop it - and as we develop a website we are constantly making design decisions. A designer cannot abdicate their responsibility to design by saying “well, my jpeg looked great.” A developer cannot abdicate their responsibility to a codebase by saying “well that’s what they wanted in the comp.”</p>\n","data":{"fm":{"title":"How to Design While Developing","slug":"how-to-design-while-developing","date":"2016.5.15","description":"Moving beyond the idea that the designer and the developer on a web project are different people, and that somehow those are different things.","type":"text, texts"}},"map":""}],["pickering/is-progressive-enhancement-dead-yet",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"Is Progressive Enhancement Dead Yet?\",\"slug\":\"pickering/is-progressive-enhancement-dead-yet\",\"author\":\"Heydon Pickering\",\"year\":2021,\"source\":\"https://briefs.video/videos/is-progressive-enhancement-dead-yet/\",\"tags\":\"design, development, javascript, js\",\"thesis\":\"Progressively enhancing web applications is not only an essential practice for accessibility, but it provides a framework to respect separation of concerns in technology _and_ reduce boilerplate, polyfills, and otherwise kludgy code.\",\"type\":\"annotation, bibliography\"};\n\tconst { title, slug, author, year, source, tags, thesis, type } = metadata;\n</script>\n\n<p>Pickering wants to talk about Progressive Enhancement, but apparently a lot of people are over it and want to be done with it. Pickering thinks that putting progressive enhancement to bed – and worrying about it no more would be a “grave” mistake. </p>\n<p>Pickering addresses some common misconceptions. </p>\n<p>Progressive Enhancement is Not:</p>\n<ul>\n<li>Something you install using a package manager.</li>\n<li>Progressive enhancement is not a <code>&lt;noscript&gt;</code> tag with the text “Please turn on Javascript”.</li>\n<li>Progressive enhancement is not rendering HTML on the server, then having the browser re-render that HTML via hydration (<em>React</em>)</li>\n</ul>\n<p>Pickering uses an metaphor of the skateboard to explain what progressive enhancement <em>is</em>.</p>\n<blockquote>\n<p>Imagine two skateboards. One is the old fashioned kind, it’s just a board with wheels. The other has a screw hole near the front, allowing you to attach some handlebars and make the skateboard a scooter. Just because the handlebars don’t attach to the older skateboard doesn’t mean it’s broken. It still works as a skateboard. </p>\n</blockquote>\n<p>In Pickerings example, the handlebars are a feature that the browser may or may not support. Importantly, if there is no support for the feature, things <em>still work fine.</em> Great emphasis is placed on this point.</p>\n<blockquote>\n<p>The basic layout is not a broken layout.</p>\n</blockquote>\n<p>Here’s a provide example of a progressively enhanced masonry layout:</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\">.grid &#123;\n\tdisplay: grid;\n\tgrid-template-columns: repeat(4, 1fr);\n&#125;\n\n@supports (grid-template-rows: masonry) &#123;\n\t.grid &#123;\n\t\t.grid-template-rows: masonry;\n\t&#125;\n&#125;</code>`}</pre>\n<p>If a browser supports <code>@supports</code> and <code>grid-template-rows:masonry</code>, the layout engine applied the layout. The key here is that out layout tools are handling out layout, and Javascript is not relied on <em>at all</em> for functions that Javascript is not intended for. </p>\n<p>Another example, using <a\n  href=\"https://github.com/Heydon/watched-box\"\n  rel=\"nofollow\"\n><watched-box></a> is provided:</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\">// use web component\n&lt;watched-box\n\twidthBreaks=&quot;320px, 60ch&quot;\n\theightBreaks=&quot;100vh, 2014px&quot; \n/&gt;\n\t&lt;!-- children --&gt;\n&lt;/watched-box&gt;\n\n// progressive enhancement logic \nif (&#39;ResizeObserver&#39; in window &amp;&amp; &#39;customElements&#39; in window) &#123;\n\tcustomElemeents.define(&#39;watched-box&#39;, WatchedBox);\n&#125;\t\n\n// load custom element as module\n&lt;script type=&quot;module&quot; src=&quot;watched-box.js&quot;&gt;&lt;/script</code>`}</pre>\n<p>The module import self-selects for modern browsers, the custom element code itself checks for browser feature support, and if none of these things exist the children of the <code>&lt;watched-box&gt;</code> tag render normally.</p>\n<p>Another example of conditionally importing Javascript:</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\">// ignored by old browsers, used by modern browsers\n&lt;script type=&quot;module&quot; serc=&quot;new.js&quot;&gt;&lt;/script&gt;\n\n\n// ignored by modern browsers, used by old browsers\n&lt;script nomodule src=&quot;old.js&quot;&gt;&lt;/script&gt;</code>`}</pre>\n<p>This is all predicated on respecting the separation of concerns for HTML, CSS, and JS, and it’s important that we don’t do thing in JS that could and should be done with CSS. </p>\n<p>Pickering closes with a counter-example of regressive enhancement with a tab pattern. This pattern is better handled in a traditional HTML structure, as adding large amount of Javascript to collapse the pattern into tabs create both an accessibility and user experience nightmare that can be hugely difficult to untangle. Pickering identified the important of letting the browser technologies do their thing. </p>\n<p>The final note is as follows:</p>\n<blockquote>\n<p>Use Javascript to do Javascript things. And not Javascript to do like … not Javascript things. </p>\n</blockquote>\n","data":{"fm":{"title":"Is Progressive Enhancement Dead Yet?","slug":"pickering/is-progressive-enhancement-dead-yet","author":"Heydon Pickering","year":2021,"source":"https://briefs.video/videos/is-progressive-enhancement-dead-yet/","tags":"design, development, javascript, js","thesis":"Progressively enhancing web applications is not only an essential practice for accessibility, but it provides a framework to respect separation of concerns in technology _and_ reduce boilerplate, polyfills, and otherwise kludgy code.","type":"annotation, bibliography"}},"map":""}],["joseki-party",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"Joseki Party\",\"slug\":\"joseki-party\",\"date\":\"2016.08.31\",\"site\":\"http://joseki.party/\",\"description\":\"The simplest game of _Baduk_, _Weiqi_, or _Go_ this side of the internet. Start a game of Go, and play with a friend simply by sending them a link. Invite people to witness your victory – or humiliating defeat depending on how good your friend is.\",\"template\":\"_templates/project.html\",\"block\":\"text\",\"type\":\"projects, department\"};\n\tconst { title, slug, date, site, description, template, block, type } = metadata;\n</script>\n\n<h3>Concept</h3>\n<p>I’ve been playing Go (poorly) for the past 10 years or so ( on and off), so when <a\n  href=\"http://paulcpederson.com/\"\n  rel=\"nofollow\"\n>Paul</a> asked me if I knew how to play after the recent <a href>triumph of AlphaGo</a> over Lee Sedol, 9 Dan, I was pretty excited to have an opponent. Paul learned the game quick and soon was playing at my level (and slightly above!). We played over lunch, and one day when we were both working from home rather than the office, we decided to see what was out there for playing online.</p>\n<p>While there are some amazing servers out there for playing Go like <a\n  href=\"https://online-go.com/\"\n  rel=\"nofollow\"\n>Online Go</a>, <a href=\"https://www.gokgs.com/\" rel=\"nofollow\">KGS</a>, and <a href=\"http://www.tygembaduk.com/\" rel=\"nofollow\">Tygem Baduk</a>, they all required a significant amount of set up, investment, and it was tricky for us to just pick up a game with each other right away. What we needed was a Go server where one player could send a URL to the other and start playing.</p>\n<p>So we built that!</p>\n<p><img\n  src=\"https://photos.smugmug.com/Projects/Joseki-party/i-StZmkMS/0/4fb63fac/X3/title-X3.png\"\n  alt=\"Title Screen for Joseki Party\"\n></p>\n<h3>The Big Idea</h3>\n<p>We had a couple of hard requirements for the project, which shaped a lot of our design decisions.</p>\n<p><strong>No Auth:</strong> We wanted to avoid any sort of user account management — no creating accounts, no signing in, no OAuth with Twitter or Facebook so you can share post your game points. This was going to be about zero-friction Go. Any set up where a user has to do anything beyond start playing when they got a link was off the table.</p>\n<p><strong>No Server:</strong> Paul and I are front-end types — we both know plenty of NodeJS but dislike writing servers. This was going to be pure client-side.</p>\n<p><strong>No Framework:</strong> There’s been a <em>lot</em> of discourse about the state of JavaScript frameworks in 2016. And after using any number of different frameworks for any number of projects (and one notable example of 4 frameworks in <em>one</em> project) I thought we could experiment with <a\n  href=\"http://vanilla-js.com/\"\n  rel=\"nofollow\"\n>Vanills JS</a> and see where that landed us.</p>\n<p><strong>Live:</strong> It’s a game, so we decided it should feel as close as possible to sitting down and playing a game. We wanted to avoid browser refreshes, notifications, and things of that nature. When you play, your opponent sees the move. When your opponent plays, you see the move.</p>\n<p><strong>MVI Loops:</strong> A major part of the project was getting deep into the practicalities of writing <a\n  href=\"http://staltz.com/unidirectional-user-interface-architectures.html\"\n  rel=\"nofollow\"\n>unidirectional applications</a> with a Model → View → Intent system.</p>\n<p><strong>A New Visual Language:</strong> One of my major design interests is in the translation between the analog and the digital. I wanted to take the same approach to the aesthetics of Go — attempt the keep the striking nature of the game itself but ditch any attempt at skeuomorphism that pervades practically <em>all</em> of the computer Go programs I’ve ever played on.</p>\n<p><img\n  src=\"https://photos.smugmug.com/Projects/Joseki-party/i-dwf5h8p/0/ca9e4700/X3/new-game-X3.png\"\n  alt=\"Starting a New Game\"\n></p>\n<h3>Solutions</h3>\n<p><strong><a href=\"https://firebase.google.com/\" rel=\"nofollow\">Firebase</a></strong> solved a lot of our problems with the practicalities of a shared, live game state without using a server. We decided on generating random names for games, and saving the model of the game state under those keys in a single Firebase project. The NPM project <strong><a href=\"https://www.npmjs.com/package/weiqi\" rel=\"nofollow\">Weiqi by cjlarose</a></strong> provided the essential client-side tools for manipulating the game, with a small addition in a <strong><a\n  href=\"https://github.com/nikolaswise/weiqi.js\"\n  rel=\"nofollow\"\n>fork of the project</a></strong> to add a method for removing dead stones from the board before scoring. <strong><a href=\"https://surge.sh/\" rel=\"nofollow\">Surge</a></strong> provides the hosting, and their excellent <strong><a\n  href=\"https://surge.sh/help/adding-a-200-page-for-client-side-routing\"\n  rel=\"nofollow\"\n>client side routing</a></strong> allowed us to make the whole thing a single page app.</p>\n<p><img\n  src=\"https://photos.smugmug.com/Projects/Joseki-party/i-N2Lk3cW/0/f7eece08/X3/opening-X3.png\"\n  alt=\"Opening State\"\n></p>\n<p>The client side routing lets us provide a single link to Black, White, or a neutral observer who just wants to watch the game unfold.</p>\n<p><img\n  src=\"https://photos.smugmug.com/Projects/Joseki-party/i-DzVDfMH/0/b867008a/X3/gameplay-X3.png\"\n  alt=\"Playing the Game\"\n></p>\n<h3>The Fun Parts</h3>\n<p>Exploring different aesthetics that our game board could take was a real interesting undertaking — one that is still ongoing. With the perpetually fluid nature of the web, we can create any number of wildly unorthodox color schemes.</p>\n<p><img\n  src=\"https://photos.smugmug.com/Projects/Joseki-party/i-C8sbxnC/0/XL/changing-scheme-XL.jpg\"\n  alt=\"Changing the Color Scheme\"\n></p>\n<p>So send me a link if you want to play! I’ve been playing nothing but 13x13 lately, so start a bigger game and I’ll probably be toast.</p>\n","data":{"fm":{"title":"Joseki Party","slug":"joseki-party","date":"2016.08.31","site":"http://joseki.party/","description":"The simplest game of _Baduk_, _Weiqi_, or _Go_ this side of the internet. Start a game of Go, and play with a friend simply by sending them a link. Invite people to witness your victory – or humiliating defeat depending on how good your friend is.","template":"_templates/project.html","block":"text","type":"projects, department"}},"map":""}],["cave/the-ux-of-lego-interface-panels",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"The UX of LEGO Interface Panels\",\"slug\":\"cave/the-ux-of-lego-interface-panels\",\"author\":\"George Cave\",\"year\":2020,\"source\":\"https://www.designedbycave.co.uk/2020/LEGO-Interface-UX/\",\"thesis\":\"Exploring user interface design via legos\",\"tags\":\"user experience\",\"date\":\"2020.08.24\",\"type\":\"annotation, bibliography\"};\n\tconst { title, slug, author, year, source, thesis, tags, date, type } = metadata;\n</script>\n\n<blockquote>\n<p>Most interfaces in our world contain a blend of digital screens and analog inputs like switches and dials</p>\n</blockquote>\n<blockquote>\n<p>How can we differentiate between the function of different inputs?\nHow can we organise the many inputs and outputs so that we understand how they relate to each other?</p>\n</blockquote>\n<p>Designing interfaces is about wrapping with the above two questions, understanding relationships and functions. This applies for GUIs or CLIs, end user or developer experiences. Those are the two big human/machine questions. </p>\n<p>Tools for differentiating include shape coding:</p>\n<blockquote>\n<p>The right panel (“Aircraft Multiple Flight Controls”) clearly distinguishes between the throttle (large, linear vertical movement), toggle switches (round vertical flick) and the push buttons (square push-in).</p>\n</blockquote>\n<p>Along with:</p>\n<blockquote>\n<p>Colour coding is perhaps the only one to break into our everyday vocabulary, but we can add four more: size, texture, position and operation coding. Together these six are our allies in the design of error-proof interfaces.</p>\n</blockquote>\n<blockquote>\n<p>Differentiation is a good first step that will avoid confusion between adjacent switches. But its only with organisation that we can create a clear and accurate mental model of the interface for the user.</p>\n</blockquote>\n<p>Differentiation support organization. </p>\n<p>Organizational techniques include distributed and consolidated:</p>\n<blockquote>\n<p>These panels are what I’d called a consolidated interface. Every piece of input and feedback has been moved onto the same panel. This is the approach that Dyson took with their car. Now imagine the opposite, moving each of those lights and switches to the actual location of that valve in the factory. Sounds ludicrous, but these air vents in the Audi TT show that this distributed approach can also be a great win for user experience. I wrote a lot more about these distributed interfaces last year.</p>\n</blockquote>\n<p>Feature based, operation based, technology based. </p>\n<blockquote>\n<p>Any touchscreen with buttons by the side exhibits this technology-based split. In a future world, SpaceX might embed these physical controls right inside the screen next to the information they affect, but for now they sit awkwardly by the side as if nothing is wrong.</p>\n</blockquote>\n<p>Technology based organization is not human centered, and therefor not ideal UX. </p>\n","data":{"fm":{"title":"The UX of LEGO Interface Panels","slug":"cave/the-ux-of-lego-interface-panels","author":"George Cave","year":2020,"source":"https://www.designedbycave.co.uk/2020/LEGO-Interface-UX/","thesis":"Exploring user interface design via legos","tags":"user experience","date":"2020.08.24","type":"annotation, bibliography"}},"map":""}],["lemons-houses",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"Lemons / Houses\",\"slug\":\"lemons-houses\",\"source\":\"https://photos.smugmug.com/Prints/Prints/i-5SP9mpX/0/0b56cd48/X2/lemons-800-X2.png\",\"alt\":\"Black and white print of densely packed houses, interspersed with mist and lemon blossoms.\",\"date\":\"2016.08.24\",\"edition\":10,\"size\":\"12x19 inches\",\"media\":\"Risograph\",\"type\":\"art, risograph, edition\"};\n\tconst { title, slug, source, alt, date, edition, size, media, type } = metadata;\n</script>\n\n\n","data":{"fm":{"title":"Lemons / Houses","slug":"lemons-houses","source":"https://photos.smugmug.com/Prints/Prints/i-5SP9mpX/0/0b56cd48/X2/lemons-800-X2.png","alt":"Black and white print of densely packed houses, interspersed with mist and lemon blossoms.","date":"2016.08.24","edition":10,"size":"12x19 inches","media":"Risograph","type":"art, risograph, edition"}},"map":""}],[null,{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"lone goose press\",\"site\":\"http://www.lonegoosepress.com\",\"date\":\"2015-03-14T00:00:00.000Z\",\"description\":\"A catalog and ecommerce website for for the Eugene, Oregon based letterpress studio lone goose press.\",\"type\":\"projects, department\",\"archived\":true};\n\tconst { title, site, date, description, type, archived } = metadata;\n</script>\n\n<p>What it is:\nA catalog and ecommerce website for Euegene based letterpress printer Sandy Tilcock.</p>\n<p>What it does:\nPresents the rang of work undertaken by the press, along with the philosophy and working principles of Tilcock. Demonstrates work samples, and provides a marketplace to purchase fine art.</p>\n<p>Why we did it:\nlone goose press’ previous website was not up to date with the latest work, had to commerce, and was unwieldy to update.</p>\n<p>Why it’s interesting:\nThe project was an opportunity to blend techniques of design for web with the analog and hand-set design processes that Sandy specializes in, an exercise in translating fine print designs for web, maintaining the integrity of the design through the challenges of the new medium.</p>\n<p>Run by Sandy Tilcock, lone goose press has been producing some of the highest quality letterpress printing, broadside posters, and book arts on the west coast for well over a decade. The site presents the rang of work undertaken by the press, along with the philosophy and working principles of the press. The project was an opportunity to blend techniques of design for web with the analog and hand-set design processes that Sandy specializes in, an exercise in translating fine print designs for web, maintaining the integrity of the design through the challenges of the new medium.</p>\n","data":{"fm":{"title":"lone goose press","site":"http://www.lonegoosepress.com","date":"2015-03-14T00:00:00.000Z","description":"A catalog and ecommerce website for for the Eugene, Oregon based letterpress studio lone goose press.","type":"projects, department","archived":true}},"map":""}],["hossenfelder/lost-in-math",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"Lost In Math\",\"slug\":\"hossenfelder/lost-in-math\",\"author\":\"Sabine Hossenfelder\",\"year\":2018,\"source\":\"https://bookshop.org/books/lost-in-math-how-beauty-leads-physics-astray/9781541646766\",\"tags\":\"physics, math, aesthetics, design\",\"thesis\":\"In theoretical physics, the proliferation of theory outstrips the pace of experiment, leading to a situation where theories must be assessed by criteria other than their relationship to the real world. The current criteria are aesthetic ones, and that has led to 30 years of stagnation.\",\"type\":\"annotation, bibliography\"};\n\tconst { title, slug, author, year, source, tags, thesis, type } = metadata;\n</script>\n\n<p>Hossenfelder has written an outstanding book — not only has she provided an accessible pop-sci introduction to <em>all of physics</em> but she also has included a sharp and insightful critique of the <em>theory of theoretical physics</em>. What’s more, the whole things is written with an air of approachability and dry cutting wit. The book is makes me want to loan it to everyone I know and stop writing, since I’ll never be able to write as well, as insightfully, or as entertainingly as Hossenfelder. Anyway, on to the content!</p>\n<p>Hossenfelder covers a <em>lot</em> of ground in this slim novel, and all of it is interesting. For this annotation however, I’m going to focus on her argumentation around aesthetic influence over hard science, my take on the root causes of the problems she identifies, and Appendix C — “What You Can Do To Help” — which I found surprisingly relevant to issues in “The Industry” of web development.</p>\n<p>Let’s start with Aesthetics. Coming as I do from a fine arts background, and working now in a “technical” field, there’s an interesting tension at work with aesthetics. Perhaps counter-intuitively, the arts have long <em>rejected</em> aesthetic criteria for determining value — and contemporary artists like <a\n  href=\"http://morganrosskopf.com/\"\n  rel=\"nofollow\"\n>Morgan Rosskopf</a> are working to reclaim it’s importance in the field — while Hossenfelder posits that aesthetics are <em>too dominant</em> as criteria in theoretical physics. Why this is the case is an interesting question, but it’s worth noting that they mean the same thing when they use the word: beauty for the sake of being beautiful. (As a counter to this, I had a funny moment when Hossenfelder referred to phenomenologists of physics, and when I flipped <em>immediately</em> to the footnote on this term she had written “not that kind of phenomenologist.) Hossenfelder’s primary argument is that aesthetic concerns are primarily <em>anthropocentric</em> concerns, and when exploring the most fundamental questions of “what the fuck, why?”, reality has little regard for the anthropocentric. She cites numerous examples where the best answers to the question of “why” are deeply anti-human — that is, they are repugnant to even the scientists who propose them. We don’t like the way the universe works, and the universe doesn’t give a <em>shit</em>. It is what it is. While the physics is fun and the interviews are great, where this story gets <em>really</em> interesting is in a sort of applied Bruno Latour “facts are socially constructed” sort of way, which brings me to my next interest in the book. </p>\n<p>Hossenfelder makes a compelling case that while <em>the fundamental principles of the universe</em> don’t give a shit about anthropocentric aesthetics, editorial boards of publications and  people who control grant money sure do. It’s like Keats’ old ”  “Beauty is truth, truth beauty, — that is all Ye know on earth, ye and all ye need to know.” But swap “truth” for “funding”. Here, Hossenfelder uses her argument <em>against</em> aesthetics as criteria for determining value as a proxy for economic and political systemic pressures corrupting the scientific process. If continued funding relies on a predetermined result (and that result is predetermined based on aesthetic criteria) a researcher finding that result should be viewed with suspicion rather than celebration. This is not the case currently. My take-away is less that the problem Hossenfelder identifies within the community of theoretical physics is an over-reliance on aesthetic criteria (the primary hook of the book) and more that the social structure of contemporary life under late-stage capitalism is inherently antithetical to meaningful, substantive research. Hossenfelder cites growing economic inequity and insecurity as prime forces in the creation of the current climate of human-centered motivations for research directions. It’s easy to come to conclusions that your boss likes when your paycheck is on the line. </p>\n<p>Particularly striking was Hossenfelders Appendix C, “What You Can Do To Help”. “Help” in this case refers to “help mitigate the dominance of anthropocentric biases in research of fundamentally human-agnostic areas”. Hossenfelder organizes this section into three parts, one for the performer of researcher, one for the funder or validator of research, and one of the consumer or observer of research. For the performer of research, Hossenfelders advice is fundamentally about understanding and counteracting <em>social systems</em> and <em>cognitive biases</em>. She elevates the concept of criticism and centers an individual’s power against organizational issues in the power to say “No”. For the funder or validator of research, Hossenfelders advice is about creating barriers between the researcher and the ravages of capitalism. She praises tenure, proposes defenses against the constant hustle, supports graceful  abandonment of previous work, and — most importantly — makes clear that “learning new things” and “making money” may not have any meaningful overlap <em>at all</em>. Hossenfelders advice to the rest of us is that we need to be aware and cognizant of social and economic pressures on scientists — especially particular popular pop-sci writers and personalities — and what that implies about the theory they’re peddling. We all know that Koch-founded climate scientists are not to be trusted, but is the 2-year-contract post-doc struggling to make rent any more reliable? Our current system incentivizes pleasing rich individuals and organizations in order to escape the nightmare of economic precarity. Academics with massive outstanding student debt are not less immune to this than the rest of us. </p>\n<p>In this Appendix C I saw the most overlap with my own industry — web development and the creation of the internet. It’s too easy for us to pretend that we serve this higher purpose, this call to meet the needs of humans and <em>solve hard problems</em>. The reality is that we are just as susceptible to the social and cognitive biases as anyone else, and our motivations are consistently undermined and conflicted by our need to stay employable and fundable. There’s no such thing as tenure in a start up — unless you’re the founder. Then it’s a game of funding. Same problems, same results. How else do we explain the popularity of CSS-in-JS?</p>\n<p>At the end of the day, Hossenfelder makes an unusual and compelling argument for what the leftists among us already know — we need to create new systems for determining value and supporting productive human endeavor, because capitalism is  leading us down a dead-end which will kill us all. </p>\n","data":{"fm":{"title":"Lost In Math","slug":"hossenfelder/lost-in-math","author":"Sabine Hossenfelder","year":2018,"source":"https://bookshop.org/books/lost-in-math-how-beauty-leads-physics-astray/9781541646766","tags":"physics, math, aesthetics, design","thesis":"In theoretical physics, the proliferation of theory outstrips the pace of experiment, leading to a situation where theories must be assessed by criteria other than their relationship to the real world. The current criteria are aesthetic ones, and that has led to 30 years of stagnation.","type":"annotation, bibliography"}},"map":""}],["map-as-context",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"Map as Context\",\"slug\":\"map-as-context\",\"date\":\"2015.2.19\",\"description\":\"Understanding maps as designed objects and attempting to define a theory for making digital maps on the internet as good as old paper maps.\",\"type\":\"text, texts\"};\n\tconst { title, slug, date, description, type } = metadata;\n</script>\n\n<p>Looking at maps as they exist today on the internet, we have a pretty solid idea of what that means. It means they look like Google Maps. This is a pretty recent design solution to the ‘what is a map on the internet’ problem, only about 10 years old. Which is old for internet, but pretty young for maps. The Google Maps model is a good one, too! It’s a very effective way to present what is essentially a road map - a drivers atlas for navigating a city or a country. Google Maps replaces the AAA State Highway map really effectively, but perhaps there are some weak links with how it applies to other, less navigation-oriented maps.</p>\n<p><img src=\"01-amt2_akershus-amt-57-vi_1887.jpg\"></p>\n<p>There a large number of really beautiful maps that exist only on paper, and a large number of really ugly maps that exist on screens. How can we start to think about maps in a way that bridges this gap? Is there a way we can approach these other, not-a-roadmap-map maps more effectively to make them as good as their paper-bound cousins?</p>\n<p>To approach this question from an angle, it’s worth taking a moment to think about what a map <em>is</em>. The map is a miniature that pivots around the body to represent the gigantic enormity of the physical world. The map shrinks the world down to a place it can be held in the hands and entirely seen with the eye. The map connects the vastness of reality to the body in way that can be handled - both physically and mentally.</p>\n<p>This creates tension with maps on the screen - especially the internet. The screen can <em>not</em> be touched, and the internet can not be related to the body. Phones and tablets mitigate this by bringing the screen closer, and moving to the size of the hand, but the core difficulty remains – if a map exists to scale down the enormity of the world to the size of the body, the internet itself has no boundaries or edges, and way to relate the screen to the body.</p>\n<p>Why is this connection between world and body important? The map provides context for understanding world-scale systems and landscape-scale concepts in a human-scale object. The map is a typology of communication that sits half way between the book and the visual art object. Both the book and the painting – or the print – are techniques that are used to provide access to concepts and ideas beyond the scale of a single individual. The book can contain centuries of intellectual thought, the painting can expose feelings and emotions that touch any number of people. If the map exists between these two mode of communication, that means that it’s goal is to use a volume of thought, of data, of measurements to expose a broad, underlying concept. This can be an environmental truth (or the supposition of one) or a societal insight.</p>\n<p>The map does this through a very specific set of visual design tools with formal qualities that lend themselves to the problem at hand. These formalities are partly defined and structured by the technologies behind the production and distribution of the map.</p>\n<p>The first maps where hand drawn, and correspondingly have attributes of other hand-made visual works. With the advent of printing, maps started to be carved into wood, and duplicated. After wood, they came to etching, and after that lithography. In each of the print techniques, certain marks are favored and made possible through the medium of the matrix itself. Shared in all the print techniques, however, is the concept of plates – individual drawn layers for different colors. Equating individual plates to individual colors to individual <em>typological concepts</em> being shown on the map is a big reason why printed maps are so good.</p>\n<p>The careful and deliberate application of the maps formal characteristics to directly address the ideas and concepts to be communicated, the address the <em>use</em> of the map is what makes a map good.</p>\n<p>On the internet, we make maps differently. GIS data sets mean that maps can be made through mathematical and analytic tools – comparing sets of data, and creating new sets of data to answer questions. A robust and open set of public data means that there are map making tools which provide ways to style and combine existing content.</p>\n<p>These techniques utilize a relatively static map that purports to usefully describe the entire geography of the planet. All of the maps made are intended to sit within larger application, itself designed to solve a problem.</p>\n<p>Most of the time, these maps fail to provide meaningful connection to the concepts provided - they lose the essential aspect of the map that join world-to-human scales, instead operating at the world-to-world level. The endless map of the internet is itself incomprehensible to the body. The maps of the internet are simultaneously too broad and too simple, providing too much and too little. The problem the map is presenting itself as a solution too is usually far too muddy, and the resulting lack of clarity of purpose leads to a map with itself a lack of clarity.</p>\n<p>Looking to the main purpose of the map — simplicity, clarity, and the miniaturization of the world to pivot around the human hand — while using the formal visual tools and design lessons of the previous several centuries of paper maps – the balance of simplification and exaggeration, clear conceptual separations, and embracing the limitations of the object to provide focus.</p>\n<p>In all, the map must be appropriate and natural for it’s intended use, playing its role in the overall purpose of the design solution.</p>\n","data":{"fm":{"title":"Map as Context","slug":"map-as-context","date":"2015.2.19","description":"Understanding maps as designed objects and attempting to define a theory for making digital maps on the internet as good as old paper maps.","type":"text, texts"}},"map":""}],["easterling/medium-design",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"Medium Design\",\"slug\":\"easterling/medium-design\",\"author\":\"Keller Easterling\",\"year\":2020,\"source\":\"https://www.e-flux.com/journal/106/312238/medium-design/\",\"tags\":\"design\",\"thesis\":\"To design effectively with a medium, knowledge and solutions to a system are less effective than understanding the relationships within the system, and how to manipulate and adjust those systems to move towards a set of outcomes.\",\"type\":\"annotation, bibliography\"};\n\tconst { title, slug, author, year, source, tags, thesis, type } = metadata;\n</script>\n\n<blockquote>\n<p>… culture, in the broadest sense of the word, is good at pointing to things and naming them, but not so good at describing relationships between things. It privileges declarations, right answers, universals, and elementary particles. It is captivated by circular logics and modernist scripts that celebrate freedom and transcendent newness—narrative arcs that bend toward a utopian or dystopian ultimate.</p>\n</blockquote>\n<p>Oof. Out the gate we’re coming out strong with a hard-eyed look at one of the major flaws of contemporary culture – this includes politics and economics as well as tech and design. This should be incisive.</p>\n<p>Easterling sketches a mode of thinking where “Favoring succession rather than coexistence, the new right answer must kill the old right answer.” Our broader culture – and out individual outlook – is unable to hold two contradictory ideas at the same time as “correct”. Like the Highlander, there can only be one. We want to know the one right answer.</p>\n<p>This mode of thinking and gathering knowledge – this one single idea of what “progress” entails – creates situations where we ratchet ourselves tighter and tighter into untenable situations.</p>\n<blockquote>\n<p>Since the world’s big bullies and bulletproof forms of power—superbugs like Trump, Kim, Putin, and Bibi, or free-zone agglomerations of corporate power—thrive on this oscillation between loop and binary, it is as if there is nothing to counter them—only more ways of fighting and being right and providing the rancor that nourishes their violence. Is it possible to drop through a trapdoor and exit these logics?</p>\n</blockquote>\n<blockquote>\n<p>… A radical proposal has no traction, because nothing is new and nothing is right.</p>\n</blockquote>\n<p>Holy shiiiit. Easterling is rejecting the core premise of so many TED talks and thought leaders. There is no new way. There is no right answer. The only way forward lies in ambiguity. This immediately calls to mind Nim Wunnans <a\n  href=\"http://conceptuallabor.com/\"\n  rel=\"nofollow\"\n>Theory of Conceptual Labor</a>, where he identifies that the core location of “doing good work” is necessary defined by and situated within ambiguity.</p>\n<blockquote>\n<p>There is no end or modernist succession or moment after culture.</p>\n</blockquote>\n<p>This makes me recall some of the essays in the White Chapel collection of writing “Time” about the meaning and function of contemporary art – how we exist now in a space of the post-contemporary, and work created now can interact with and change the meaning of work created in the past. Cut loose from any sense of linear succession, all artworks can inflect each other and grow from each other freely.</p>\n<blockquote>\n<p>Clear of associations with communication technologies, medium, in this context, returns to its root, medius, meaning “middle” or “milieu.”</p>\n</blockquote>\n<p>Easterling starts to transition here to the meat of the essay.</p>\n<blockquote>\n<p>Beyond declared ideologies, here is a matrix or medium of activities and latent potentials—the undeclared dispositions that are something like culture’s muscle memory.</p>\n</blockquote>\n<p>This reminds me of what Hal Foster was attempting to do in <em>Design and Crime</em>, create a “running room” for culture thats less bounded by what Easterling calls “loops and binaries”.</p>\n<blockquote>\n<p>you see things with names and hear humans speaking words but those things cannot be comprehended in the absence of a thousand other affective cues and relative positions between things in context</p>\n</blockquote>\n<p>Context, a broad gestalt understanding, becomes the key to successfully navigating and manipulating the medium. The complex tangle of objects relationships and affordances create a map of the possible, one that’s as broad as a colorspace and – lacking any defined set of instructions – just as open and possible.</p>\n<p>This way of thinking is shocking to me – it so clearly describes my own way of working that the recognition is deeply surprising. Familiar and new – it’s interesting to see my own way of thinking described in such a clear way.</p>\n<blockquote>\n<p>Turning the sound down on those declarations, it is also easier to detect the difference between what an organization is saying and what it is doing, and how organizations decouple their messages and ideologies from their real activities, underlying motivations, and structuring logics.</p>\n</blockquote>\n<p>Meaning is created and divined by comprehending or being receptive to the whole. Everything – and everything connections between – becomes semantic. Language and marked declarations of meaning are quite possible unreliable narrators of this type of experience.</p>\n<blockquote>\n<p>The disposition of any organization makes some things possible and some things impossible.</p>\n</blockquote>\n<p>God damn Easterling! Just go out there and say it. This is <em>deeply</em> related to my critique of <a href=\"/bibliography/lencioni/five-disfunctions\"><em>The Five Dysfunctions of a Team</em></a>. The structure and gestalt of an organization is the primary defining factor of dysfunction and success, rather than any individual actor.</p>\n<blockquote>\n<p>For instance, being right is a really bad idea on the other side. It is too weak. It does not work against gurus and totalitarian bullies. Maybe culture’s spectacular failures, together with the underexploited powers of the medium, could inspire alternative ways to register the imagination—other approaches to form-making and design in any discipline.</p>\n</blockquote>\n<p>Focus on right-ness is a core value of our system, and look at the results of that system. Sheesh.</p>\n<blockquote>\n<p>Entanglements are more productive than solutions.</p>\n</blockquote>\n<p>This is just … such an articulation against everything that silicon valley tech-fetishism espouses. This is so compelling.</p>\n<blockquote>\n<p>Design in the medium is less like making a thing and more like having your hands on the faders and toggles of organization.</p>\n</blockquote>\n<p>This is deeply related to the thesis I outlined in <a\n  href=\"/texts/how-to-design-while-developing\"\n>How to Design While Developing</a>.</p>\n<blockquote>\n<p>It is the design of interdependencies, chemistries, chain reactions. It benefits from an artistic curiosity about spatial wiring or reagents in spatial mixtures. You are designing not only a single object but a platform for inflecting populations of objects or setting up relative potentials within them. You are comfortable with dynamic markers and unfinished processes.</p>\n</blockquote>\n<p>This is perhaps the single best definition of web design I have very seen.</p>\n<blockquote>\n<p>And maybe the existence or content of a problem is less important than the interplay between problems. Failure is a limitless wilderness for design ecologies.</p>\n</blockquote>\n<p>Welcome to … the Internet. This is exactly how we generate successful work in the medium of the internet.</p>\n<blockquote>\n<p>If an unsafe factory collapses or burns, there is an event to mark the violence, but in countless factories or industrial parks that do not buckle under the weight of their own denial, there is no event, no drawn sword. There is only latent temperament—the constant aggression of blatantly imbalanced power dynamics. The potential for either concentrating or distributing power; the potential for escalating or reducing violence.</p>\n</blockquote>\n<p>Easterling here defines the struggle with the modern web. Is there a connection here to what it would mean to practice an ethical web design? Not to have answers or solutions, but to navigate the tangled web of semantics in ways that reduce the potential for violence, that ratchet slowly towards an ethical stance</p>\n<blockquote>\n<p>But if it has any hope of effecting change, it manipulates the organization as well as the instrumental narrative that attends it with moves that are potentially sneakier or more politically agile.</p>\n</blockquote>\n<p>A key takeaway here is that in order to produce effective work <em>in the world</em> part of the work needs to be done <em>to the organization</em>. Changing the organization and structure around the work is the only way to produce work that is different or more effective.</p>\n","data":{"fm":{"title":"Medium Design","slug":"easterling/medium-design","author":"Keller Easterling","year":2020,"source":"https://www.e-flux.com/journal/106/312238/medium-design/","tags":"design","thesis":"To design effectively with a medium, knowledge and solutions to a system are less effective than understanding the relationships within the system, and how to manipulate and adjust those systems to move towards a set of outcomes.","type":"annotation, bibliography"}},"map":""}],["node-arcgis",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"Node ArcGIS\",\"slug\":\"node-arcgis\",\"site\":\"http://esri.github.io/node-arcgis/\",\"date\":\"2016.03.10\",\"description\":\"An API that explored bringing the ArcGIS REST API to Node and NPM.\",\"type\":\"projects, esri\"};\n\tconst { title, slug, site, date, description, type } = metadata;\n</script>\n\n<h4>Goals</h4>\n<p>With this project, I was attempting to create a centralized code base for common platform interactions — reducing duplicated code and allowing a greater sharing of resources across different development teams at Esri.</p>\n<p>Esri product developers around the globe were recreating the same solutions to common problems in the context of their applications. Node ArcGIS reduces duplicated code and allows a greater sharing of time and resources across teams, and opens solutions to the open-source community. Node ArcGIS is an API that adheres to contemporary specs, acting a buffer between NodeJS workflows and the older, highly stable, <a\n  href=\"https://developers.arcgis.com/rest\"\n  rel=\"nofollow\"\n>ArcGIS REST API</a>. Node ArcGIS brings the power of the ArcGIS platform to the largest and fastest growing language and package manager - <a\n  href=\"https://nodejs.org/en/\"\n  rel=\"nofollow\"\n>Node JS</a> and <a href=\"https://www.npmjs.com/package/arcgis\" rel=\"nofollow\">NPM</a>.</p>\n<p><img\n  src=\"https://photos.smugmug.com/Projects/Node-arcgis/i-kJnNcvC/0/1e471604/X3/docs-X3.png\"\n  alt=\"Node Arcgis Documentation\"\n></p>\n<p>The project allows for developers on widely different projects and teams work together to solve common problems, and opens those solutions to the broader open-source community. Node ArcGIS is also a fast-moving, agile API front that adheres to contemporary API specs, acting a buffer between what Node developers expect from an API and the older, stable, but slow-moving ArcGIS REST API.</p>\n<p>Read the <a\n  href=\"/texts/building-a-client-library/\"\n>in-depth introduction to the project with code samples</a> for a a full run-down of what designing a project like this is all about.</p>\n<h2>Update from 2018</h2>\n<p>Two of my favorite developers, <a\n  href=\"https://twitter.com/geogangster\"\n  rel=\"nofollow\"\n>John Gravois</a> and <a href=\"https://twitter.com/patrickarlt\" rel=\"nofollow\">Patrick Arlt</a>, took this idea all the way home with their excellent <a\n  href=\"https://github.com/Esri/arcgis-rest-js\"\n  rel=\"nofollow\"\n>ArcGIS REST JS</a> project!</p>\n","data":{"fm":{"title":"Node ArcGIS","slug":"node-arcgis","site":"http://esri.github.io/node-arcgis/","date":"2016.03.10","description":"An API that explored bringing the ArcGIS REST API to Node and NPM.","type":"projects, esri"}},"map":""}],[null,{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"Northwest Accounting Technology & Advisory\",\"site\":\"http://nwaccountingtech.com/\",\"date\":\"2017-05-30T00:00:00.000Z\",\"description\":\"Working with an established NYC Bookkeeper to create a brand new business identity and entity in Portland, Oregon. This project was a full business bootstrap; including working with a brand voice developer, copywriter, and illustrator. I worked to create a brand identity, visual language system, and development framework. I designed and produced physical ephemera, and a landing page that integrated with existing business systems.\",\"type\":\"projects, department\",\"archived\":true};\n\tconst { title, site, date, description, type, archived } = metadata;\n</script>\n\n\n","data":{"fm":{"title":"Northwest Accounting Technology & Advisory","site":"http://nwaccountingtech.com/","date":"2017-05-30T00:00:00.000Z","description":"Working with an established NYC Bookkeeper to create a brand new business identity and entity in Portland, Oregon. This project was a full business bootstrap; including working with a brand voice developer, copywriter, and illustrator. I worked to create a brand identity, visual language system, and development framework. I designed and produced physical ephemera, and a landing page that integrated with existing business systems.","type":"projects, department","archived":true}},"map":""}],["good-maps",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"Paper Maps, Web Maps, Good Maps\",\"slug\":\"good-maps\",\"description\":\"Adapted from a talk given at the Portland Cartography symposium, a look at how media informs design.\",\"date\":\"2020-08-26T00:00:00.000Z\",\"draft\":true,\"type\":\"text, texts\"};\n\tconst { title, slug, description, date, draft, type } = metadata;\n</script>\n\n<p>Internet and screens,</p>\n<p>Worked for three yeas with the seri Portland dev team, sent a log of time working on arches developers and arches online. After that, I started my ow studio practice, publishing, GIS consultant work, technical director / Dev director at Fuzzco.</p>\n<p>Toady we’re going to talk about paper maps, and web maps and good maps and taking some one that magic of paper maps, and how paper maps do what they do so well, and bringing sthat to places like screens and the internet.</p>\n<p>I spent time with seri thinking about what maps are, and what maps do. Pat of this is because my own background is in the arts. I studied as a fine art printmaker and worked I print making shops, and I was immediately seeing parallels between printmaking history and mapping history and how there was this major disconnect that happened when the internet happened and we started with eb maps and ‘slippy maps’, that are now just known as “maps”. And a lot of what I was thinking about was how works work in a signal to lnoise sort of space. What they are trying to do is take all the of messiness of the world and reduce that down to like a single single that does a single thing. This of course I’m sure your familiar with, and if not I recommend reading Eco:</p>\n<blockquote>\n<p>Borges Quote about the art of cartography in the empire</p>\n</blockquote>\n<p>The idea of a map as big as the place being mapped is not new. Lewis Carol wrote about this in the 1880s, this is Borges writing in the 40s, this was taking and Eco wrote an essay about this int he 60’s, and even a couple of years ago there is still art being made about this idea. This is a map of the gallery as big as the gallery. The idea behind this is what a map <em>does</em> … this is clearly a useless map. But it’s also the best map. It has the highest fidelity possible Its\n’ The realest map. But it’s presenting all of everything, its presenting all the noise and your loosing the signal. So thinking about these ideas about what makes a map good, and not only good but also useful and makes a map do its job, I started to think a bout maps as context. They don’t do anything by themselves, besides provide context. Maps are, at their real core, and the root of thing, the map is a miniature that pivots around the body to represent the gigantic enormity of the physical world. Thats my art degree coin out. What I mean by this is that maps are useful because they are small than the thing they are mapping. Which is not a controversial idea, demonstrated by the person trying to use the 1:1 map. But its an importune idea, because smaller is only relevant at the scale of “smaller than what, bigger than what?” How does it relate to the body? A paper map talks a city, which I cannot relate to, or I can elate to in terms of how I move through that city, and it turns into into a thing that I can be bigger than. It takes a thing that’s bigger than us, and makes us bigger than it. </p>\n<p>In doing so, it takes all the things that we actually already know about the world and it just points to them. The map is an index, it has a quality of saying “you see this line? I am references this river that you know.” And through that reference I can say “this line is this big according to body, its pointing to this river that I know, which is this big compared to my body”.  That gives us a way to anchor ourselves into the rest of the map and that maps the map useful. </p>\n<p>Maps are useful when they show things like mt. St. Helens, and we know how big that is compared to our body. We’re small. Thats how we know how big these lahars are, we use the map as arefefce to ourselves. </p>\n<p>In doing that, the map provides us with information that we don’t know, that we can’t relate to ourselves. Like the lahars, likelandsclides, like things that big or abstract . The way that they do that is what makes them special. </p>\n<p>I mentioned earlier how my history with printmaking as dovetailed with my experience with making maps, the more I read, the more I saw that the history of maps and the history of technology maps is directly correlated with the history of printmaking materials. </p>\n<p>Early maps are all hand drawn, the original way of making images. In that way you see a lot of maps that use the mark of the hand. They use use the tools of the hand to make marks that represent other things. And that advances through time to woodcuts and lithography, and engirding, and digital printing was a major step where we started using other sorts of tools where we started using things like rainbow maps and gradients all of the suddenly. Making a gradient on a woodcut is doable, but not super easy to control.  The design language of the map became very correlated to the physical property of the materials and means of reproduction. Thats one of the most important things that I think makes paper maps so magical. There an honest connection between the shapes the being shown, the ideas being presented, and the grain of the medium that it’s carried with.</p>\n<p>This means we’re in a little bit of trouble with the internet, because the internet isn’t. Any of that that. There isn’t any hand, there isn’t any material, this is nothing <em>there</em>. What the itnentet <em>is</em> is completely foreign, is completely different, and you can see this in the early days of GIS. The ealtiu days of web mapping, there’s a lot of people trying o figure out what it means to make a map on the internet. And a lot of our shorthand tools were ported directly over from mapping via plotters. We took the tools that we had ands we put them onto a screen. And we made lot of super bad iughly maps. And that’s okay, that’s a growing process. Im sure the first woodcut maps were also super bad and ugly. </p>\n<p>But throughout all of the spectrum of medium available to in main maps, I think there are three major pieces that we should be talking about and focusing on and these are the more compelling for us to move forward with into screens. </p>\n<ol>\n<li>Seperation</li>\n<li>Exageration</li>\n<li>Simplification </li>\n</ol>\n<p>We talked about simplicficatyion abobe, and it think it sone of the most important pieces.  But separation is really important because your separating not only <em>conceptually</em> important from not important, Eco said that the ToDo list was the first defingin characterizing of humanity because it showed the cognitive ability to supernate important form not important, with paper maps and with printed maps this became a really important physical serpeateipm, because you can only do one color per plate or block or metric. That means you have to serpents out what you want to be related, and what you don’t want to map at all. This map is only showing a coupldof things, which is water: not water: streets mayeb: and buildings. \\</p>\n<p>What they’ve done is said ‘all of these orange things are related to each other and that’s what important.” SO all these are serpent out from everything that’s not orange. And this is maybe a simple idea, but I’ve seen so many maps on the web where we start with with really powerful base maps with opens trees maps, seri datasets, living atlas, which are incredible, but there this impulse to out everything in all together because we can, because its the internet. It can be as plastic and expand to fill as much ideas as we have in our head. But separating outa nd saying :water, not water, interesting, not interesting. Using design language to support that serrate is one of the major pieces that makes physical maps so good. </p>\n<p>This is a map of exaggeration. I don’t think the landscape really looks like that. I don’t know if those are contour lines, even, this is a very old map maybe from before they even had contour lines, I don’t know. Hand drawn map from 1400. What They’ve done here is exaggerated the hills, and through this exaggerations — you see this with topographic maps all the time. Where if you had an actual relief map that was true and not exgergation it would be super super boring. And not useful on our main goal which is tor elate the felt ecpericne of the world to how we live in our bodies. So here we get a really good sense of what this landscape is probably like to be at;. We know there are steep rolling hill.s and and it very fdesnse, and wooded, and this gives us a very good feeling of how our body would be in this space, through h this eceetgaitong. </p>\n<p>As for simplification, this is my favorite map of all time. </p>\n<p>I have no idea what this map is or what this map is more, or what this map is going, or why this map. But its the simplest map I’ve ever seen in my life. It deoes one thing, and it does it very very well. It doesn’t need a baseman, it doesn’t need a roadmap, it doesbnt need poopptuos. It just is these things and here they are. </p>\n<p>These are some tools that we can use to make maps good. And this is what we all want to do it make good maps, we want to make good internet maps, we awant to make good web maps, we want to make good printed maps. Good maps are really important to make. </p>\n<p>What does that mean tho? What is good?</p>\n<p>I think that goos is always relative to where you are, our what you’re trying to do. If we open that idea of good up a little bit, and we start talking about Good Things in the Expanded field Theres three axis I think are really important that we can work in:</p>\n<ol>\n<li>Useful <-> Useless</li>\n<li>Simple <-> Complicated</li>\n<li>Ugly <-> Beautiful</li>\n</ol>\n<p>Its not saying that “useful maps are bad” or “useless maps are good” but you have you understand where does your map fall on this spectrum of useful to useless. Like the gunpowder maps Im seeing around the hall – not super useful. But also good! You just hae to understand what your goal is int art spectrum, and makes sure that your decisions are hello you arrive there. Same with simple o complicateioed. The simple map is rally good as long as you’re using it simply. If your trying to navigate in Denmark, and your using that dot map, its actually a super bad ma[p! It depends where you want to be on the spectrum. Like ugly to beautiful. Ugly gets a bad rap and I want to defend ugly for second. Craigslist! Pretty ugly! Pretty good!</p>\n<p>Its all about not saying “you need to be useful, and simple, and beautiful, and that’s the only way your going to make a good map!” You can make a useless complicated ugly map, and it would be good as long as that’s that map you are wanting to make.</p>\n<p>This is data tho. This is not art. So I think maps have a fourth really important spectrum here, and that’s the space between:</p>\n<ol start=\"4\">\n<li>True <-> Not True</li>\n</ol>\n<p>Again, I don’t want to say “Not true maps re bad” but if your trying to be truthful, and your using your class breaks in away that hide the reality of your data, you’ve made a bad map. If your trying go over the top, and make point, you can elide the truth a little bit and make a good map. </p>\n<p>Resources:…</p>\n","data":{"fm":{"title":"Paper Maps, Web Maps, Good Maps","slug":"good-maps","description":"Adapted from a talk given at the Portland Cartography symposium, a look at how media informs design.","date":"2020-08-26T00:00:00.000Z","draft":true,"type":"text, texts"}},"map":""}],["pixels-dont-matter",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"Pixels don't matter.\",\"slug\":\"pixels-dont-matter\",\"date\":\"2013.10.21\",\"description\":\"They don't.\",\"type\":\"text, texts\"};\n\tconst { title, slug, date, description, type } = metadata;\n</script>\n\n<p>Talking about mobile design today, the conversation is couched in terms of “pixel perfect”, or designs are made by “pixel pushers”. This isn’t a useful way to approach layout design.</p>\n<p>In the analog world we talk about the three fundamental components of print.</p>\n<p><img src=\"figure-two.png\" alt=\"Pigment, Matrix, Substrate\"></p>\n<p>I know what you’re thinking right now; “Wait, we’re not analog here.” We’re digital. We need pixels. And that’s true, we do need pixels. Let’s reframe these principles:</p>\n<p><img src=\"figure-three.png\" alt=\"Aesthetic, Conceptual, Material\"></p>\n<p>Thinking about our substrate, our materials are our devices, which render with pixels.</p>\n<h2>But our materials change -</h2>\n<p><img src=\"figure-four.png\" alt=\"Aesthetic, Conceptual, Material\"></p>\n<p>Our devices get more and more pixel density, their proportions change, technology improves, CSS abstracts a ‘pixel’ of its own, Android exists, and all of a sudden our materials get away from us and focusing on the pixel gives us an aneurysm.</p>\n<p>But don’t worry, because:</p>\n<p><img src=\"figure-one.png\" alt=\"Pixels Don't Matter\"></p>\n<h2>We still have two other layers to work through.</h2>\n<p><img src=\"figure-five.png\" alt=\"Pixels Don't Matter\">\nOur materials don’t dictate our aesthetics nor or concept, but materials do inform our decisions. So think about pixels, but put them in the proper place - as the substrate of our work.</p>\n<h2>Measurement systems are abstract ideas -</h2>\n<p><img src=\"figure-six.png\" alt=\"measure\">\nAn inch is not a thing, a foot is not a thing. The pixel is a phsyical thing, and as a physical thing we’ve seen that it’s prone to change.</p>\n<h2>The pixel is a terrible way to measure things.</h2>\n<p><img src=\"figure-seven.png\" alt=\"pixel\">\nSo use another system to measure, any other system. The ratios, the proportions, the relationships and the hierarchies are important. That’s where we do our work as designers.</p>\n<p>So don’t stress pixels. Spare them a thought when you get started, and know that at some point in the process they’ll make themselves apparent, and will need to be addressed. But the pixels will let you know, and when you need to deal with them they’ll be there.</p>\n<h2>Show Time</h2>\n<p>These are some comps for the <a href=\"/projects/mapattack\">MapAttack</a> mobile app.</p>\n<p><img src=\"figure-eight.png\" alt=\"Mapattack Comps\"></p>\n<p>Every element is specified by exact pixel counts. The typefaces are defined, the margins, the padding, and the border strokes are each precisely determined and labeled.\nDon’t get the wrong idea - this isn’t my hypocrisy you’re seeing. These designs didn’t <em>start</em> life here, this is just where they ended up.</p>\n<p>Before handing off my design, I basically ran pre-press on it. Our developers do need pixels - they need these values. They need them for execution and production. So we, as their designers, need to give them pixels. But we also need to give them more than just that.</p>\n<p><img src=\"figure-nine.png\" alt=\"Mapattack Comps Closeup\"></p>\n<p>We need to give them the blueprints for how we <em>think</em> about the design. That means showing what’s proportional as proportion, showing what’s fluid as fluid. This gives our static comps the life they need to work for a huge range of devices.</p>\n<h2>Love the Pixel, let it be a Pixel.</h2>\n<p>Letting Pixels be beautiful, blocky, physical little things means using them to render our designs, not dictate them. It means using actual measurement systems to measure. And more importantly, it gives us a way to understand our layout better, to arrive at more considered designs, and to understand our designs as they live on actual hardware in the actual world.</p>\n","data":{"fm":{"title":"Pixels don't matter.","slug":"pixels-dont-matter","date":"2013.10.21","description":"They don't.","type":"text, texts"}},"map":""}],["portland-transportation-system-plan",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"Portland Transporation System Plan\",\"slug\":\"portland-transportation-system-plan\",\"site\":\"http://pbot-tsp.surge.sh\",\"date\":\"2017.05.20\",\"description\":\"Design & Development of public policy & GIS data presenting the City of Portlands plans for 20 years of public works development. The project has a back end that generates searchable, performant web content from canonical .docx files, as well as presenting an application for exploring GIS data.\",\"type\":\"projects, department\"};\n\tconst { title, slug, site, date, description, type } = metadata;\n</script>\n\n<p><img\n  src=\"https://photos.smugmug.com/Projects/Transporation-service-plan/i-FDz7Dm7/0/06d8752b/X5/home-X5.png\"\n  alt=\"home\"\n></p>\n<p>• Introduce project, public money and accountability, what for and why.\n• Key requirements around Section 508 and WCAAG AA, the Library computer.\n• Map / Text View etc.</p>\n<p><img\n  src=\"https://photos.smugmug.com/Projects/Transporation-service-plan/i-wtLbM6q/0/e06f6dea/X4/txt-X4.png\"\n  alt=\"txt\"\n></p>\n<p>• Text only view, parsed to HTML from legal DocX files.</p>\n<p><img\n  src=\"https://photos.smugmug.com/Projects/Transporation-service-plan/i-JB6728d/0/44ff0340/XL/index-XL.gif\"\n  alt=\"index\"\n></p>\n<p>Table of contents generated from the heading tags, accessible through the index. Scroll to animations keep the user from getting lost.</p>\n<p><img\n  src=\"https://photos.smugmug.com/Projects/Transporation-service-plan/i-6xkt8ZR/0/866a11d6/XL/search-XL.gif\"\n  alt=\"search\"\n></p>\n<p>The complete text is searchable, allowing for quick location of  information by location or type.</p>\n<p><img\n  src=\"https://photos.smugmug.com/Projects/Transporation-service-plan/i-WDDb2MV/0/f418990b/X5/layers-X5.png\"\n  alt=\"layers\"\n></p>\n<p>Canonical data lives in the cities existing GIS, hosted and exposed via ArcGIS online and consumed by Leaflet.</p>\n<p><img\n  src=\"https://photos.smugmug.com/Projects/Transporation-service-plan/i-X4MQVL2/0/5ff57824/X5/draw-X5.png\"\n  alt=\"draw\"\n></p>\n<p>Web-specific cartography and rendering support in leaflet …</p>\n<p><img\n  src=\"https://photos.smugmug.com/Projects/Transporation-service-plan/i-z3tjSrh/0/5aa8532d/X5/popup-X5.png\"\n  alt=\"popup\"\n></p>\n<p>Exploration of features exposed via popup.</p>\n<p><img\n  src=\"https://photos.smugmug.com/Projects/Transporation-service-plan/i-2ZnZVsk/0/a06a6e02/XL/linking-XL.gif\"\n  alt=\"linking\"\n></p>\n<p>Connection between data in popups, connecting to relevant section in the text.</p>\n","data":{"fm":{"title":"Portland Transporation System Plan","slug":"portland-transportation-system-plan","site":"http://pbot-tsp.surge.sh","date":"2017.05.20","description":"Design & Development of public policy & GIS data presenting the City of Portlands plans for 20 years of public works development. The project has a back end that generates searchable, performant web content from canonical .docx files, as well as presenting an application for exploring GIS data.","type":"projects, department"}},"map":""}],["mac/prefers-reduced-motion",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"prefers-reduced-motion; Taking a no-motion-first approach to animations\",\"slug\":\"mac/prefers-reduced-motion\",\"source\":\"https://tatianamac.com/posts/prefers-reduced-motion/\",\"author\":\"Tatiana Mac\",\"year\":2021,\"tags\":\"internet, design, a11y, accessibility, css, development\",\"thesis\":\"Use the prefers-reduced-motion media query to help guide your animation principles. By default, do not include animations, which should only be approached as a progressive enhancement.\",\"type\":\"annotation, bibliography\"};\n\tconst { title, slug, source, author, year, tags, thesis, type } = metadata;\n</script>\n\n<p>While animations can be quite powerful tools for communication relationships and building a brand, Mac notes that “Animations, especially when overused and abused, can make people very ill.”</p>\n<p>Mac notes that in their practice, the guiding approach is to default to the users explicit preferences:</p>\n<blockquote>\n<p>A core accessibility approach of mine is to let the user determine what’s best for them and to enable as many user settings as I can. Most operating systems allow us to reduce the motion and have for a very long time.</p>\n</blockquote>\n<p>It’s hard to find argument with this. This is clearly a good principle. This article will focus on <code>prefers-reduced-motion</code>, but its worth taking a note here that there are others which should be explored and expanded on, perhaps a project for another day.</p>\n<p>Mac leads with the two values for <code>prefers-reduced-motion</code> : <code>no-prefernce</code> and <code>reduced</code>. Importantly, Mac notes:</p>\n<blockquote>\n<p>I want to make a critical note here that this is operating on a no-consent model. Ew. The user hasn’t necessarily opted into animations. They just haven’t checked “Reduce motion.” That could be because they like and can tolerate animations, or, it’s equally possible the user doesn’t know about this setting. So, I want us to make sure we’re not assuming that these users necessarily want animations.</p>\n</blockquote>\n<p>Mac cuts through what could easily be bad assumptions at the beginning of a project. Thinking carefully about what our starting assumptions — our front end axioms if you will — <em>actually are and are not</em> is of critical importance. </p>\n<blockquote>\n<p>Start with No Motion … When I collaborate with a designer/animator on an animation, I first ask, “Is this animation critical to understanding the content?” … More often than not, the answer is “no.” … When conceived well, animations should be an enhancement to an explanation.</p>\n</blockquote>\n<p>Mac will then default to <code>animation: none</code>, removing all animation entirely. Therefor, following the <code>first</code> methodology, we only <em>add</em> animation if the user settings are explicit about <code>no-preference</code>. Mac notes that the <code>first</code> methodology means that for older browsers without support for the media query, we default to the <em>more accessible</em> option. This is related to <a\n  href=\"/bibliography/pickering/is-progressive-enhancement-dead-yet\"\n>Pickering’s explanation of Progressive Enhancement.</a>.</p>\n<p>Mac than notes that we can remove <em>all</em> the animations from the base style sheet bundle, and only serve them <em>if the user has <code>no-preference</code> set</em></p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\">&lt;link\n  rel=&quot;stylesheet&quot;\n  href=&quot;animations.css&quot;\n  media=&quot;(prefers-reduced-motion: no-preference)&quot;\n/&gt;</code>`}</pre>\n<p>This is rather clever, because it creates an argument from performance for following a principle for accessibility. </p>\n<p>Mac then fleshes out a scenario where the designer has determined that the animation is in fact <em>critical</em> to the interaction. My favorite question to ask in this case (and Mac’s “spiciest” is their direct and to the point “If the animation can’t load for someone or they can’t see it, what was your plan?“.</p>\n<p>Mac than moves to exploring other, non-css based animations:</p>\n<ul>\n<li>Auto-playing video: Don’t do it. Just, don’t do it.</li>\n<li>JavaScript animations: find a way to respect the setting, those tools are there. My take: don’t do it.</li>\n</ul>\n<p>Mac ends the article with their own references. </p>\n<p>I particularly like and am compelled by Mac’s argument that “by default we should do the most accessible thing” which is very close to my own principle of “do as little as possible” or “keep it stupid simple”, as well as Mac’s commitment to knowing what the user settings are and respecting <em>all of them</em>. I for one have more to learn in this regard.</p>\n","data":{"fm":{"title":"prefers-reduced-motion; Taking a no-motion-first approach to animations","slug":"mac/prefers-reduced-motion","source":"https://tatianamac.com/posts/prefers-reduced-motion/","author":"Tatiana Mac","year":2021,"tags":"internet, design, a11y, accessibility, css, development","thesis":"Use the prefers-reduced-motion media query to help guide your animation principles. By default, do not include animations, which should only be approached as a progressive enhancement.","type":"annotation, bibliography"}},"map":""}],["saxena/there-really-is-no-ethical-restaurant-under-capitalism",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"There Really Is No Ethical Restaurant Under Capitalism\",\"slug\":\"saxena/there-really-is-no-ethical-restaurant-under-capitalism\",\"source\":\"https://www.eater.com/21398969/future-co-op-worker-owned-restaurants-ethical-business\",\"author\":\"Jaya Saxena\",\"year\":2020,\"tags\":\"food, ethics, work\",\"thesis\":\"Building an equitable restaurant — where all workers are paid fairly, have benefits, and work without discrimination — will require undoing the way most restaurants are run\",\"date\":\"2020.09.01\",\"type\":\"annotation, bibliography\"};\n\tconst { title, slug, source, author, year, tags, thesis, date, type } = metadata;\n</script>\n\n<blockquote>\n<p>TheThe only ethical restaurant I have ever heard of is on Star Trek: Deep Space Nine</p>\n</blockquote>\n<p>Saxena is is immediately concerned with the entire process of restaurant, and identifies that she’s never even heard of a restaurant coming close to ethical outside of utopian fiction. </p>\n<blockquote>\n<p>Building an equitable restaurant, a place where all workers are paid fairly, have benefits, and can work in an anti-discriminatory environment, is going to take a near-undoing of the way most restaurants are run.</p>\n</blockquote>\n<p>This applies to companies and agencies that make the internet function as well.</p>\n<blockquote>\n<p> Living in a country that provided universal health care, federally mandated paid child leave and sick leave, and a living minimum wage, as well as incentivized sustainable farming, encouraged unions, and got rid of at-will employment, would go a long way toward creating environments within restaurants (and all businesses) where workers had power over their own livelihood.</p>\n</blockquote>\n<p>Again, this applies to the basic functioning of how we build the internet. The structure <em>around</em> how we make what we make directly informs and is inextricable from what results and ethics of what we make.</p>\n<blockquote>\n<p>…but Vartan continued to bring it up with employees, and eventually worked with Project Equity, an organization that advocates for and consults with companies to pivot to employee-owned models, to become a worker cooperative.</p>\n</blockquote>\n<p>Employee-owned companies are a step in the right direction. However, places like Amazon give their options stock options that vest. This is a common model for start-ups (Github). </p>\n<blockquote>\n<p>A Slice of New York allows employees to become co-owners after they’ve spent at least a year at the company; as of now, about 45 percent of the employees are co-owners.</p>\n</blockquote>\n<p>However it sounds like having access to stocks and being a true ESOP like this Pizza Joint or Miller Paint is a different deal. </p>\n<blockquote>\n<p>The restaurant’s governance is what’s really affected: Every co-owner has an equal share of the business and a vote on a board. Board members all have an equal say in decisions about benefits, safety procedures, menu changes, and issues dealing with the general financial wellbeing of the company. </p>\n</blockquote>\n<p>This is a revolutionary idea for the tech industry. This is what ethical starts to look like. </p>\n<blockquote>\n<p>No matter how kindly run and community-focused a restaurant’s structure is, wages are often the sticking point. After all, it’s a job; getting paid is the goal. And as much as co-op or nonprofit structures help with the overall work culture, they do not solve the problem so many restaurants face: It costs money to pay people a living wage.</p>\n</blockquote>\n<blockquote>\n<p>The reality is, even though Charmington’s is paying as much as it can while ensuring it can stay afloat, workers could probably make more elsewhere.</p>\n</blockquote>\n<p>Does “ethical” need to be compromise in this way?</p>\n<blockquote>\n<p>… when it comes to restaurants, it’s hard to change one thing unless you’re changing everything.</p>\n</blockquote>\n<p>There are systemic forces at work that prevent any individual, or even any small community from truly reaching a place of ethical behavior. This makes me think that there has to be a split between “acting ethically” and “being ethical”. We can all act ethically, working our way upstream against the system forces arrayed against us, but that’s no guarantee that we will, at the end of the day, be ethical. </p>\n<blockquote>\n<p>Of course, not every meal can realistically be $195 per person. The cost of providing every employee with a living wage and benefits — not to mention paying rent and insurance, and serving a good product affordable enough for most people — is nearly impossible with the way restaurants, co-op or not, must run. </p>\n</blockquote>\n<p>Why is this? We live in a time of unprecedented efficiency, unbelievable abundance, and massive wealth but if a <em>restaurant</em> is called to truly account for its exploitation to charge its true price, it’s immediately untenable. This feels like it must be true across many industries – Uber would rather cease service in California than treat it’s drivers like employees. What would it take to truly understand what the network of costs, values, debts, and the real price of things?</p>\n<blockquote>\n<p>The problem of “good” food being prohibitively expensive can’t be completely solved by restaurateurs turning those knobs. Depressed wages and inflation are problems for everyone, not just restaurant workers</p>\n</blockquote>\n<p>Are those really two issues at work? I get the sense that those are both symptoms of an underlying disconnection between labor & resources and consumption. </p>\n<blockquote>\n<p>Now, “value” can include not just customer experience, but the knowledge that employee well-being is part of the plan.</p>\n</blockquote>\n<p>Is that a value add?? Are we now just selling ethical choices, and letting the concept of the market determine how we can work? Because than we’re just playing the same game with the rich being able to “choose” ethical consumption methods and purchase the ability to do the right thing, which absolves them of responsibility to change the system and support systemic reform. I guess this is the classic reform vs revolution problem, and the source of revolutionaries attacking reformers for making a broken system more bearable instead of truly fixing it. Again tho – the system isn’t broken but designed. Getting out of that polemic means identifying the design. </p>\n<blockquote>\n<p>But everything restaurants can do on their own is a few drops in a bucket compared to what government support in the form of things like universal health care, or real aid for small businesses, could achieve.</p>\n</blockquote>\n<p>Thats the dream that articulated by Star Trek – government entities who have the ability to make real change <em>do</em>.</p>\n<blockquote>\n<p>Sustained change will take a greater understanding of what “equity” means, and what it will require from both restaurants and customers. As bad as the pandemic has been, it has put us in a great position to do that sort of reevaluation, and reimagine a restaurant as a place where success doesn’t mean profit, but rather that the whole community, farm-to-table, is cared for. And to maybe even fight for a day when it won’t be the responsibility of restaurants to solve these problems at all</p>\n</blockquote>\n","data":{"fm":{"title":"There Really Is No Ethical Restaurant Under Capitalism","slug":"saxena/there-really-is-no-ethical-restaurant-under-capitalism","source":"https://www.eater.com/21398969/future-co-op-worker-owned-restaurants-ethical-business","author":"Jaya Saxena","year":2020,"tags":"food, ethics, work","thesis":"Building an equitable restaurant — where all workers are paid fairly, have benefits, and work without discrimination — will require undoing the way most restaurants are run","date":"2020.09.01","type":"annotation, bibliography"}},"map":""}],[null,{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"Salient Supply\",\"site\":\"http://salient.supply\",\"date\":\"2017-07-14T00:00:00.000Z\",\"description\":\"A portfolio for a local copywriter, content strategist, brand voice writer, and all around wonderful freelancer in Portland.\",\"type\":\"projects, department\",\"archived\":true};\n\tconst { title, site, date, description, type, archived } = metadata;\n</script>\n\n\n","data":{"fm":{"title":"Salient Supply","site":"http://salient.supply","date":"2017-07-14T00:00:00.000Z","description":"A portfolio for a local copywriter, content strategist, brand voice writer, and all around wonderful freelancer in Portland.","type":"projects, department","archived":true}},"map":""}],["soft-proof",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"Soft Proof\",\"slug\":\"soft-proof\",\"date\":\"2017.10.29\",\"description\":\"Translations and compromises in image making or; the Image Cult Society.\",\"type\":\"text, texts\"};\n\tconst { title, slug, date, description, type } = metadata;\n</script>\n\n<p>There’s an interesting thing that happens when a new idea or technology gets introduced then quickly assimilated into the background hum of our daily lives. It starts out with a discreet name — a clear identifier of what this thing is and means. Than this name just sort of … slips away. It becomes so normal that to name it would seem strange. Its original name doesn’t seem to fit any more, as the name existed in the first place to demarcate the new thought from the ordinary. And now the new thing is just ordinary. Think about Google Maps. It’s just … a map. In 2005, when Google Maps was first released, it’s particular approach to the interface of a digital map was called a ‘slippy map’. Weird, right?</p>\n<p>This is an interesting phenomenon around cultural approaches to technology, but not actually what I want to talk about. I want to talk about soft proofs. Soft proofs are an example of this taken to an extreme — you use them every day but you have probably never heard of them. There is no need for the soft proof to be something other than normal, the soft proof just <em>is</em> normal. But what is a soft proof, and why is it so normal? And why do I want to explore a topic so quotidian that the word used to mark it as interesting is so faded and worn?</p>\n<p>A soft proof is a way of viewing an image before the image has been reproduced mechanically. In contrast to the soft proof is the hard proof: a way of viewing an image immediately after it’s been reproduced mechanically. Basically, a soft proof is an image on a screen that will be sent to a printer. Otherwise known as an image. It’s need for a discreet name seems so unnecessary that it seems bizarre to refer to all images - even this text as I write it – as soft proofs. But that is, in essence, what they are. We see images on our screens that an be reliably turned into images on other peoples screens, and even into physical images on paper.</p>\n<p>The reason why this needed a name to demarcate it as special — during the advent of the digital  — is that this is a really hard problem to solve. There are a range of mathematical models for approaching a relatively unified theory of color and vision, and a wide range of physical pieces of machinery that are tasked with producing those images — from printing presses to monitors. The act of ensuring an image can be predictably reproduced is necessarily an act of translation. Translating from this color space to that; from an additive color model of a screen to the subtractive color model of ink and paper; approximating the color of a paper stock to be printed on.</p>\n<p>This translating process is done using something called a Color Profile. A Color Profile is a set of rules for ensuring that an image created with red, green, and blue light can be replicated on off-white paper using cyan, magenta, yellow, orange, and green inks. The current workflow of digital to print is so smooth, so ubiquitous and mundane, as to occlude the massive technological feat that it supports it.</p>\n<p>This feat was undertaken by a small group of technology companies I the early 90s, and they collaborated to define a universal standard of how this would work. </p>\n<blockquote>\n<p>The International Color Consortium was formed in 1993 by eight industry vendors in order to create an open, vendor-neutral color management system which would function transparently across all operating systems and software packages… . The eight founding members of the ICC were Adobe, Agfa, Apple, Kodak, Microsoft, Silicon Graphics, Sun Microsystems, and Taligent.</p>\n</blockquote>\n<p><a\n  href=\"https://ninedegreesbelow.com/photography/icc-profile-negative-tristimulus.html#luther\"\n  rel=\"nofollow\"\n>- Color Science History and the ICC Profile Specifications, Elle Stone</a></p>\n<p>The current, baseline profiles built around RGB and CMYK came about with the rise of digital image-making, which is the basis of the the current world around us, a world built on and predicated by images.</p>\n<p>The dominant translation <em>is</em> dominant because it — to a large degree — works. Creating color profile is really hard, mathy, phsysicsy stuff. It’s hard to do yourself. But CMYK/RGB cuts the corners off the world to make it fit into a gamut that can be handled. But by necessity it’s a compromise: what colors are we not handling in order to handle the maximum number of colors? What parts of the color space get left behind?</p>\n<blockquote>\n<p>Many of these issues give me the feeling at times of reluctant rather than open co-operation between some of the companies that created this standard. Having said that, there does seem enough information in the public standard (when combined with examining available existing  profiles) to effectively and accurately characterize color profiles of devices and color spaces. I could imagine there being some poor results at times though, due to some looseness in the spec.</p>\n</blockquote>\n<p><a\n  href=\"https://argyllcms.com/icc_problems.html\"\n  rel=\"nofollow\"\n>—  What’s wrong with the ICC profile format anyway?, Graeme Gill</a></p>\n<p>Its important to understand this compromise; understand how it works and what exchange we’re making in the process. What are we giving up, and what are we getting in return?</p>\n<p>What are we leaving on the table? For example, photography (up until the 80’s) calibrated for white people. African Americans and other dark skinned people photographed poorly. They were outside the color space. The story goes that school photos of interracial classrooms would have rows of perfectly exposed white kids, and voids where the black children should have been (<a\n  href=\"http://www.broombergchanarin.com/text-racism-of-early-colour/\"\n  rel=\"nofollow\"\n>Adamn Broomberg</a>). More than this, the standards only changed with industry pressure from chocolate and furniture manufacturers — a realm of capital where the browns and blacks matter (<a\n  href=\"https://priceonomics.com/how-photography-was-optimized-for-white-skin/\"\n  rel=\"nofollow\"\n>Rosie Cima</a>). </p>\n<blockquote>\n<p>Film chemistry, photo lab procedures, video screen colour balancing practices, and digital cameras in general were originally developed with a global assumption of ‘Whiteness.’”</p>\n</blockquote>\n<p><a\n  href=\"http://www.cjc-online.ca/index.php/journal/article/view/2196\"\n  rel=\"nofollow\"\n>— Looking at Shirley, the Ultimate Norm: Colour Balance, Image Technologies, and Cognitive Equity, Lorna Roth</a></p>\n<p>With the creation of the RGB color space, with the creation of the ICC, we ceded the visual world to supermassive tech interests, much like we’ve ceded our privacy and personal data. In doing so we’ve inherently made the creation and dissemination of images into a tool for capital — one that supports dominant power structures.</p>\n<p>How do we understand the implicit, invisible, baked in assumptions of the soft proof? We can start by operating outside the parameters of the soft proof, recognize it as a tool to use or not use. The gap between the soft proof & the hard copy is measured in the gap between the tools used to plan & prepare versus the tools used to produce, and we can move in to this gap and inhabit it. We can create work here, and in doing so reclaim some of the space that we’ve given away.</p>\n<p>The Risograph, for example, has a toolchain for soft proofing, but the machine— through its high speed & low cost — also opens up the possibility of designing images through iterative hard proofs; blending the techniques go the modern digital print process with the classical analog ones.</p>\n<p>The web is a strange medium – a blending of soft and hard spaces. A plastique space, with plastic proofs and plastic copies. The same process of translation is at work — between the still & the interactive, flowing image. This is why showing comps & wireframes of websites to clients can be so tricky: our culture of image cult and technological process can elide the critical differences we sense as agents of these systems.</p>\n<p>This is a call for a Marxism of image making — to seize the means of production. To create radical images & tools that exist in the corners of the gamut and color spaces discarded by the soft proof. To understand that planning is not doing, and take control of our own visual languages. </p>\n","data":{"fm":{"title":"Soft Proof","slug":"soft-proof","date":"2017.10.29","description":"Translations and compromises in image making or; the Image Cult Society.","type":"text, texts"}},"map":""}],["stawamus-chief",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"Stawamus Chief, Summit 2\",\"slug\":\"stawamus-chief\",\"description\":\"9 layer Risograph (black, cornflower blue, cornflower blue, cornflower blue, yellow, yellow, yellow, flouro pink) on Somerset Book\",\"source\":\"https://photos.smugmug.com/Prints/Prints/i-x8MdvSM/0/f917b034/X2/mountain-800-X2.png\",\"date\":\"2017.09.22\",\"size\":\"4x6 inches\",\"media\":\"Risograph\",\"alt\":\"A tree beside a pool on the summit of a mountain.\",\"type\":\"art, risograph, edition\"};\n\tconst { title, slug, description, source, date, size, media, alt, type } = metadata;\n</script>\n\n\n","data":{"fm":{"title":"Stawamus Chief, Summit 2","slug":"stawamus-chief","description":"9 layer Risograph (black, cornflower blue, cornflower blue, cornflower blue, yellow, yellow, yellow, flouro pink) on Somerset Book","source":"https://photos.smugmug.com/Prints/Prints/i-x8MdvSM/0/f917b034/X2/mountain-800-X2.png","date":"2017.09.22","size":"4x6 inches","media":"Risograph","alt":"A tree beside a pool on the summit of a mountain.","type":"art, risograph, edition"}},"map":""}],[null,{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"Studio Visit\",\"site\":\"http://www.margotvoorhiesthompson.com\",\"date\":\"2017.06.30\",\"description\":\"A website for a working artist that reflects the process of the studio, and asks for very little in return.\",\"type\":\"projects, department\",\"archived\":true};\n\tconst { title, site, date, description, type, archived } = metadata;\n</script>\n\n\n","data":{"fm":{"title":"Studio Visit","site":"http://www.margotvoorhiesthompson.com","date":"2017.06.30","description":"A website for a working artist that reflects the process of the studio, and asks for very little in return.","type":"projects, department","archived":true}},"map":""}],["kadlec/the-cost-of-javascript-frameworks",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"The Cost of Javascript Frameworks\",\"slug\":\"kadlec/the-cost-of-javascript-frameworks\",\"author\":\"Tim Kadlec\",\"year\":2020,\"source\":\"https://timkadlec.com/remembers/2020-04-21-the-cost-of-javascript-frameworks/\",\"thesis\":\"Javascript inherently is a massive percentage of a performance budget, modern frameworks are less performant than vanilla JS sites.\",\"tags\":\"front end, javascript, performance\",\"type\":\"annotation, bibliography\"};\n\tconst { title, slug, author, year, source, thesis, tags, type } = metadata;\n</script>\n\n<p>Kadlec’s thesis is that Javascript inherently is a massive percentage of a performance budget. From this perspective, he identifies the purpose of frameworks as:</p>\n<blockquote>\n<p>a framework makes it easier to perform well by either providing a better starting point or providing constraints and characteristics that make it hard to build something that doesn’t perform well.</p>\n</blockquote>\n<p>From Kadlex:</p>\n<h2>JavaScript Bytes Served to Mobile Devices, by Percentile</h2>\n<table>\n<thead>\n<tr>\n<th align=\"left\"></th>\n<th align=\"left\">10th</th>\n<th align=\"left\">25th</th>\n<th align=\"left\">50th</th>\n<th align=\"left\">75th</th>\n<th align=\"left\">90th</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">All Sites</td>\n<td align=\"left\">93.4kb</td>\n<td align=\"left\">196.6kb</td>\n<td align=\"left\">413.5kb</td>\n<td align=\"left\">746.8kb</td>\n<td align=\"left\">1,201.6kb</td>\n</tr>\n<tr>\n<td align=\"left\">w/ jQuery</td>\n<td align=\"left\">110.3kb</td>\n<td align=\"left\">219.8kb</td>\n<td align=\"left\">430.4kb</td>\n<td align=\"left\">748.6kb</td>\n<td align=\"left\">1,162.3kb</td>\n</tr>\n<tr>\n<td align=\"left\">w/ Vue.js</td>\n<td align=\"left\">244.7kb</td>\n<td align=\"left\">409.3kb</td>\n<td align=\"left\">692.1kb</td>\n<td align=\"left\">1,065.5kb</td>\n<td align=\"left\">1,570.7kb</td>\n</tr>\n<tr>\n<td align=\"left\">w/ Angular</td>\n<td align=\"left\">445.1kb</td>\n<td align=\"left\">675.6kb</td>\n<td align=\"left\">1,066.4kb</td>\n<td align=\"left\">1,761.5kb</td>\n<td align=\"left\">2,893.2kb</td>\n</tr>\n<tr>\n<td align=\"left\">w/ React</td>\n<td align=\"left\">345.8kb</td>\n<td align=\"left\">441.6kb</td>\n<td align=\"left\">690.3kb</td>\n<td align=\"left\">1,238.5kb</td>\n<td align=\"left\">1,893.6kb</td>\n</tr>\n</tbody>\n</table>\n<h2>Scripting related CPU time (in milliseconds) for mobile devices, in percentiles</h2>\n<table>\n<thead>\n<tr>\n<th align=\"left\"></th>\n<th align=\"left\">10th</th>\n<th align=\"left\">25th</th>\n<th align=\"left\">50th</th>\n<th align=\"left\">75th</th>\n<th align=\"left\">90th</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">All Sites</td>\n<td align=\"left\">356.4ms</td>\n<td align=\"left\">959.7ms</td>\n<td align=\"left\">2,372.1ms</td>\n<td align=\"left\">5,367.3ms</td>\n<td align=\"left\">10,485.8ms</td>\n</tr>\n<tr>\n<td align=\"left\">w/ jQuery</td>\n<td align=\"left\">575.3ms</td>\n<td align=\"left\">1,147.4ms</td>\n<td align=\"left\">2,555.9ms</td>\n<td align=\"left\">5,511.0ms</td>\n<td align=\"left\">10,349.4ms</td>\n</tr>\n<tr>\n<td align=\"left\">w/ Vue.js</td>\n<td align=\"left\">1,130.0ms</td>\n<td align=\"left\">2,087.9ms</td>\n<td align=\"left\">4,100.4ms</td>\n<td align=\"left\">7,676.1ms</td>\n<td align=\"left\">12,849.4ms</td>\n</tr>\n<tr>\n<td align=\"left\">w/ Angular</td>\n<td align=\"left\">1,471.3ms</td>\n<td align=\"left\">2,380.1ms</td>\n<td align=\"left\">4,118.6ms</td>\n<td align=\"left\">7,450.8ms</td>\n<td align=\"left\">13,296.4ms</td>\n</tr>\n<tr>\n<td align=\"left\">w/ React</td>\n<td align=\"left\">2,700.1ms</td>\n<td align=\"left\">5,090.3ms</td>\n<td align=\"left\">9,287.6ms</td>\n<td align=\"left\">14,509.6ms</td>\n<td align=\"left\">20,813.3ms</td>\n</tr>\n</tbody>\n</table>\n<p>The takeaway is that modern frameworks, when deploying in a best-in-class manner, can be as lightweight as an average framworkless website, but on average – and absolutely including worst case implementations – modern frameworks are incredibly bloated. In particular, Angular serves heavy pages, React serves slow pages.</p>\n<p>From observing the data between sites that detect React <em>at all</em> and sites that only detect React (as in, for sure no jQuery) Kadlec observes that main thread performance drops significantly. This is a clear indication that migrating from jQuery to React harms main thread performance.</p>\n<blockquote>\n<p>If you have React and jQuery running alongside each other, you’re more likely to be in the midst of a migration to React, or a mixed codebase. Since we have already seen that sites with jQuery spend less time on the main thread than sites with React, it makes sense that having some functionality still driven by jQuery would bring the numbers down a bit.</p>\n</blockquote>\n<p>Additionally, Kadlec observes that mobile devices suffer from this performance decrease more than desktop devices. This suggests that modern frameworks explicitly are avoiding a mobile-first mentality, and relying on contemporary hardware.</p>\n<p>To wrap up, Kadlec suggests that this data isn’t indicative of the baseline performance capabilities of a framework, but rather indicates that the <em>implementation</em> is at fault. If in general the implementation of a framework is causing performance issues, that the primary fault is in the ecosystem, documentation, and community standards around that framework.</p>\n","data":{"fm":{"title":"The Cost of Javascript Frameworks","slug":"kadlec/the-cost-of-javascript-frameworks","author":"Tim Kadlec","year":2020,"source":"https://timkadlec.com/remembers/2020-04-21-the-cost-of-javascript-frameworks/","thesis":"Javascript inherently is a massive percentage of a performance budget, modern frameworks are less performant than vanilla JS sites.","tags":"front end, javascript, performance","type":"annotation, bibliography"}},"map":""}],["marcotte/the-design-system-between-us",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"The Design System Between Us\",\"slug\":\"marcotte/the-design-system-between-us\",\"author\":\"Ethan Marcotte\",\"year\":2020,\"source\":\"https://ethanmarcotte.com/wrote/the-design-systems-between-us\",\"thesis\":\"Design systems by default entrench existing workflows rather than changing them.\",\"tags\":\"design systems, design/development\",\"type\":\"annotation, bibliography\"};\n\tconst { title, slug, author, year, source, thesis, tags, type } = metadata;\n</script>\n\n<blockquote>\n<p>But in my experience, design systems haven’t brought this kind of rich, cross-functional collaboration to most organizations. Instead, the existing divisions between design and implementation have become entrenched, and massively so.</p>\n</blockquote>\n<p>Marcotte has observed that design systems solidify, codify, and reinforce existing divisions between the silos of ‘engineering’ and ‘designing’. He identifies that there has not been any tooling that’s emerged to work in the space between designing and developing, and our tools today are still one-or-the-other. Marcotte also references others like Tom MacWright and Tim Kadlec in identifying that the contemporary complexity and weight of the front end makes it harder for designers to be integrated into those systems. </p>\n<p>Marcotte also suggests that a metric for design system health can be found in identifying the process of a designer changing production css: how does that happen? How long does that take? Who is involved?</p>\n<blockquote>\n<p> For many organizations, the technical barriers to cross-functional collaboration can be unacceptably high … More often than not, your design system becomes a mirror of the way your team already works</p>\n</blockquote>\n<p>Marcotte calls out the importance of a design system is in articulating <em>how a team works</em>, and that the relationship between designing and developing is one of the core relationships that a design system has to contend with.</p>\n","data":{"fm":{"title":"The Design System Between Us","slug":"marcotte/the-design-system-between-us","author":"Ethan Marcotte","year":2020,"source":"https://ethanmarcotte.com/wrote/the-design-systems-between-us","thesis":"Design systems by default entrench existing workflows rather than changing them.","tags":"design systems, design/development","type":"annotation, bibliography"}},"map":""}],["russel/the-performance-iniquality-gap",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"The Performance Inequality Gap\",\"slug\":\"russel/the-performance-iniquality-gap\",\"author\":\"Alex Russel\",\"year\":2021,\"source\":\"https://infrequently.org/2021/03/the-performance-inequality-gap/\",\"tags\":\"js, web, development\",\"thesis\":\"When we construct the digital world to the limits of the best devices, we build a less usable one for the 80+% of the world's users. A rule of thumb limit is ~100KiB of HTML/CSS/fonts and ~300-350KiB of JS (compressed).\",\"type\":\"annotation, bibliography\"};\n\tconst { title, slug, author, year, source, tags, thesis, type } = metadata;\n</script>\n\n<p>Russel identifies web performance as a long-standing issue that took new significance a few years back with the combined proliferation of front end frameworks and low-end android phones. Russel identifies that the experience of <em>being</em> on the web is about the whole experience, and any given slowdown in that experience creates a negative impression of the entire experience, raising the stakes of poor performance across the entire web ecosystem.</p>\n<p>Russel notes that baseline devices are getting better, but our bundle sizes continue to bloat.</p>\n<blockquote>\n<p>Median mobile JavaScript payloads have only grown since 2016, now hovering above 400KiB of script transferred, or nearly 2.5MiB of uncompressed JS.</p>\n</blockquote>\n<p> Russel notes that browsers have gotten a lot better at unpacking and parsing JS:</p>\n<blockquote>\n<p>The single largest improvements visible in traces come from improved parsing and off-thread compilation of JavaScript. This step-change, along with improvements to streaming compilation, has helped to ensure that users are less likely to notice the unreasonably-sized JS payloads that “modern” toolchains generate more often than not.</p>\n</blockquote>\n<p>We do end up inducing demand with these better systems: we build to fill the space we have. Russel notes that despite the JS off-thread improvements, main thread tasks (like DOM manipulation and layout paints) remain a significant challenge.</p>\n<p>Completely static sites with no requirement on JS for initial paint remains the gold standard in performance.</p>\n<p>Russel notes that the standard 3G network of 2017 left a very narrow margin for successfully loading a site in under 5 second:</p>\n<blockquote>\n<p>The hard floor of that model (~1.6s) came from the contributions DNS, TCP/IP, and TLS connection setup over a then-reasonable 3G network baseline, leaving only 3400ms to work with, fighting Nagle and weak CPUs the whole way. Adding just one extra connection to a CDN for a critical path resource could sink the entire enterprise. Talk about a hard target.</p>\n</blockquote>\n<p>4G has become significantly more prevalent, especially across India. This raises the global baseline significantly due to the enormous number of users there, but raises questions about the state go 4G across African nations. <a\n  href=\"https://www.opensignal.com/sites/opensignal-com/files/data/reports/pdf-only/data-2020-05/state_of_mobile_experience_may_2020_opensignal_3_0.pdf\"\n  rel=\"nofollow\"\n>Open Signal</a> suggests that slow-is 4G everywhere is a reasonable assumption.</p>\n<p>Another problem with global baseline performance is the age of devices. These devices are a far, far cry from a recent or new iPhone. The Moto G4 remains a reasonable proxy for An Average Device. This remains unchanged since 2016, hence the articles thesis. The top-of-the-line models like my iPhone 11 are accelerating away from the global baseline of the Moto G4, creating a widening performance gap.</p>\n<blockquote>\n<p>low-end Androids have finally caught up to the iPhone 5 from 2012</p>\n</blockquote>\n<p>Oh god.</p>\n<blockquote>\n<p>Things continue to get better and better for the wealthy, leaving the rest behind. When we construct a digital world to the limits of the best devices, the worse an experience we build, on average, for those who cannot afford iPhones or $800 Samsung flagships.</p>\n</blockquote>\n<p>Russel transitions into a call to action framed in a moral imperative after noting that the landscape we’re building into our devices mirrors the economic and political structures driving our world into the dust.</p>\n<blockquote>\n<p>As frontenders, our task is to make services that work well for all, not just the wealthy … It’s in that spirit that I find it important to build to a strawperson baseline device and network target. Such a benchmark serves as a stand-in until one gets situated data about a site or service’s users, from whom we can derive informed conclusions about user needs and appropriate resource budgets.</p>\n</blockquote>\n<p>Russel notes that this is especially important for developers of libraries:</p>\n<blockquote>\n<p>A global baseline is doubly important for generic frameworks and libraries, as they will be included in projects targeted at global-baseline users, whether or not developers have that in mind.</p>\n</blockquote>\n<p>So buy a Moto G4 or a Moto E6 and test your projects on a 3G cellular network.</p>\n<p>Hitting 5s on these devices remains tricky, as a number of connections and efficiency of compiling and running JS can eat up lots of time and reduce the data cap.</p>\n<blockquote>\n<p>That’s a very fine point to balance on, though. A single additional TCP/TLS connection setup in the critical path reduces the amount by 100KiB (as do subsequent critical-path network handshakes) … In practice, you can’t actually afford 600KiB of content if your application is build in the increasingly popular “single page app” style.</p>\n</blockquote>\n<p>This leads to the final summary of a budget.</p>\n<blockquote>\n<p>Conservatively then, assuming at least 2 connections need to be set up (burning ~1400 of our 5000ms), and that script resources are in the critical path, the new global baseline leaves space for ~100KiB (gzipped) of HTML/CSS/fonts and 300-350KiB of JavaScript on the wire (compressed). Critical path images for LCP, if any, need to subtract their transfer size from one of these buckets, with trades against JS bundle size potentially increasing total download budget, but the details matter a great deal. For “modern” pages, half a megabyte is a decent hard budget.</p>\n</blockquote>\n<p>Russel ends optimistically, noting that the broader industry has gotten more serious about real user metrics and attempting to understand the real-world ecosystem across the globe, but calls out specifically the front-end industry professionals and suggests that we all need to put the health of the system before our own desire for comfort.</p>\n<p>This site — as of writing this annotation on 2021.03.12 — sends 166kB over the wire and decompresses to 301kB. JavaScript accounts for 62.2kB/188kB (over-the-wire/uncompressed) of that. Importantly, the site itself is completely static — the original page comes over the wire ready to view (with inlined CSS even). On an emulated Moto G4, Lighthouse gives us a time-to-interactive of 1.2s. This is almost entirely due to our use of <a\n  href=\"https://svelte.dev/\"\n  rel=\"nofollow\"\n>Svelte</a>, and the fact that the homepage has basically no interactions or content. The more involved pages like <a\n  href=\"/bibliography\"\n>the bibliography</a> and (an art page)[] clock a time-to-interactive of 2.9s and 1.1s respectively — but loading the image takes an incredible 8.3s, pulling down 1.2mB over the wire.</p>\n","data":{"fm":{"title":"The Performance Inequality Gap","slug":"russel/the-performance-iniquality-gap","author":"Alex Russel","year":2021,"source":"https://infrequently.org/2021/03/the-performance-inequality-gap/","tags":"js, web, development","thesis":"When we construct the digital world to the limits of the best devices, we build a less usable one for the 80+% of the world's users. A rule of thumb limit is ~100KiB of HTML/CSS/fonts and ~300-350KiB of JS (compressed).","type":"annotation, bibliography"}},"map":""}],["untitled-island",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"Untitled (Island)\",\"slug\":\"untitled-island\",\"description\":\"One layer Risograph. Collaboration with [Taryn Wiens](https://www.tarynwiens.com/).\",\"source\":\"https://photos.smugmug.com/Prints/Prints/i-SbDFGs9/0/0d32b584/X2/topo-800-X2.png\",\"date\":\"2017.06.01\",\"size\":\"6x9 inches\",\"media\":\"Risograph\",\"alt\":\"Black and white print of gridded lines, distortd and crumpled to form a vaguely geographic form.\",\"type\":\"art, risograph, edition\"};\n\tconst { title, slug, description, source, date, size, media, alt, type } = metadata;\n</script>\n\n\n","data":{"fm":{"title":"Untitled (Island)","slug":"untitled-island","description":"One layer Risograph. Collaboration with [Taryn Wiens](https://www.tarynwiens.com/).","source":"https://photos.smugmug.com/Prints/Prints/i-SbDFGs9/0/0d32b584/X2/topo-800-X2.png","date":"2017.06.01","size":"6x9 inches","media":"Risograph","alt":"Black and white print of gridded lines, distortd and crumpled to form a vaguely geographic form.","type":"art, risograph, edition"}},"map":""}],["untitled-rainbow",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"Untitled (Rainbow)\",\"slug\":\"untitled-rainbow\",\"description\":\"Two layer Risograph (Flouro Pink and Yellow) on \\\\#40 French Butcher White, Collaboration with Bay Zimmerer-Maza (age 5).\",\"source\":\"https://photos.smugmug.com/Prints/Prints/i-pVFwZKN/0/80e6c402/X3/bay-800-X3.png\",\"date\":\"2017.08.12\",\"size\":\"11x17 inches\",\"media\":\"Risograph\",\"alt\":\"Yellow and pink arcs vertically stacked.\",\"type\":\"art, risograph, edition\"};\n\tconst { title, slug, description, source, date, size, media, alt, type } = metadata;\n</script>\n\n\n","data":{"fm":{"title":"Untitled (Rainbow)","slug":"untitled-rainbow","description":"Two layer Risograph (Flouro Pink and Yellow) on \\#40 French Butcher White, Collaboration with Bay Zimmerer-Maza (age 5).","source":"https://photos.smugmug.com/Prints/Prints/i-pVFwZKN/0/80e6c402/X3/bay-800-X3.png","date":"2017.08.12","size":"11x17 inches","media":"Risograph","alt":"Yellow and pink arcs vertically stacked.","type":"art, risograph, edition"}},"map":""}],["viewport-grid",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"Viewport Grid\",\"slug\":\"viewport-grid\",\"date\":\"2015.04.20\",\"site\":\"http://esripdx.github.io/viewport-grid/\",\"description\":\"A view port based CSS grid system that defines column widths as a set percentage of the screen rather the width of a container.\",\"template\":\"_templates/project.html\",\"block\":\"text\",\"type\":\"projects, esri\"};\n\tconst { title, slug, date, site, description, template, block, type } = metadata;\n</script>\n\n<h3>What It Is</h3>\n<p>A viewport based CSS grid system that defines column widths as a set percentage of the screen rather the width of a container.</p>\n<p><img src=\"./title.png\" alt=\"Viewport Grid\"></p>\n<h4>What It Does</h4>\n<p>Creates a robust grid that simplifies column nesting, responsive widths, while providing options for gutter widths column counts, and other grid behavior. Viewport Grid puts less columns on small screen, and more columns on large screens. A column becomes a standard unit of measurement, creating a constant and abstracted grid system that stands behind the content of a page rather than within it.</p>\n<p><img src=\"./introduction.png\" alt=\"Viewport Grid\"></p>\n<h4>Why We Did It</h4>\n<p>Original designed to address the needs of the  <a\n  href=\"http://esri.github.io/calcite-web/\"\n  rel=\"nofollow\"\n>Calcite Web</a> grid system, Viewport Grid was developed independently in order to expose it’s value to other, non-calcite projects.</p>\n<p><img src=\"./collapsed.png\" alt=\"Viewport Grid\"></p>\n<h4>Why It’s Interesting:</h4>\n<p>Grid theory in graphic design for print applications differs from established methods for using grids in CSS. Viewport Grid works to create a system where the classic grid design techniques can be used on the web, meaning a closer connection between the ‘page’ and the ‘screen.’</p>\n<p><img src=\"./responsive-columns.png\" alt=\"Viewport Grid\">\n<img src=\"./responsive.png\" alt=\"Viewport Grid\"></p>\n<p>Viewport Grid puts less columns on small screen, and more columns on large screens. A column becomes a standard unit of measurement, creating a constant and abstracted grid system that stands behind the content of a page rather than within it. Original designed to address the needs of the  <a\n  href=\"http://esri.github.io/calcite-web/\"\n  rel=\"nofollow\"\n>Calcite Web</a> grid system, Viewport Grid was developed independently to create a system where the classic grid design techniques can be used on the web.</p>\n","data":{"fm":{"title":"Viewport Grid","slug":"viewport-grid","date":"2015.04.20","site":"http://esripdx.github.io/viewport-grid/","description":"A view port based CSS grid system that defines column widths as a set percentage of the screen rather the width of a container.","template":"_templates/project.html","block":"text","type":"projects, esri"}},"map":""}],["dorn/web-brutalism",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"Web Brutalism, Seamfulness, and Notion\",\"slug\":\"dorn/web-brutalism\",\"author\":\"Brandon Dorn\",\"year\":2020,\"source\":\"https://www.viget.com/articles/web-brutalism-seamfulness-and-notion/\",\"tags\":\"design, brutalism, user experience\",\"thesis\":\"The essence of Web Brutalism is a way of creating spaces for thought and expression on the web that reflect the nature of thought and the web.\",\"type\":\"annotation, bibliography\"};\n\tconst { title, slug, author, year, source, tags, thesis, type } = metadata;\n</script>\n\n<blockquote>\n<p>The web is fundamental to modern life, but modern life is also weird and bizarre and our commitment to usability needn’t hinder the expression of that strangeness.</p>\n</blockquote>\n<p>Dorn is writing from the tension between the “weird web” where usability isn’t the primary concern for creating interesting and compelling experiences, and the moral and legal ramifications of universal accessibility. </p>\n<blockquote>\n<p>Web Brutalism has become a catchall term for websites that flout the conventions of modern web design with a kind of droll, utilitarian nostalgia for the early web. </p>\n</blockquote>\n<p>Okay I guess. I wonder how much the original content of the term as design methodology actually remains. </p>\n<blockquote>\n<p> Navigation elements are either in your face or purposefully obscured. 3D art, italics, plain, neo grotesk fonts, monstrous hover states, jewel tones, thick dividing lines, harsh contrasts are some of the hallmarks. The trend is decidedly hip, and popular enough to show up in The New York Times articles and Bloomberg design conference sites. You know it when you see it.</p>\n</blockquote>\n<ul>\n<li><a\n  href=\"https://www.nytimes.com/interactive/2018/04/06/style/meghan-markle-prince-harry-royal-wedding.html\"\n  rel=\"nofollow\"\n>https://www.nytimes.com/interactive/2018/04/06/style/meghan-markle-prince-harry-royal-wedding.html</a></li>\n<li><a\n  href=\"https://www.youtube.com/watch?v=pJt_cKHcFuw\"\n  rel=\"nofollow\"\n>https://www.youtube.com/watch?v=pJt_cKHcFuw</a></li>\n</ul>\n<p>I guess this is actually a little different from what I understand Web Butalism to be, but I get his point. We’re talking here about a post-contemporary style of design that blends 90’s nostalgic elements with high-design print aesthetics while operating in a space of screen-native fluidity. Right on.</p>\n<blockquote>\n<p>”The purists reference strongly to the architectural characteristics of Web Brutalism, such as the concept of ‘truth to materials’ and the use of the purest markup elements available. The UX minimalists, in contrast, see efficiency and performance as the main driver of Web Brutalism and even believe that the radical limitation of possibilities can boost conversions. The ‘anti-ists’ or artists see web design as an (still) undervalued form of art and don’t show much respect [to] the status quo and mostly get bad press.“</p>\n</blockquote>\n<ul>\n<li>Pascal Deville, <a\n  href=\"https://brutalistwebsites.com/\"\n  rel=\"nofollow\"\n>https://brutalistwebsites.com/</a></li>\n</ul>\n<p>Reference: <a\n  href=\"https://www.smashingmagazine.com/2020/01/split-personality-brutalist-web-development/\"\n  rel=\"nofollow\"\n>https://www.smashingmagazine.com/2020/01/split-personality-brutalist-web-development/</a></p>\n<blockquote>\n<p>Most of what’s labeled Web Brutalism is a normcore visual aesthetic — the web version of anti-art, a rejection of refinement and sophistication — rather than a meaningful digital analogue to architectural Brutalism.</p>\n</blockquote>\n<p>I … don’t think that’s true? Web Brutalist are highly refined and sophisticated aesthetic approaches, its just that they revel in a the ironic (so I guess I agree with the “norm core” part).</p>\n<p>After a quick overview of the term <em>Brutalism</em> in it’s original architecture context, Dorn identifies the tension at the heart of the style that will pivot to our discussion of the web:</p>\n<blockquote>\n<p>The debate asks the question, To what extent should an object reveal its structure and operation to the user?</p>\n</blockquote>\n<p>Reminds me of: <a\n  href=\"https://designportland.org/stories/2016/what-do-we-lose-when-its-easy-to-use\"\n  rel=\"nofollow\"\n>https://designportland.org/stories/2016/what-do-we-lose-when-its-easy-to-use</a></p>\n<blockquote>\n<p>Proponents of seamfulness argue that revealing an object’s complexity and operation can aid usability.</p>\n</blockquote>\n<p>See Chalmers and Galani: <a\n  href=\"https://dl.acm.org/doi/10.1145/1013115.1013149\"\n  rel=\"nofollow\"\n>https://dl.acm.org/doi/10.1145/1013115.1013149</a></p>\n<blockquote>\n<p>Seamlessness emphasizes concealment; seamfulness emphasizes transparency.</p>\n</blockquote>\n<p>Dorn identifies Web Brutalism as a rejection of the high-corporate, contextless slickness of Apple and Google, which I very much agree with.</p>\n<blockquote>\n<p>The anti-art aesthetic has become the face of Web Brutalism because it’s fun and edgy and all the cool kids are doing it.</p>\n</blockquote>\n<p>This gives me concern tho, as I see “anti-art” as fundamentally anathema to the Web Brutalist ethos. Dorn follows with: </p>\n<blockquote>\n<p>… [the] purists, minimalists, and anti-ists are all asking, in their own way, what it means to make something on the web that is true to the web</p>\n</blockquote>\n<p>Which is the sort of question and practice that <em>artists</em> engage with. </p>\n<blockquote>\n<p>What is the true material of the web? … But taking it somewhere in-between, seeing the web as primarily an information medium, we can ask the question a little differently: what does it look like to design something that is true to the material of digital information?</p>\n</blockquote>\n<blockquote>\n<p>The structure of [Notion] reflects the structure of the web itself: digital content is purposefully formatted, like semantic HTML elements, and exists in a hierarchical structure (directories on the web, nested pages in Notion), yet can be linked and referenced to create a complex network of information.</p>\n</blockquote>\n<p>This is a great way to identify how to design in a way that is honest to the material of the web, and is I think so foundational and fundamental to good web design that it feels obvious when stated like this but is so often overlooked and one poorly.</p>\n<blockquote>\n<p>This is the essence and opportunity of Web Brutalism: more than a utilitarian aesthetic, it’s a way of creating spaces for thought and expression on the web that reflect the nature of thought and the web. </p>\n</blockquote>\n<p>Yessssssss. This is a great way of looking at what it means to operate with Web Brutalism as a design principle rather than an aesthetic movement. </p>\n","data":{"fm":{"title":"Web Brutalism, Seamfulness, and Notion","slug":"dorn/web-brutalism","author":"Brandon Dorn","year":2020,"source":"https://www.viget.com/articles/web-brutalism-seamfulness-and-notion/","tags":"design, brutalism, user experience","thesis":"The essence of Web Brutalism is a way of creating spaces for thought and expression on the web that reflect the nature of thought and the web.","type":"annotation, bibliography"}},"map":""}],["pressman/medium-design",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"What do we lose when it's easy to use?\",\"slug\":\"pressman/medium-design\",\"author\":\"Andy Pressman\",\"year\":2016,\"source\":\"https://designportland.org/stories/2016/what-do-we-lose-when-its-easy-to-use\",\"tags\":\"design\",\"thesis\":\"The intentional creation of friction in an experience is an essential way to create experience and communicate values.\",\"type\":\"annotation, bibliography\"};\n\tconst { title, slug, author, year, source, tags, thesis, type } = metadata;\n</script>\n\n<p>Pressman runs a local design studio called Rumors. In 2015 they launched a new site that got a lot of critique on Designer News about its ‘usability’. Pressman created an experience when preview thumbnails exist behind the text and flee from the cursor.</p>\n<blockquote>\n<p>I hate the word usability. I hate that it’s squishy, poorly defined … all I can come to is “ease of use”. Is the interface easy to use or easy to understand?</p>\n</blockquote>\n<p>Pressman wonders who the implied “for whom” is in the statement.</p>\n<blockquote>\n<p>All these sites where all being built on the same framework and had the same look and feel.</p>\n</blockquote>\n<p>Pressman explores ‘period styles.’ He examines that web design has clear period styles which are tightly coupled to technological developments. Early web was focused on tables, due to the current tech. Then Bootstrap.css became a thing, and it moved quickly into its own period style. Bootstrap as a framework caused a development of a signature product style.</p>\n<blockquote>\n<p>The more familiar the interface the less cognitive load … users grow accustomed to a set of behaviors … and take the desired action.</p>\n</blockquote>\n<blockquote>\n<p>Did the user do the thing?</p>\n</blockquote>\n<p>Pressman explores how the focus on conversions became the defining impulse to design decisions.</p>\n<blockquote>\n<p>Homogeneity reduces friction.</p>\n</blockquote>\n<p>Friction, and the desire to remove friction for the sake of conversions, drove a uniformity of a period style.</p>\n<p>Pressman offers an example from Speikermann who thinks the web should be alike a book – which is a classic Speikermann take.</p>\n<p>Pressman instead says that the web is a “medium that we inhabit” – and avoiding any friction “reduces the medium to a series of consumer efficiencies.” This reduction has strong similarities to the reduction of our current age – the deletion and removal of anything that doesn’t immediately and efficiently serve the needs of capital.</p>\n<blockquote>\n<p>The web is full of terrible, frustrating experiences … ease of use can and should be empowering.</p>\n</blockquote>\n<p>There are some places – and functions of society – where ease of use is a powerful tool that <em>should</em> be prioritized.</p>\n<p>However, “frictions and inefficiencies are the moments that slow us down”. This means that <em>intentionally</em> creating friction, erecting a barrier to slow down the user before hitting the endpoint “allows the user to process an experience rather than just consume it.” Pressman quotes <a\n  href=\"https://laurelschwulst.com/\"\n  rel=\"nofollow\"\n>Laurel Schwulst</a> questions:</p>\n<blockquote>\n<p>Is it specific?\nIs it memorable?\nDoes it turn idea into form?</p>\n</blockquote>\n<p>Usability cannot be the <em>sole</em> criteria of of “good”, and these are a good starting place to expand our practice. Pressman adds a fourth:</p>\n<blockquote>\n<p>Does it benefit the user?</p>\n</blockquote>\n<p>Pressman notes that none of these preclude ease of use, but they do focus on experience rather than outcome. Pressman suggests that <a\n  href=\"https://www.mcmaster.com/\"\n  rel=\"nofollow\"\n>https://www.mcmaster.com/</a> is the very best website on the internet. I agree! This is an amazing site.</p>\n<blockquote>\n<p>This response to the literacy of its users is what allows the site to be usable.</p>\n</blockquote>\n<p>Pressman talk about the use style, which at its core is a vernacular language that allows you to efficiently speak to others that understand the same vernacular. This culls, rather than grows, an audience. Style performs the same function as jargon here, and acts as a way to attune a signal to a receiver. A reduction of the broadcast to the narrow-band communication.</p>\n<blockquote>\n<p>Brands depend on mental models of value.</p>\n</blockquote>\n<p>Pressman talks about how the process of learning to use a difficult thing creates a sense of ownership. Pressman sees the value in creating and rewarding experience.</p>\n<p>Pressman gives the example of Printed Matter, and calls out that the deliberate introduction of friction can communicate a significant amount of <em>value</em> and <em>intention</em>. By creating friction in a certain way, by deliberately moving away from the frictionless standard, it invites the question of “why did we do this?“. If that question can be answered from a place of meaning, your values are communicated to the audience, and you can filter down a generic audience to a specific one that shares those values.</p>\n<blockquote>\n<p>Meaning and form aren’t just seen. Form is the behavior.</p>\n</blockquote>\n<p>This relates back to the fundamental stuff-ness of the web.</p>\n<p>The fourth point about benefit is about ethics – and creating a baseline ethical behavior for the interactions. This is the basic opening of web developments ethical compass: does it do what the user wants to do?</p>\n<blockquote>\n<p>A dark pattern is frictionless design taken to its logical conclusion.</p>\n</blockquote>\n<p>An example of how the shifting rubrics and definitions of “good” are fundamental to the execution and creation of any designed work. MetaFilter is a powerful example of creating a lot of friction <em>against</em> rapid growth. This creates a benefit for the broader community. Against twitter, it’s clear where values lie and the ethical ramifications of sets of decisions.</p>\n<blockquote>\n<p>The Frustration Threshold: How much friction can we add before it becomes frustration?</p>\n</blockquote>\n<p>This is directly correlated to the specificity of the users goals. When looking for a phone number or address, the threshold is very very low. It’s also correlated to the scale of the audience, which maps back to the use of values as a filtering mechanism.</p>\n<blockquote>\n<p>The more you understand of [the users needs] the more difficult and complex an experience you can build</p>\n</blockquote>\n<p>Pressman ends the talk by framing the central question that he wants us to consider: Instead of “How can I make everything easy to use?” ask “Just what components can be difficult?“.</p>\n","data":{"fm":{"title":"What do we lose when it's easy to use?","slug":"pressman/medium-design","author":"Andy Pressman","year":2016,"source":"https://designportland.org/stories/2016/what-do-we-lose-when-its-easy-to-use","tags":"design","thesis":"The intentional creation of friction in an experience is an essential way to create experience and communicate values.","type":"annotation, bibliography"}},"map":""}],["wordpress-but-not-terrible",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"Pressing Words, With Your Friend, Wordpress\",\"slug\":\"wordpress-but-not-terrible\",\"date\":\"2018.10.24\",\"description\":\"A contemporary developers guide to building things on Wordpress 4.x and not having it be terrible.\",\"type\":\"text, texts\"};\n\tconst { title, slug, date, description, type } = metadata;\n</script>\n\n<p>TL:DR; <a\n  href=\"https://github.com/nikolaswise/nanobox-wordpress-1\"\n  rel=\"nofollow\"\n>Start here</a>. Install <a href=\"https://nanobox.io/\" rel=\"nofollow\">this thing</a> and connect it to your account on <a\n  href=\"https://www.digitalocean.com/\"\n  rel=\"nofollow\"\n>here</a>. Buy a license of <a\n  href=\"https://deliciousbrains.com/wp-migrate-db-pro/\"\n  rel=\"nofollow\"\n>this (it’s worth it)</a>. Read some docs for <a\n  href=\"https://www.upstatement.com/timber/\"\n  rel=\"nofollow\"\n>this</a> and start building. Wordpress 5 and Gutenberg will probably break all of this except the environments. </p>\n<p>When I first started working as a developer, Wordpress was <em>the</em> prevalent platform for pretty much any project. Ten years later and … Wordpress is still pretty much most of the internet. In general, Wordpress will be my last choice of a platform. I prefer to build static sites, use a headless CMS, or almost anything else at all.</p>\n<p>That said, as the Technical Director at Fuzzco — a design studio that relies almost exclusively on Wordpress for their websites — Wordpress was happening. Fuzzco is rare among studios in that we manage and host projects for our clients, and often have maintenance riders that can last for years. This means that in the course of a year, not only did we build a half dozen new projects on Wordpress, but we maintained and triaged issues on over 100 legacy projects. </p>\n<p>Very quickly I realized I had one option: <em>make Wordpress not terrible.</em></p>\n<h2>Terrible is pretty harsh</h2>\n<p>If you’re comfortable with Wordpress, you might find some fightin’ words here. What’s my problem with Wordpress and what am I trying to solve for? My biggest issue with Wordpress development as I’ve encountered it in the past is a lack of clarity around the requirements of the entire system. What does the project need to run in an environment, and why? How do we move from a repository to a local environment and start working on a codebase? How does that codebase get deployed to a server? </p>\n<p>I’ve seen Wordpress systems that are frozen in time in 2006 — FTP to the server and edit a CSS file on production, or “deploy” your theme by uploading a <code>.zip</code>. I’m interested in how we can lower the cognitive overhead for getting a Wordpress project up and running, and join in with pre-processing, compiling, containerizing, testing, and all the really excellent things that we’ve come to expect from our web stacks over the past few years. </p>\n<p>Another issue I have with Wordpress is its commitment to auto-magical routes and rendering templates with obscure and complicated <code>.php</code> patterns that basically concatenate strings. I’m interested in explicit routes — either hard-coded or parameterized — and separating concerns between logic and template. </p>\n<p>A lot of this boils down to a disagreement between what Wordpress thinks a site should be and what I end up using it for. Wordpress as designed distinguishes between your “site” and your “theme”. Your “site” is the content in the database, the options you’ve saved, and the menus and widgets you’ve installed. It expects “themes” to be presentations of this real website stuff. This model of websites perpetuates that “design” is something that can be applied over a website, a kind of dressing up of the real things. This is the inverse, and perhaps a corollary to, the concept that designing a website is just deciding what it looks like. It’s an idea that lives within the system of silos between design and development, and that we can “design” a website in Photoshop or Sketch and hand off the comps to a developer to build it. Which is how a lot of Wordpress projects are built. </p>\n<p>In short, <a href=\"/texts/how-to-design-while-developing/\">I disagree</a> with this concept of websites. My position is that designing a website is both how it looks, how it works, and how the data and structures are composed. Taking this approach, controlling the object models, the information architectures, and the templates are all of equal importance. In my line of work, a Wordpress theme can not be applied to any other site than the one that it was designed for, a site where the structure was designed for the theme.</p>\n<h2>So why use Wordpress?</h2>\n<p>There are still a number of really good, compelling reasons to use Wordpress as a platform for building websites. It’s got a robust built-in commenting system with user accounts. It’s really good for things that are shaped like blogs. It’s got a huge, well-maintained ecosystem of plugins. It’s free. And since it’s most of the Internet, clients are really, really comfortable with it. </p>\n<p>There are a couple of reasons <em>not</em> to use Wordpress right now. Mostly these center around the impending release of Wordpress 5.0 and the Gutenberg editor, which has a number of concerns around plugin compatibility and accessibility for authors. </p>\n<p>But that’s okay, since we’ve decided to use Wordpress 4.x. As we all know, picking a version of Wordpress and then never upgrading it is one of the time honored traditions of Wordpress development. </p>\n<h2>How does this work even</h2>\n<p>Let’s start at the end. </p>\n<p>We’re going to be hosting our production Wordpress site on a <a\n  href=\"https://www.digitalocean.com/\"\n  rel=\"nofollow\"\n>Digital Ocean</a> droplet — the <a\n  href=\"https://www.digitalocean.com/pricing/\"\n  rel=\"nofollow\"\n>smallest</a> one they have — for $5 per month. Depending on the project lifecycle, we can set up more droplets for a staging server and a development server. At Fuzzco we used dev servers to show sites to the internal team, staging servers to show sites to the client, and production servers to show sites to the public. </p>\n<p>I don’t know about you, but I personally don’t super love managing my virtual private servers manually. In order to deploy our codebases to Digital Ocean we’ll use the phenomenal tool <a\n  href=\"https://nanobox.io/\"\n  rel=\"nofollow\"\n>Nanobox</a>. Nanobox is an operations layer that handles containerizing applications and deploying them agnostically to a cloud service provider. Nanobox will deploy our code from the command line to any one of our droplets. </p>\n<p>Nanobox will also containerize and run an application in a virtual machine <em>locally</em>. This means we’ll use it to run our development environment, and ensure that all of our environments are identical. No more worrying about PHP versions and extensions and plugins. No more running MAMP or MySQL or Apache or whatever on your local machine before anything works. Nanobox defines the server in a <code>.yaml</code> file, and it will always be the same. It also handles all the syncing between our local disk and our virtual environment.</p>\n<p>So now that we know how our code is going from local to production, we can think for a second about <em>how</em> it’s going to do that, and how we’re going to manage our data.</p>\n<p>The database on the production server is “canonical”. That means that the database the client interacts with is the one true database, and we must treat it with care and attention. We’ll never change that database ourselves, and we’ll move that database <em>downstream</em> from production to staging to dev to local in order to develop against our real data. Importantly, we don’t want to migrate the database manually either. It’s a little expensive but using <a\n  href=\"https://deliciousbrains.com/wp-migrate-db-pro/pricing/\"\n  rel=\"nofollow\"\n>Migrate DB Pro</a> is an incredible resource for this part. I guess one could also look into <a\n  href=\"https://github.com/wp-sync-db/wp-sync-db\"\n  rel=\"nofollow\"\n>alternatives</a> for personal projects. </p>\n<p>The canonical <em>codebase</em> lives in version control, and moves the other direction. From Github to local to dev to staging to production, amen. The only things we need to track in version control are what makes our project unique. Practically, this means we need to track our theme and our plugins. Wordpress core files are not special, and we should not fill our repositories with them.</p>\n<h2>Getting started</h2>\n<p>At this point it’s worth <a\n  href=\"https://docs.nanobox.io/install/\"\n  rel=\"nofollow\"\n>getting started with Nanobox</a>. I back the containers with <a\n  href=\"https://docs.nanobox.io/install/#lightweight-vm-virtualbox\"\n  rel=\"nofollow\"\n>VirtualBox</a>, since at the time I started this it was slightly more stable than Docker on MacOS High Sierra. Once Nanobox & Virtualbox/Docker is installed, set up <a\n  href=\"https://docs.nanobox.io/providers/hosting-accounts/digitalocean/\"\n  rel=\"nofollow\"\n>Digital Ocean as your provider</a>. Once that’s done, we have everything we need to get started!</p>\n<p>I’ll be talking through a project I built in order to facilitate building other projects. This will be more intense than you might need for a single build, but this was designed a tool that anyone can use to get started quickly. Here’s the basic structure of our repo:</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\">📁 /project-name\n⮑ 📄 .gitignore    # includes /wp\n⮑ 📄 package.json  # tooling lives here\n⮑ 📄 readme.md     # be nice, write docs    \n⮑ 📁 theme         # our theme codebase\n⮑ 📁 plugins       # vendor plugins\n⮑ 📁 scripts       # some helpers</code>`}</pre>\n<p>The crux of the project is our <code>boxfile.yml</code> configuration file. This is what Nanobox uses to create our containers. It looks like this!</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\"># /boxfile.yml                \nrun.config:                    # \n  engine: php                  #\n  engine.config:               #\n    runtime: php-7.0           # Defines PHP version\n    document_root: &#39;wp/&#39;       # Dir to serve app from\n    extensions:                # PHP extensions we need\n      - gd                     #\n      - mysqli                 #\n      - curl                   #\n      - zlib                   #\n      - ctype                  #\n                               #\nweb.wp:                        #\n  start: php-server            #\n  network_dirs:                #\n    data.storage:              #\n      - wp/wp-content/uploads/ #\ndata.db:                       #\n  image: nanobox/mysql:5.6     # Nanobox DB magic\n                               #\ndata.storage:                  #\n  image: nanobox/unfs:0.9      #</code>`}</pre>\n<p>As noted above, we’ll be serving our entire installation of Wordpress in the <code>/wp</code> directory. This will hold all the Wordpress core files and compiled theme code, none of of which we need or want in version control. As such, make sure this is listed alongside <code>node_modules</code> in the <code>.gitignore</code>.</p>\n<p>Since we’ve decided that we don’t want to track these files, but we need them to actually have a project, we can write a helper script to take care of the gap between those two ideas. </p>\n<p>Here are the scripts we’re going to write to help us handle this process:</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\">📁 /project-name\n⮑ 📁 scripts\n   ⮑ 📄 check-install.sh # Installs Wordpress core files.\n   ⮑ 📄 init.sh          # Runs our setup helper.\n   ⮑ 📄 prestart.sh      # Checks if we need to init.\n   ⮑ 📄 setup.js         # Cute lil&#39; CLI helper.</code>`}</pre>\n<p>The first thing we’ll do is write a script that checks if <code>/wp</code> exists. If it doesn’t, throw an error that we need to initialize the project since we don’t have any of the core files we need.</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\"># prestart.sh\n#!/bin/bash\necho &#39;Check to make sure wordpress is here at all&#39;\nif test -d ./wp/\nthen\n  echo &#39;yup we good&#39;\n  exit 0\nelse\n  echo &#39;Project not initialized: Run &#96;$ npm run init&#96;&#39;\n  exit 1\nfi</code>`}</pre>\n<p>I’m calling this <code>prestart</code> because I want to run it before <code>npm start</code>. Many times I’ll be on autopilot, and after cloning a repo simply run <code>npm install</code> and <code>npm start</code>. This interrupts that process and lets me know I need a third step, <code>npm run init</code>. Let’s put this in our <code>package.json</code> scripts:</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\"># package.json\n&#123;\n  ...\n  &quot;scripts&quot;: &#123;\n    ...\n    &quot;init&quot;: &quot;./scripts/init.sh&quot;,\n    &quot;prestart&quot;: &quot;./scripts/prestart.sh&quot;,\n    &quot;start&quot;: &quot;npm run dev&quot;\n  &#125;\n  ...\n&#125;</code>`}</pre>\n<p>We’ll get to our dev tooling later. Lets take a look at what our <code>init.sh</code> script does:</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\"># init.sh\n#!/bin/bash\nnode ./scripts/setup.js  </code>`}</pre>\n<p>Not much! This just runs our setup CLI helper. You might not need all this, but since I built this system to help a team of developers work on <em>many many</em> projects you’re gonna get it anyway.</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\">// setup.js\n\n// some nice deps for making a CLI.\nconst prompt = require(&#39;prompt&#39;)\nconst exec = require(&#39;child_process&#39;).exec\nconst colors = require(&quot;colors/safe&quot;)\n\n// Run and log a bash command\nconst bash = cmd =&gt; &#123;\n  msg(&#39;green&#39;, &#96;Running: $&#123;cmd&#125;&#96;)\n  return new Promise(function(resolve, reject) &#123;\n    exec(cmd, (err, stdout, stderr) =&gt; &#123;\n      if (err) reject(err)\n      resolve(stdout, stderr)\n    &#125;)\n  &#125;);\n&#125;\n\n// Log a message\nconst msg = (color, text) =&gt; &#123;\n  console.log(colors[color](text))\n&#125;\n\n// do the magic\nconst setup = (err, result) =&gt; &#123;\n  if (err) msg(&#96;red&#96;, err)\n\n  msg(&#39;yellow&#39;, &#39;WordPress configuration values ☟&#39;)\n\n  for (let key in result) &#123;\n    msg(&#39;yellow&#39;, &#96;$&#123;key&#125;: $&#123;result[key]&#125;;&#96;)\n  &#125;\n  // run our check-install script.\n  bash(&#96;$&#123;process.cwd()&#125;/scripts/check-install.sh&#96;)\n  .then(ok =&gt; &#123;\n    // add our project to hostfile\n    bash(&#96;nanobox dns add local $&#123;result.name&#125;.local&#96;)\n  &#125;)\n  .then(ok =&gt; &#123;\n    // explain the next step\n    msg(&#39;green&#39;, &#96;Run npm start, then finish setting up WordPress at $&#123;result.name&#125;.local/wp-admin&#96;)\n  &#125;)\n&#125;\n\nmsg(&#39;green&#39;, &#39;Making Progress!&#39;)\nprompt.start();\nprompt.get(&#123;\n  properties: &#123;\n    name: &#123;\n      description: colors.magenta(&quot;Project name:&quot;)\n    &#125;\n  &#125;\n&#125;, setup);</code>`}</pre>\n<p>This will open a CLI asking for the name of the project, run the <code>check-install.sh</code> script, create the hostfile line for our local DNS at <code>&lt;project-name&gt;.local</code>, and log the next action that you need to take to finish installing Wordpress. </p>\n<p>Lets take a peek at our <code>check-install.sh</code> file:</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\"># check-install.sh\n#!/bin/bash\necho &#39;Check to make sure wordpress is here at all&#39;\nif test -d ./wp/\nthen\n  echo &#39;yup we good&#39;\nelse\n  echo &#39;nope we need that&#39;\n  degit git@github.com:nanobox-quickstarts/nanobox-wordpress.git wp\nfi\nrsync -va --delete ./plugins/ ./wp/wp-content/plugins/\nrsync -va --delete ./theme/ ./wp/wp-content/themes/my-theme</code>`}</pre>\n<p>Very similar to <code>prestart</code>! The biggest difference is the bit where we use <code>degit</code> to clone Nanobox’s official Wordpress repo into our untracked <code>/wp</code> directory. Degit will only get the head files, and none of the git history. Nor will it keep the <code>.git</code> file, basically making this a super clean, super fast way to download a directory of files. It’s great. The last thing this does is wipe out any themes or plugins that we don’t want our need in the core files and syncs out own tracked directories to the correct places in the Wordpress core file structure.</p>\n<p>Now would be a time to talk about plugins. </p>\n<h2>What’s up with plugins?</h2>\n<p>Wordpress has a million plugins. We’re going to focus on some of the basic ones that almost every Wordpress project ever needs, and should honestly be part of Wordpress. Building sites without these is a pain. Here they are:</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\">📁 /project-name\n⮑ 📁 plugins\n  ⮑ 📁 advanced-custom-fields-pro\n  ⮑ 📁 custom-post-types-ui\n  ⮑ 📁 timber-library\n  ⮑ 📁 wp-migrate-db-pro</code>`}</pre>\n<p>There are a couple more in my repo to do things like order posts in the CMS and import CSVs. Not super necessary, so we won’t talk about theme here. </p>\n<h3>Advanced Custom Fields</h3>\n<p><a href=\"https://www.advancedcustomfields.com/\" rel=\"nofollow\">ACF</a> is a staple of Wordpress development. It lets us define new key/value pairs to extend the data model of things like posts and pages, and allows us to create a set of global variable available from anywhere. Sounds simple, surprising it’s not part of Wordpress.</p>\n<h3>Custom Post Types UI</h3>\n<p><a\n  href=\"https://wordpress.org/plugins/custom-post-type-ui/\"\n  rel=\"nofollow\"\n>CPT-UI</a> creates an interface in the admin panel for creating new post types. Out of the box, Wordpress comes with <code>Posts</code> and <code>Pages</code>. CPT-UI lets us build new types like <code>Projects</code> or <code>Case Studies</code> or whatever need for our data model. Again, surprising that this  isn’t just part of Wordpress. C’est la vivre.</p>\n<h3>WP Migrate DB</h3>\n<p><a\n  href=\"https://deliciousbrains.com/wp-migrate-db-pro/\"\n  rel=\"nofollow\"\n>Migrate DB</a> lets us … migrate … our … DB. This gives us the ability to sync our databases across environments and get media uploads and things without needing to write magic MySQL queries while tunneled into open database ports on virtual machines. This is better. Believe me. </p>\n<h3>Timber</h3>\n<p>The <a href=\"https://www.upstatement.com/timber/\" rel=\"nofollow\">Timber</a> library from Upstatement is the greatest thing to happen to Wordpress development, after those plugins that should just be part of Wordpress. Timber introduces the concept of <em>layout templates</em> to Wordpress. This lets us write PHP to manipulate data, and pass that data to a template file where we can write <a\n  href=\"https://twig.symfony.com/\"\n  rel=\"nofollow\"\n>Twig templates</a> rather than composing strings in PHP. Basically …</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\">&lt;?php echo $myvar ?&gt;</code>`}</pre>\n<p>Turns in to:</p>\n<p>{% raw %}</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\">&#123;&#123; myvar &#125;&#125;</code>`}</pre>\n<p>{% endraw %}</p>\n<p>This lets us write templates with a templating language, and write server-side business logic in a server-side programming language. Truly revolutionary. </p>\n<h2>What we talk about when we talk about Wordpress development: or, The Theme.</h2>\n<p>With all this initial work around Wordpress core, development environments, and a basic plugin ecosystem in place we can start talking about the good stuff: the theme!</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\">📁 /project-name\n⮑ 📁 theme\n   ⮑ 📁 es6              # Source JS\n   ⮑ 📁 scss             # Source SCSS\n   ⮑ 📁 routes           # PHP route logic files\n      ⮑ 📄 index.php\n      ⮑ 📄 page.php\n      ⮑ 📄 post.php\n   ⮑ 📁 views            # Twig templates\n      ⮑ 📁 layouts\n      ⮑ 📁 pages\n      ⮑ 📁 partials\n   ⮑ 📄 functions.php    # This includes routing.\n   ⮑ 📄 screenshot.png   # Theme preview image.\n   ⮑ 📄 index.php        # Need this, but it&#39;s empty.¯\\_(ツ)_/¯</code>`}</pre>\n<p>We won’t get too deep into this, since we’re getting into more conventional territory here. Basically our <code>es6</code> directory holds source JS that will get compiled into a bundle. Same with the <code>scss</code> directory, which gets compiled into css. We handle that with npm scripts in the <code>package.json</code>.</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\"># package.json\n&#123;\n  ...\n  &quot;scripts&quot;: &#123;\n    ...\n    &quot;css&quot;: &quot;node-sass ./theme/scss/style.scss theme/style.css --watch&quot;,\n    &quot;js&quot;: &quot;rollup -c -w&quot;,\n    ...\n  &#125;\n  ...\n&#125;</code>`}</pre>\n<p>Hopefully none of this is to unusual — if it’s is I recommend reading Paul Pederson’s <a\n  href=\"http://paulcpederson.com/articles/npm-run/\"\n  rel=\"nofollow\"\n>excellent article on npm scripts</a>.</p>\n<p>There is one part of this I want to touch on before moving on:</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\"># package.json\n&#123;\n  ...\n  &quot;scripts&quot;: &#123;\n    ...\n    &quot;sync:plugins&quot;: &quot;rsync -va --delete ./plugins/ ./wp/wp-content/plugins/&quot;,\n    &quot;sync:theme&quot;: &quot;rsync -va --delete ./theme/ ./wp/wp-content/themes/fuzzco&quot;,    \n    &quot;watch&quot;: &quot;rerun-script&quot;,\n    ...\n  &#125;,\n  &quot;watches&quot;: &#123;\n    &quot;sync:plugins&quot;: &quot;plugins/**/*.*&quot;,\n    &quot;sync:theme&quot;: &quot;theme/**/*.*&quot;\n  &#125;,\n  ... </code>`}</pre>\n<p>This bit sets up a watcher on our <code>theme</code> and <code>plugins</code> directory, which sync our tracked working files to the correct place in our Wordpress core file structure. </p>\n<h2>Functions, Routes, and Views</h2>\n<p>The last thing I want to touch on is the basic structure of using Timber to match routes with views. </p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\">/** functions.php */\nRoutes::map(&#39;/&#39;, function($params)&#123;\n  Routes::load(&#39;routes/page.php&#39;, $params, null, 200);\n&#125;);\nRoutes::map(&#39;/:page&#39;, function ($params) &#123;\n  $page = get_page_by_path($params[&#39;page&#39;]);\n  if ($page) &#123;\n      Routes::load(&#39;routes/page.php&#39;, $params, null, 200);\n  &#125; else &#123;\n      Routes::load(&#39;routes/404.php&#39;, $params, null, 404);\n  &#125;\n&#125;);\nRoutes::map(&#39;/blog/:post&#39;, function($params)&#123;\n  Routes::load(&#39;routes/post.php&#39;, $params, null, 200);\n&#125;);</code>`}</pre>\n<p>These are Timber routes defined in the <code>functions.php</code> file. This replaces the standard routing of Wordpress, and we have change the structure of the Wordpress permalinks to anything other than the default to have it work. This is documented in Timber. </p>\n<p>When our server gets a request at a route of <code>/page-name</code>, it will call the <code>page.php</code> file and pass it the params associated with the route. </p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\">/** page.php */\n&lt;?php\n  $context = Timber::get_context();\n  $post = new TimberPost();\n  $context[&#39;page&#39;] = $post;\n  \n  Timber::render( array(\n    &#39;views/pages/page-&#39; . $post-&gt;post_name . &#39;.twig&#39;,\n    &#39;views/pages/page.twig&#39;\n  ), $context );\n?&gt;</code>`}</pre>\n<p>The <code>page.php</code> file assigns some variables, interacts with Wordpress to get and shape our data, and then renders the twig file associated with the page. In this case, it’s going to see if there’s a template that matches the name of our page, otherwise it will render the default page template.</p>\n<h2>Back to the beginning</h2>\n<p>You’ve built your theme! Maybe it’s a simple hello world, maybe it’s a heavy duty big ol’ thing. Either way, it’s time to deploy.</p>\n<p>You can use Nanobox to create a droplet for your server. Nanobox will give your project a name in their system, and expose the URL for the server at <code>&lt;your-project&gt;.nanoapp.io</code>. I like to use the convention <code>project-dev</code>, <code>project-stage</code>, and <code>project-prod</code>. Once you create your project in Nanobox, the hard part is over and you can let them do the heavy lifting:</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\">$ nanobox deploy project-dev</code>`}</pre>\n<p>Or we can map this to our NPM script:</p>\n<pre class=\"language-undefined\">{@html `<code class=\"language-undefined\">$ npm run deploy:dev  </code>`}</pre>\n<p>This will containerize our application, push it to our droplet, hydrate the entire thing, and serve! Now we can use Migrate DB to move our database around, and we’re in business. </p>\n<h2>Putting it all together</h2>\n<p><a\n  href=\"https://github.com/nikolaswise/nanobox-sapper-1\"\n  rel=\"nofollow\"\n>The project repo</a> is a turnkey, ready to roll version of all the above. It contains all the tooling needed to get started, and if you’ve followed along with this guide, you should be able to get started in no time. </p>\n<p>As always, feel free to reach out to me in your venue of choice to talk about any of this — I would be happy to help you set this up for your own Wordpress project!</p>\n","data":{"fm":{"title":"Pressing Words, With Your Friend, Wordpress","slug":"wordpress-but-not-terrible","date":"2018.10.24","description":"A contemporary developers guide to building things on Wordpress 4.x and not having it be terrible.","type":"text, texts"}},"map":""}],["worth-the-time.md",{"code":"<script context=\"module\">\n\texport const metadata = {\"title\":\"Is it Worth the Time?\",\"slug\":\"worth-the-time.md\",\"date\":\"2021.06.24\",\"description\":\"Testing importing components.\",\"type\":\"text\"};\n\tconst { title, slug, date, description, type } = metadata;\n</script>\n<script>\n  import EffeciencyCalculator from '../src/components/EffeciencyCalculator.svelte';\n</script>\n\n\n<p>Lets see if this works…</p>\n<EffeciencyCalculator />\n","data":{"fm":{"title":"Is it Worth the Time?","slug":"worth-the-time.md","date":"2021.06.24","description":"Testing importing components.","type":"text"}},"map":""}]]