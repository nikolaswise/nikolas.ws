[{"meta":{"title":"The UX of LEGO Interface Panels","slug":"cave/the-ux-of-lego-interface-panels","author":"George Cave","year":2020,"source":"https://www.designedbycave.co.uk/2020/LEGO-Interface-UX/","thesis":"Exploring user interface design via legos","tags":"user experience","date":"2020.08.24","collection":"bibliography","timestamp":1598252400000},"content":"<blockquote>\n<p>Most in­ter­faces in our world con­tain a blend of dig­i­tal screens and ana­log in­puts like switches and di­als</p>\n</blockquote>\n<blockquote>\n<p>How can we dif­fer­en­ti­ate be­tween the func­tion of dif­fer­ent in­puts?\nHow can we or­gan­ise the many in­puts and out­puts so that we un­der­stand how they re­late to each other?</p>\n</blockquote>\n<p>Designing in­ter­faces is about wrap­ping with the above two ques­tions, un­der­stand­ing re­la­tion­ships and func­tions. This ap­plies for GUIs or CLIs, end user or de­vel­oper ex­pe­ri­ences. Those are the two big hu­man/​ma­chine ques­tions.</p>\n<p>Tools for dif­fer­en­ti­at­ing in­clude shape cod­ing:</p>\n<blockquote>\n<p>The right panel (“Aircraft Multiple Flight Controls”) clearly dis­tin­guishes be­tween the throt­tle (large, lin­ear ver­ti­cal move­ment), tog­gle switches (round ver­ti­cal ﬂick) and the push but­tons (square push-in).</p>\n</blockquote>\n<p>Along with:</p>\n<blockquote>\n<p>Colour cod­ing is per­haps the only one to break into our every­day vo­cab­u­lary, but we can add four more: size, tex­ture, po­si­tion and op­er­a­tion cod­ing. Together these six are our al­lies in the de­sign of er­ror-proof in­ter­faces.</p>\n</blockquote>\n<blockquote>\n<p>Differentiation is a good ﬁrst step that will avoid con­fu­sion be­tween ad­ja­cent switches. But its only with or­gan­i­sa­tion that we can cre­ate a clear and ac­cu­rate men­tal model of the in­ter­face for the user.</p>\n</blockquote>\n<p>Differentiation sup­port or­ga­ni­za­tion.</p>\n<p>Organizational tech­niques in­clude dis­trib­uted and con­sol­i­dated:</p>\n<blockquote>\n<p>These pan­els are what I’d called a con­sol­i­dated in­ter­face. Every piece of in­put and feed­back has been moved onto the same panel. This is the ap­proach that Dyson took with their car. Now imag­ine the op­po­site, mov­ing each of those lights and switches to the ac­tual lo­ca­tion of that valve in the fac­tory. Sounds lu­di­crous, but these air vents in the Audi <span class=\"small-caps\">TT</span> show that this dis­trib­uted ap­proach can also be a great win for user ex­pe­ri­ence. I wrote a lot more about these dis­trib­uted in­ter­faces last year.</p>\n</blockquote>\n<p>Feature based, op­er­a­tion based, tech­nol­ogy based.</p>\n<blockquote>\n<p>Any touch­screen with but­tons by the side ex­hibits this tech­nol­ogy-based split. In a fu­ture world, SpaceX might em­bed these phys­i­cal con­trols right in­side the screen next to the in­for­ma­tion they af­fect, but for now they sit awk­wardly by the side as if noth­ing is wrong.</p>\n</blockquote>\n<p>Technology based or­ga­ni­za­tion is not hu­man cen­tered, and there­for not ideal <span class=\"small-caps\">UX</span>.</p>\n"},{"meta":{"title":"Everything Easy is Hard Again","slug":"chimero/everything-easy-is-hard-again","author":"Frank Chimero","source":"https://frankchimero.com/blog/2018/everything-easy/","tags":"internet, web","collection":"bibliography","timestamp":null},"content":""},{"meta":{"title":"The Most Exciting Design Systems Are Boring","author":"clark/the-most-exciting-design-systems-are-boring","year":2017,"source":"https://bigmedium.com/ideas/boring-design-systems.html","thesis":null,"tags":"design systems, design/development","collection":"bibliography","timestamp":null},"content":"<blockquote>\n<p>Design-system builders should re­sist the lure of the new. Don’t con­fuse de­sign-sys­tem work with a re­brand or a tech-stack over­haul. The sys­tem’s de­sign pat­terns should be fa­mil­iar, even bor­ing.</p>\n</blockquote>\n<blockquote>\n<p>The job is not to in­vent, but to cu­rate.</p>\n</blockquote>\n<p>When build­ing a de­sign sys­tem, the pri­mary job is in work­ing with what’s al­ready ex­ist­ing rather than start­ing from scratch and green­ﬁeld­ing every­thing.</p>\n"},{"meta":{"title":"Design Systems, Agile, and Industrialization","slug":"frost/design-systems-agile-and-industrialization","author":"Brad Frost","year":2020,"source":"https://bradfrost.com/blog/post/design-systems-agile-and-industrialization/","thesis":"Design systems are reflections of organizational processes, making them either tools for","tags":"design systems, design/development","collection":"bibliography","timestamp":null},"content":"<blockquote>\n<p>There’s a big dif­fer­ence be­tween hav­ing smart, reusable pat­terns at your dis­posal and cre­at­ing a dic­ta­to­r­ial cul­ture de­signed to en­force con­for­mity and swat down any­one col­or­ing out­side the lines.</p>\n</blockquote>\n<p>Frost is re­spond­ing to the con­cert that de­sign sys­tems can en­force a Taylorist de­hu­man­iza­tion of our work, but that they only do this as a re­ﬂec­tion of ex­ist­ing or­ga­ni­za­tional prin­ci­ples.</p>\n<p>Working with other lead­ers in the de­sign sys­tems world, Frost sug­gests that de­sign sys­tems should be bor­ing&thinsp;&mdash;&thinsp;that is they should pri­mar­ily fo­cus on the parts of the process that are foun­da­tional and al­low of the team to do spend time on the in­ter­est­ing prob­lems.</p>\n<blockquote>\n<p>Not hav­ing to rein­vent things from scratch every time you need some­thing is gen­er­ally a good idea.</p>\n</blockquote>\n<p>The work that we do un­der the sys­tem of<span class=\"push-single\"></span> <span class=\"pull-single\">‘</span>Agile’ is part of the or­ga­ni­za­tion struc­ture that pushes for Taylorized de­hu­man­iza­tion of web de­vel­op­ment. Our sys­tems that we build have the abil­ity to ei­ther sup­port in­di­vid­ual ex­pres­sion and hu­man­ity, or to sup­press it. The dif­fer­ence be­tween these out­comes is the broader sys­tem un­der­ly­ing our ap­proaches to work.</p>\n"},{"meta":{"title":"The Cost of Javascript Frameworks","slug":"kadlec/the-cost-of-javascript-frameworks","author":"Tim Kadlec","year":2020,"source":"https://timkadlec.com/remembers/2020-04-21-the-cost-of-javascript-frameworks/","thesis":"Javascript inherently is a massive percentage of a performance budget, modern frameworks are less performant than vanilla js sites.","tags":"front end, javascript, performance","collection":"bibliography","timestamp":null},"content":"<p>Kadlec’s the­sis is that Javascript in­her­ently is a mas­sive per­cent­age of a per­for­mance bud­get. From this per­spec­tive, he iden­ti­ﬁes the pur­pose of frame­works as:</p>\n<blockquote>\n<p>a frame­work makes it eas­ier to per­form well by ei­ther pro­vid­ing a bet­ter start­ing point or pro­vid­ing con­straints and char­ac­ter­is­tics that make it hard to build some­thing that does­n’t per­form well.</p>\n</blockquote>\n<p>From Kadlex:</p>\n<h2>JavaScript Bytes Served to Mobile Devices, by Percentile</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\"></th>\n<th style=\"text-align:left\">10th</th>\n<th style=\"text-align:left\">25th</th>\n<th style=\"text-align:left\">50th</th>\n<th style=\"text-align:left\">75th</th>\n<th style=\"text-align:left\">90th</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">All Sites</td>\n<td style=\"text-align:left\">93.4kb</td>\n<td style=\"text-align:left\">196.6kb</td>\n<td style=\"text-align:left\">413.5kb</td>\n<td style=\"text-align:left\">746.8kb</td>\n<td style=\"text-align:left\">1,201.6kb</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">w/ jQuery</td>\n<td style=\"text-align:left\">110.3kb</td>\n<td style=\"text-align:left\">219.8kb</td>\n<td style=\"text-align:left\">430.4kb</td>\n<td style=\"text-align:left\">748.6kb</td>\n<td style=\"text-align:left\">1,162.3kb</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">w/ Vue.js</td>\n<td style=\"text-align:left\">244.7kb</td>\n<td style=\"text-align:left\">409.3kb</td>\n<td style=\"text-align:left\">692.1kb</td>\n<td style=\"text-align:left\">1,065.5kb</td>\n<td style=\"text-align:left\">1,570.7kb</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">w/ Angular</td>\n<td style=\"text-align:left\">445.1kb</td>\n<td style=\"text-align:left\">675.6kb</td>\n<td style=\"text-align:left\">1,066.4kb</td>\n<td style=\"text-align:left\">1,761.5kb</td>\n<td style=\"text-align:left\">2,893.2kb</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">w/ React</td>\n<td style=\"text-align:left\">345.8kb</td>\n<td style=\"text-align:left\">441.6kb</td>\n<td style=\"text-align:left\">690.3kb</td>\n<td style=\"text-align:left\">1,238.5kb</td>\n<td style=\"text-align:left\">1,893.6kb</td>\n</tr>\n</tbody>\n</table>\n<h2>Scripting re­lated <span class=\"small-caps\">CPU</span> time (in mil­lisec­onds) for mo­bile de­vices, in per­centiles</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\"></th>\n<th style=\"text-align:left\">10th</th>\n<th style=\"text-align:left\">25th</th>\n<th style=\"text-align:left\">50th</th>\n<th style=\"text-align:left\">75th</th>\n<th style=\"text-align:left\">90th</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">All Sites</td>\n<td style=\"text-align:left\">356.4ms</td>\n<td style=\"text-align:left\">959.7ms</td>\n<td style=\"text-align:left\">2,372.1ms</td>\n<td style=\"text-align:left\">5,367.3ms</td>\n<td style=\"text-align:left\">10,485.8ms</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">w/ jQuery</td>\n<td style=\"text-align:left\">575.3ms</td>\n<td style=\"text-align:left\">1,147.4ms</td>\n<td style=\"text-align:left\">2,555.9ms</td>\n<td style=\"text-align:left\">5,511.0ms</td>\n<td style=\"text-align:left\">10,349.4ms</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">w/ Vue.js</td>\n<td style=\"text-align:left\">1,130.0ms</td>\n<td style=\"text-align:left\">2,087.9ms</td>\n<td style=\"text-align:left\">4,100.4ms</td>\n<td style=\"text-align:left\">7,676.1ms</td>\n<td style=\"text-align:left\">12,849.4ms</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">w/ Angular</td>\n<td style=\"text-align:left\">1,471.3ms</td>\n<td style=\"text-align:left\">2,380.1ms</td>\n<td style=\"text-align:left\">4,118.6ms</td>\n<td style=\"text-align:left\">7,450.8ms</td>\n<td style=\"text-align:left\">13,296.4ms</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">w/ React</td>\n<td style=\"text-align:left\">2,700.1ms</td>\n<td style=\"text-align:left\">5,090.3ms</td>\n<td style=\"text-align:left\">9,287.6ms</td>\n<td style=\"text-align:left\">14,509.6ms</td>\n<td style=\"text-align:left\">20,813.3ms</td>\n</tr>\n</tbody>\n</table>\n<p>The take­away is that mod­ern frame­works, when de­ploy­ing in a best-in-class man­ner, can be as light­weight as an av­er­age fram­work­less web­site, but on av­er­age&thinsp;&mdash;&thinsp;and ab­solutely in­clud­ing worst case im­ple­men­ta­tions&thinsp;&mdash;&thinsp;mod­ern frame­works are in­cred­i­bly bloated. In par­tic­u­lar, Angular serves heavy pages, React serves slow pages.</p>\n<p>From ob­serv­ing the data be­tween sites that de­tect React <em>at all</em> and sites that only de­tect React (as in, for sure no jQuery) Kadlec ob­serves that main thread per­for­mance drops sig­nif­i­cantly. This is a clear in­di­ca­tion that mi­grat­ing from jQuery to React harms main thread per­for­mance.</p>\n<blockquote>\n<p>If you have React and jQuery run­ning along­side each other, you’re more likely to be in the midst of a mi­gra­tion to React, or a mixed code­base. Since we have al­ready seen that sites with jQuery spend less time on the main thread than sites with React, it makes sense that hav­ing some func­tion­al­ity still dri­ven by jQuery would bring the num­bers down a bit.</p>\n</blockquote>\n<p>Additionally, Kadlec ob­serves that mo­bile de­vices suf­fer from this per­for­mance de­crease more than desk­top de­vices. This sug­gests that mod­ern frame­works ex­plic­itly are avoid­ing a mo­bile-ﬁrst men­tal­ity, and re­ly­ing on con­tem­po­rary hard­ware.</p>\n<p>To wrap up, Kadlec sug­gests that this data is­n’t in­dica­tive of the base­line per­for­mance ca­pa­bil­i­ties of a frame­work, but rather in­di­cates that the <em>im­ple­men­ta­tion</em> is at fault. If in gen­eral the im­ple­men­ta­tion of a frame­work is caus­ing per­for­mance is­sues, that the pri­mary fault is in the ecosys­tem, doc­u­men­ta­tion, and com­mu­nity stan­dards around that frame­work.</p>\n"},{"meta":{"title":"A Clean Start for the Web","slug":"macwright/a-clean-start-for-the-web","thesis":"How do we make the web fun, participatory, and good?","source":"https://macwright.com/2020/08/22/clean-starts-for-the-web.html","author":"Tom Macwright","year":2020,"tags":"internet, web","collection":"bibliography","timestamp":null},"content":"<blockquote>\n<p>The we­b’s evo­lu­tion over the last decade has mir­rored the American econ­omy. All of the es­sen­tial in­di­ca­tors are go­ing<span class=\"push-double\"></span> <span class=\"pull-double\">“</span>up and to the right,” a steady stream of fun­da­men­tal ad­vances re­as­sure use that there<span class=\"push-double\"></span> <span class=\"pull-double\">“</span>is progress,” but the ac­tual ex­pe­ri­ence and ef­fects for in­di­vid­u­als stag­nates or re­gresses.</p>\n</blockquote>\n<p>tmcw is ap­proach­ing the con­tem­po­rary prob­lem of tech­ni­cal debt, the re­sult when our sys­tem is so com­plex and fucked that it’s start­ing to col­lapse and there’s noth­ing we can do about.</p>\n<blockquote>\n<p>The plat­form side is what changed last week, when Mozilla laid off 250 em­ploy­ees and in­di­cated that it would af­fect Firefox de­vel­op­ment … The real win­ner is not just Chrome, but Chrome’s en­gine. One code­base, <span class=\"small-caps\">KHTML</span>, split into WebKit (Safari), and Blink (Chrome, Microsoft Edge, Opera, etc.)</p>\n</blockquote>\n<blockquote>\n<p>This a text­book mono­cul­ture. In one sense, it’s a vic­tory for col­lab­o­ra­tion be­cause no­body’s<span class=\"push-single\"></span> <span class=\"pull-single\">‘</span>wasting time’ on com­pet­ing im­ple­men­ta­tions and web de­vel­op­ers can ex­pect the same fea­tures and bugs across dif­fer­ent browsers. But in a deeper way, it threat­ens one of the ba­sic prin­ci­ples of how the web has evolved.</p>\n</blockquote>\n<p>Tmcw iden­ti­ﬁes that our browsers our now a mono­cul­ture, which is an in­ter­est­ing prob­lem to have be­cause 1) there are some clear in­di­ca­tions that a mono­cul­ture by tech­ni­cal be­he­moths is <em>bad</em> but it’s only an in­ter­est­ing be­cause 2) browsers should just be all im­ple­ment­ing the spec any­way. The <em>spec</em> is an in­ter­est­ing prob­lem, since <em>it also</em> is just a mono­cul­ture dom­i­nated by tech­ni­cal be­he­moths.</p>\n<blockquote>\n<p>Organizations like the <span class=\"small-caps\">WHATWG</span>, <span class=\"small-caps\">W3C</span>, and <span class=\"small-caps\">IETF</span> have been col­lab­o­ra­tion spaces for in­de­pen­dent de­vel­op­ers, cor­po­ra­tions, and aca­d­e­mics to dis­cuss po­ten­tial new fea­tures of the web.</p>\n</blockquote>\n<p>At least the spec pre­tends or tries to be open and com­mu­nity ori­ented.</p>\n<blockquote>\n<p>Chrome has been mov­ing ex­tremely fast, adding new spec­i­ﬁ­ca­tions and ideas at a star­tling rate, and it’s be­com­ing one of the hard­est pieces of soft­ware to repli­cate.</p>\n</blockquote>\n<p>The prob­lem is that Google dom­i­nates the spec, and is gain­ing mo­nop­oly on the <em>spec</em>.</p>\n<blockquote>\n<p>Not only is it nearly im­pos­si­ble to build a new browser from scratch, once you have one the on­go­ing cost of keep­ing up with stan­dards re­quires a full team of ex­perts.</p>\n</blockquote>\n<p>This is prob­a­bly the point and the goal of the hos­tile takeover of the spec. The cre­ation of a plat­form that be­comes a mo­nop­oly on a mar­ket is a hall­mark tech com­pany busi­ness model.</p>\n<blockquote>\n<p>The web has had about 25 years to grow, few op­por­tu­ni­ties to shrink, and is now sur­rounded by an ex­tremely short-sighted cul­ture that is an out­growth of eco­nomic and ca­reer short-ter­mism.</p>\n</blockquote>\n<p>Haha, Im not sure I have any in­sight here but its funny</p>\n<blockquote>\n<p>For folks who just want to cre­ate a web page, who don’t want to en­ter an in­dus­try, there’s a baf­ﬂing ar­ray of tech­niques, but all the sim­plest, prob­a­bly-best ones are stig­ma­tized. It’s eas­ier to stum­ble into build­ing your re­sume in React with GraphQL than it is to type some <span class=\"small-caps\">HTML</span> in Notepad.</p>\n</blockquote>\n<p>Tmcw iden­ti­ﬁes that there is a prob­lem for cre­ators in that mak­ing web shit is out­landishly dif­ﬁ­cult.</p>\n<blockquote>\n<p>The end re­sult is that I no longer ex­pect pages to be fast, even with uBlock in­stalled in Firefox and a good lo­cal ﬁber in­ter­net provider.</p>\n</blockquote>\n<p>Tmcw in­den­ti­ﬁes that there is a prob­lem for con­sumers in that    our tech­ni­cal debt has re­sulted in a hor­ri­ble ex­pe­ri­ence.</p>\n<blockquote>\n<p>I don’t want to lay all of the blame at those web de­vel­op­ers … Segment of­fered a big page of on/​off switches with hun­dreds of data providers &amp; ad-tech com­pa­nies on it. And, sure, enough, some folks closer to the busi­ness side started click­ing all those but­tons.</p>\n</blockquote>\n<p>This is an in­ter­est­ing way of throw­ing the busi­ness team un­der the bus for mak­ing choices that are ob­vi­ous to them and re­mov­ing our own cul­pa­bil­ity in build­ing these sys­tems.</p>\n<blockquote>\n<p>How do we make the web fun, par­tic­i­pa­tory, and good?</p>\n</blockquote>\n<p>There is Tmcw’s the­sis: which ob­vi­ously has a ton of value judg­ment wrapped up in it.</p>\n<blockquote>\n<p>the cur­rent web which has ba­si­cally thrown away se­man­tic <span class=\"small-caps\">HTML</span> as an idea.</p>\n</blockquote>\n<p>Is that true or is that just a dig at the cur­rent dom­i­nant process and sys­tem?</p>\n<blockquote>\n<p>Then there’s the<span class=\"push-double\"></span> <span class=\"pull-double\">“</span>application web”. This started as server ap­pli­ca­tions…</p>\n</blockquote>\n<p>We’ve seen Tmcw dig at the front-end space be­fore.</p>\n<blockquote>\n<p>The prob­lem is that the<span class=\"push-double\"></span> <span class=\"pull-double\">“</span>document web” is of­ten plagued by ap­pli­ca­tion char­ac­ter­is­tics - it’s the JavaScript and an­i­ma­tions and com­plex­ity that makes your av­er­age news­pa­per web­site an un­mit­i­gated dis­as­ter. Where doc­u­ment web­sites adopt ap­pli­ca­tion pat­terns they of­ten ac­ci­den­tally sac­ri­ﬁce ac­ces­si­bil­ity, per­for­mance, and ma­chine read­abil­ity.</p>\n</blockquote>\n<p>I feel this is clas­sic Tmcw<span class=\"push-double\"></span> <span class=\"pull-double\">“</span>get off my lawn” crank­i­ness. Rich Harris ad­dresses this: <code>It's a spectrum, and the interesting stuff happens in the middle. There's magic in that grey area. I still believe the web has the potential to be a fundamentally more expressive medium than its predecessors (http://worrydream.com/MediaForThinkingTheUnthinkable/ is on a similar wavelength to that notion)</code></p>\n<blockquote>\n<p>The ap­pli­ca­tion web uses <span class=\"small-caps\">JSX</span>, not <span class=\"small-caps\">HTML</span>, and would like that in the browser it­self, or Svelte, in­stead of JavaScript, and would like that too.</p>\n</blockquote>\n<p>Haha our boy is com­ing for Rich! I’m not I un­der­stand what the dig here is … he’s mad at a lan­guage that has a com­pile step? Isn’t that what like … most ap­pli­ca­tions use? Rust, C, what­ever, they all com­pile down to a na­tive run­time lan­guage.</p>\n<blockquote>\n<p>When I read blog posts from<span class=\"push-single\"></span> <span class=\"pull-single\">‘</span>traditional web de­vel­op­ers’ who are mad that <span class=\"small-caps\">HTML</span> &amp; <span class=\"small-caps\">CSS</span> aren’t enough any­more and that every­thing is com­pli­cated&thinsp;&mdash;&thinsp;I think this is largely that the ap­pli­ca­tion stack for build­ing web­sites has re­placed the doc­u­ment stack in a lot of places.</p>\n</blockquote>\n<p>I mean, that’s a de­cent point. The prob­lem is that we’ve cre­ated a dis­con­nect be­tween what we want to build, why we won’t to build it, and how we build it. We use in­sane tool­chains to solve sim­ple prob­lems, and not all tools are for the same thing.</p>\n<blockquote>\n<p>The ap­peal of so­cial net­works is partly be­cause they let us cre­ate doc­u­ments with­out think­ing about web tech­nol­ogy, and they pro­vide guar­an­tees around per­for­mance, ac­ces­si­bil­ity, and pol­ish that oth­er­wise would take up our time.</p>\n</blockquote>\n<p>This seems like a de­cent point well made. Those of us who want to re­duce tech be­he­moth mono­cul­ture ab­solutely need to reckon with the real value that so­cial net­works of­fer to users.</p>\n<blockquote>\n<p>stan­dards like <span class=\"small-caps\">RSS</span> and ser­vices like Instapaper show that pleas­ing for­mat­ting and dis­tri­b­u­tion can be done at the plat­form level and be pro­vided on top of ex­ist­ing vanilla web­sites.</p>\n</blockquote>\n<p>Thats a de­cent proof of con­cept the prob­lem, as il­lus­trated above, is around the tools and sys­tems we’ve built for our­selves to make things<span class=\"push-double\"></span> <span class=\"pull-double\">“</span>easier”.</p>\n<blockquote>\n<p>Okay, so let’s say we’re cre­at­ing a new doc­u­ment web … First, you need a min­i­mal, stan­dard­ized markup lan­guage for send­ing doc­u­ments around. … Then, you need a browser … Could you build a pure-Mark­down-brows­ing browser that goes straight through this pipeline? Maybe?</p>\n</blockquote>\n<p>This is a pretty in­ter­est­ing idea, but sounds like it’s ab­solutely a sub­set of the cur­rent sys­tem which is railed against above. Maybe the idea is that it can grow in­de­pen­dently  <em>from</em> be­ing a sub­set <em>to</em> be­ing some­thing more.</p>\n<blockquote>\n<p>The prob­lem with imag­in­ing the ap­pli­ca­tion web is that it’s pretty ex­pan­sive.</p>\n</blockquote>\n<p>Yeah no shit tmcw. Im not sure how any of this gets around the prob­lem out­lined above: hos­tile takeover of a pub­lic spec by pri­vate tech be­he­moths.</p>\n<blockquote>\n<p>The worse the<span class=\"push-single\"></span> <span class=\"pull-single\">‘</span>Mac App Store’ and<span class=\"push-single\"></span> <span class=\"pull-single\">‘</span>Windows App Store’ and<span class=\"push-single\"></span> <span class=\"pull-single\">’</span>App Store’ and<span class=\"push-single\"></span> <span class=\"pull-single\">’</span>Play Store’ get, the big­ger a cut those mo­nop­o­lies de­mand, the more it costs to be a Mac or Windows de­vel­oper, the more that ap­pli­ca­tions get pushed to the web. Sure, some ap­pli­ca­tions are bet­ter on the web. But a lot are just there be­cause it’s the only place left where you can eas­ily, cheaply, and freely share or sell a prod­uct.</p>\n</blockquote>\n<p>Creating an<span class=\"push-double\"></span> <span class=\"pull-double\">“</span>App Web” could so eas­ily just col­o­nize that space with those same mod­els of mono­cul­ture.</p>\n<blockquote>\n<p>There are a lot of other ways to look at and solve this prob­lem. I think it is a prob­lem, for every­one ex­cept Google.</p>\n</blockquote>\n<p>Right, this is the goal for Google. And cre­at­ing a new set of specs is not go­ing to <em>solve</em> that prob­lem, be­cause that prob­lem is a re­ﬂec­tion of our cur­rent so­ci­ety and what we value and how we work.</p>\n<blockquote>\n<p>The idea of a web browser be­ing some­thing we can com­pre­hend, of a web page be­ing some­thing that more peo­ple can make, feels ex­cit­ing to me.</p>\n</blockquote>\n<p>This is a good goal, and I en­dorse it! Our medium tho is that of the tech­ni­cal mono­cul­ture, the baked in as­sump­tions that a small group has used to cre­ate this new world. The is­sue is with the hard­ware and the phys­i­cal things and the hu­man so­ci­ety that sur­rounds and makes those things pos­si­ble.</p>\n<blockquote>\n<p>What if we could start over?</p>\n</blockquote>\n<p>Tmcw is call­ing for a rev­o­lu­tion of the web with­out be­ing so ex­plicit about it. The idea he is pre­sent­ing is that there needs to be a messy, de­mo­c­ra­tic, so­cial­ist ap­proach to our <em>specs</em> that cre­ate more room for the in­di­vid­ual, and that in em­pow­er­ing the in­di­vid­ual with rights also cre­ates a num­ber of re­spon­si­bil­i­ties to the so­ci­ety that they must up­hold. This is a so­cial­ist ar­gu­ment for the web, and I wholly agree with it. I think that he needs to be ex­plicit about what he’s ac­tu­ally call­ing for and imag­ine what the real world reper­cus­sions of the po­si­tion would be, and how we need to make the same call of our so­ci­ety for the same ends.</p>\n"},{"meta":{"title":"The Design System Between Us","slug":"marcotte/the-design-system-between-us","author":"Ethan Marcotte","year":2020,"source":"https://ethanmarcotte.com/wrote/the-design-systems-between-us","thesis":"Design systems by default entrench existing workflows rather than changing them.","tags":"design systems, design/development","collection":"bibliography","timestamp":null},"content":"<blockquote>\n<p>But in my ex­pe­ri­ence, de­sign sys­tems haven’t brought this kind of rich, cross-func­tional col­lab­o­ra­tion to most or­ga­ni­za­tions. Instead, the ex­ist­ing di­vi­sions be­tween de­sign and im­ple­men­ta­tion have be­come en­trenched, and mas­sively so.</p>\n</blockquote>\n<p>Marcotte has ob­served that de­sign sys­tems so­lid­ify, cod­ify, and re­in­force ex­ist­ing di­vi­sions be­tween the si­los of<span class=\"push-single\"></span> <span class=\"pull-single\">‘</span>engineering’ and<span class=\"push-single\"></span> <span class=\"pull-single\">‘</span>designing’. He iden­ti­ﬁes that there has not been any tool­ing that’s emerged to work in the space be­tween de­sign­ing and de­vel­op­ing, and our tools to­day are still one-or-the-other. Marcotte also ref­er­ences oth­ers like Tom MacWright and Tim Kadlec in iden­ti­fy­ing that the con­tem­po­rary com­plex­ity and weight of the front end makes it harder for de­sign­ers to be in­te­grated into those sys­tems.</p>\n<p>Marcotte also sug­gests that a met­ric for de­sign sys­tem health can be found in iden­ti­fy­ing the process of a de­signer chang­ing pro­duc­tion css: how does that hap­pen? How long does that take? Who is in­volved?</p>\n<blockquote>\n<p>For many or­ga­ni­za­tions, the tech­ni­cal bar­ri­ers to cross-func­tional col­lab­o­ra­tion can be un­ac­cept­ably high … More of­ten than not, your de­sign sys­tem be­comes a mir­ror of the way your team al­ready works</p>\n</blockquote>\n<p>Marcotte calls out the im­por­tance of a de­sign sys­tem is in ar­tic­u­lat­ing <em>how a team works</em>, and that the re­la­tion­ship be­tween de­sign­ing and de­vel­op­ing is one of the core re­la­tion­ships that a de­sign sys­tem has to con­tend with.</p>\n"},{"meta":{"collection":"bibliography","timestamp":null},"content":"<h1>Bibliography</h1>\n<p>{{<span class=\"small-caps\">TOC</span>}}</p>\n<h2>Reading List</h2>\n<ul>\n<li>https://​we­baim.org/​pro­jects/​mil­lion/#​frame­works</li>\n<li>https://​dev.to/​rich­har­ris/​in-de­fense-of-the-mod­ern-web-2nia</li>\n<li>https://​mxb.dev/​blog/​the-re­turn-of-the-90s-web/</li>\n<li>https://​timkadlec.com/​re­mem­bers/​2019-03-07-per­for­mance-bud­gets-that-stick/​fro</li>\n<li>https://​www.youtube.com/​watch?v=TzGf­B­V67­Tac&amp;fea­ture=em­b_ti­tle</li>\n<li>https://​www.pc­maf­fey.com/​roll-your-own-an­a­lyt­ics/</li>\n<li>https://​hid­dede­vries.nl/​en/​blog/​2018-07-05-what-kind-of-ethics-do-front-end-de­vel­op­ers-need</li>\n<li>https://​www.ex­pert­mar­ket.co.uk/​web-de­sign/​eth­i­cal-re­spon­si­bil­i­ties-web-de­vel­op­ers-have</li>\n<li>https://​www.okaloosaschools.com/​fwb/​sites/​okaloosaschools.com.fwb/​ﬁles/​users/​an­tho­ny­bryant/​wd­s_v1.1_ss­g_l11.pdf</li>\n<li>https://​edri.org/​eth­i­cal-web-dev/</li>\n<li>https://​www.smash­ing­magazine.com/​2018/​03/​us­ing-ethics-in-web-de­sign/</li>\n<li>https://​eth­i­cal­web.org/</li>\n<li>https://​pa­per­swelove.org/​2016/​video/​evelina-eric-ines-caitie/</li>\n<li>https://​www.hon­ey­comb.io/​blog/​from-0-to-in­sight-with-open­teleme­try-in-go/</li>\n<li>https://​acloudguru.com/​blog/​en­gi­neer­ing/​the-fu­ture-of-ops-jobs</li>\n<li>http://​wor­ry­dream.com/​Me­di­aFor­Think­ingThe­Un­think­able/​note.html</li>\n<li>http://​wor­ry­dream.com/​Me­di­aFor­Think­ingThe­Un­think­able/</li>\n<li>https://​www.eater.com/​21398969/​fu­ture-co-op-worker-owned-restau­rants-eth­i­cal-busi­ness</li>\n</ul>\n<h2>Newsletter Links</h2>\n<ul>\n<li>https://​css-tricks.com/​mem­o­rize-scroll-po­si­tion-across-page-loads/</li>\n<li>https://​www.giftegwuenu.com/​how-to-switch-logo-in-dark-mode/</li>\n<li>https://​tab­leri­cons.com/</li>\n<li>https://​squir­cley.app/</li>\n<li>https://​shareon.js.org/</li>\n<li>https://​www.about­mon­ica.com/​blog/​how-to-cre­ate-a-github-pro­ﬁle-readme</li>\n<li>https://​dmitri­pavlutin.com/​javascript-event-del­e­ga­tion/</li>\n<li>https://​medium.com/​teads-en­gi­neer­ing/​gen­er­at­ing-uuids-at-scale-on-the-web-2877f529d2a2</li>\n<li>https://​github.com/​fym­mot/​in­clu­sive-dates</li>\n<li>https://​www.smash­ing­magazine.com/​2020/​07/​tiny-desk­top-apps-tauri-vuejs/[^]</li>\n<li>https://​github.com/​ma­li­najs/​ma­li­najs</li>\n<li>https://​ni­colo­davis.com/​blog/​type­script-to-rust/</li>\n<li>https://​www.bit­na­tive.com/​2020/​07/​06/​four-ways-to-fetch-data-in-re­act/</li>\n<li>https://​www.saman­tham­ing.com/​tid­bits/​71-how-to-ﬂat­ten-ar­ray-us­ing-ar­ray-ﬂat/</li>\n<li>https://​github.com/​lmam­mino/​ﬁ­nan­cial#readme</li>\n<li>https://​fredri­knoren.github.io/​js­plot/</li>\n<li>https://​stephaniewal­ter.de­sign/​blog/​de­sign­ing-adap­tive-com­po­nents-be­yond-re­spon­sive-break­points/</li>\n<li>https://​www.smash­ing­magazine.com/​2020/​07/​css-tech­niques-leg­i­bil­ity/</li>\n<li>https://​ishadeed.com/​ar­ti­cle/​css-mul­ti­ple-back­grounds/</li>\n<li>https://​eli­jah­manor.com/​for­mat-js-dates-and-times</li>\n<li>https://​css-tricks.com/​lazy-load­ing-im­ages-in-svelte/</li>\n<li>https://​tailzilla.app/</li>\n<li>https://​whatthe­fork.is/​mem­o­iza­tion</li>\n<li>https://​www.smash­ing­magazine.com/​2020/​07/​in­tro­duc­tion-stim­u­lusjs/</li>\n<li>https://​ishadeed.com/​ar­ti­cle/​pixel-per­fec­tion/</li>\n<li>https://​www.smash­ing­magazine.com/​2020/​07/​de­sign-wire­frames-ac­ces­si­ble-html-css/</li>\n<li>https://​vy­cke.dev/​blog/​css-lay­out-pat­terns/</li>\n<li>https://​we­b­com­po­nents.dev/​blog/​all-the-ways-to-make-a-web-com­po­nent/</li>\n<li>https://​adam­sil­ver.io/​ar­ti­cles/​the-trou­ble-with-mailto-email-links-and-what-to-do-in­stead/</li>\n<li>https://​m.sig­nalvnoise.com/​how-we-achieve-sim­ple-de­sign-for-base­camp-and-hey/</li>\n<li>https://​propjockey.github.io/​css-me­dia-vars/</li>\n<li>https://​medium.com/​bet­ter-pro­gram­ming/​how-i-built-a-rest-api-us­ing-google-sheets-5bbf356b01f0</li>\n<li>https://​www.smash­ing­magazine.com/​2020/​07/​tiny-desk­top-apps-tauri-vuejs/</li>\n<li>https://​ni­colo­davis.com/​blog/​type­script-to-rust/</li>\n<li>https://​css-tricks.com/​build­ing-server­less-graphql-api-in-node-with-ex­press-and-netlify/</li>\n<li>https://​blog.tail­wind­css.com/​build­ing-the-tail­wind-blog</li>\n<li>https://​ric­car­doscalco.it/​tex­tures/</li>\n<li>https://​www.zach­leat.com/​web/​speedlify/</li>\n<li>https://​keyframes.app/</li>\n<li>https://​www.taniaras­cia.com/​un­der­stand­ing-tem­plate-lit­er­als/</li>\n<li>https://​code­golf.stack­ex­change.com/​ques­tions/​2682/​tips-for-golf­ing-in-javascript</li>\n<li>https://​medium.com/@​ab­ulka/​todomvc-im­ple­mented-us­ing-a-game-ar­chi­tec­ture-ecs-88b­b86ea5e98</li>\n<li>https://​github.com/​james­rout­ley/​24a2</li>\n<li>https://​www.w3.org/​TR/​wai-aria-prac­tices-1.1/​ex­am­ples/​com­bobox/​aria1.1pat­tern/​list­box-combo.html</li>\n</ul>\n"},{"meta":{"title":"There Really Is No Ethical Restaurant Under Capitalism","slug":"saxena/there-really-is-no-ethical-restaurant-under-capitalism","source":"https://www.eater.com/21398969/future-co-op-worker-owned-restaurants-ethical-business","author":"Jaya Saxena","year":2020,"tags":"food, ethics, work","thesis":"Building an equitable restaurant — where all workers are paid fairly, have benefits, and work without discrimination — will require undoing the way most restaurants are run","date":"2020.09.01","collection":"bibliography","timestamp":1598943600000},"content":"<blockquote>\n<p>TheThe only eth­i­cal restau­rant I have ever heard of is on Star Trek: Deep Space Nine</p>\n</blockquote>\n<p>Saxena is is im­me­di­ately con­cerned with the en­tire process of restau­rant, and iden­ti­ﬁes that she’s never even heard of a restau­rant com­ing close to eth­i­cal out­side of utopian ﬁc­tion.</p>\n<blockquote>\n<p>Building an eq­ui­table restau­rant, a place where all work­ers are paid fairly, have ben­e­ﬁts, and can work in an anti-dis­crim­i­na­tory en­vi­ron­ment, is go­ing to take a near-un­do­ing of the way most restau­rants are run.</p>\n</blockquote>\n<p>This ap­plies to com­pa­nies and agen­cies that make the in­ter­net func­tion as well.</p>\n<blockquote>\n<p>Living in a coun­try that pro­vided uni­ver­sal health care, fed­er­ally man­dated paid child leave and sick leave, and a liv­ing min­i­mum wage, as well as in­cen­tivized sus­tain­able farm­ing, en­cour­aged unions, and got rid of at-will em­ploy­ment, would go a long way to­ward cre­at­ing en­vi­ron­ments within restau­rants (and all busi­nesses) where work­ers had power over their own liveli­hood.</p>\n</blockquote>\n<p>Again, this ap­plies to the ba­sic func­tion­ing of how we build the in­ter­net. The struc­ture <em>around</em> how we make what we make di­rectly in­forms and is in­ex­tri­ca­ble from what re­sults and ethics of what we make.</p>\n<blockquote>\n<p>…but Vartan con­tin­ued to bring it up with em­ploy­ees, and even­tu­ally worked with Project Equity, an or­ga­ni­za­tion that ad­vo­cates for and con­sults with com­pa­nies to pivot to em­ployee-owned mod­els, to be­come a worker co­op­er­a­tive.</p>\n</blockquote>\n<p>Employee-owned com­pa­nies are a step in the right di­rec­tion. However, places like Amazon give their op­tions stock op­tions that vest. This is a com­mon model for start-ups (Github).</p>\n<blockquote>\n<p>A Slice of New York al­lows em­ploy­ees to be­come co-own­ers af­ter they’ve spent at least a year at the com­pany; as of now, about 45 per­cent of the em­ploy­ees are co-own­ers.</p>\n</blockquote>\n<p>However it sounds like hav­ing ac­cess to stocks and be­ing a true <span class=\"small-caps\">ESOP</span> like this Pizza Joint or Miller Paint is a dif­fer­ent deal.</p>\n<blockquote>\n<p>The restau­ran­t’s gov­er­nance is what’s re­ally af­fected: Every co-owner has an equal share of the busi­ness and a vote on a board. Board mem­bers all have an equal say in de­ci­sions about ben­e­ﬁts, safety pro­ce­dures, menu changes, and is­sues deal­ing with the gen­eral ﬁ­nan­cial well­be­ing of the com­pany.</p>\n</blockquote>\n<p>This is a rev­o­lu­tion­ary idea for the tech in­dus­try. This is what eth­i­cal starts to look like.</p>\n<blockquote>\n<p>No mat­ter how kindly run and com­mu­nity-fo­cused a restau­ran­t’s struc­ture is, wages are of­ten the stick­ing point. After all, it’s a job; get­ting paid is the goal. And as much as co-op or non­proﬁt struc­tures help with the over­all work cul­ture, they do not solve the prob­lem so many restau­rants face: It costs money to pay peo­ple a liv­ing wage.</p>\n</blockquote>\n<blockquote>\n<p>The re­al­ity is, even though Charmington’s is pay­ing as much as it can while en­sur­ing it can stay aﬂoat, work­ers could prob­a­bly make more else­where.</p>\n</blockquote>\n<p>Does<span class=\"push-double\"></span> <span class=\"pull-double\">“</span>ethical” need to be com­pro­mise in this way?</p>\n<blockquote>\n<p>… when it comes to restau­rants, it’s hard to change one thing un­less you’re chang­ing every­thing.</p>\n</blockquote>\n<p>There are sys­temic forces at work that pre­vent any in­di­vid­ual, or even any small com­mu­nity from truly reach­ing a place of eth­i­cal be­hav­ior. This makes me think that there has to be a split be­tween<span class=\"push-double\"></span> <span class=\"pull-double\">“</span>acting eth­i­cally” and<span class=\"push-double\"></span> <span class=\"pull-double\">“</span>being eth­i­cal”. We can all act eth­i­cally, work­ing our way up­stream against the sys­tem forces ar­rayed against us, but that’s no guar­an­tee that we will, at the end of the day, be eth­i­cal.</p>\n<blockquote>\n<p>Of course, not every meal can re­al­is­ti­cally be $195 per per­son. The cost of pro­vid­ing every em­ployee with a liv­ing wage and ben­e­ﬁts — not to men­tion pay­ing rent and in­sur­ance, and serv­ing a good prod­uct af­ford­able enough for most peo­ple — is nearly im­pos­si­ble with the way restau­rants, co-op or not, must run.</p>\n</blockquote>\n<p>Why is this? We live in a time of un­prece­dented ef­ﬁ­ciency, un­be­liev­able abun­dance, and mas­sive wealth but if a <em>restau­rant</em> is called to truly ac­count for its ex­ploita­tion to charge its true price, it’s im­me­di­ately un­ten­able. This feels like it must be true across many in­dus­tries&thinsp;&mdash;&thinsp;Uber would rather cease ser­vice in California than treat it’s dri­vers like em­ploy­ees. What would it take to truly un­der­stand what the net­work of costs, val­ues, debts, and the real price of things?</p>\n<blockquote>\n<p>The prob­lem of<span class=\"push-double\"></span> <span class=\"pull-double\">“</span>good” food be­ing pro­hib­i­tively ex­pen­sive can’t be com­pletely solved by restau­ra­teurs turn­ing those knobs. Depressed wages and in­ﬂa­tion are prob­lems for every­one, not just restau­rant work­ers</p>\n</blockquote>\n<p>Are those re­ally two is­sues at work? I get the sense that those are both symp­toms of an un­der­ly­ing dis­con­nec­tion be­tween la­bor &amp; re­sources and con­sump­tion.</p>\n<blockquote>\n<p>Now,<span class=\"push-double\"></span> <span class=\"pull-double\">“</span>value” can in­clude not just cus­tomer ex­pe­ri­ence, but the knowl­edge that em­ployee well-be­ing is part of the plan.</p>\n</blockquote>\n<p>Is that a value add?? Are we now just sell­ing eth­i­cal choices, and let­ting the con­cept of the mar­ket de­ter­mine how we can work? Because than we’re just play­ing the same game with the rich be­ing able to<span class=\"push-double\"></span> <span class=\"pull-double\">“</span>choose” eth­i­cal con­sump­tion meth­ods and pur­chase the abil­ity to do the right thing, which ab­solves them of re­spon­si­bil­ity to change the sys­tem and sup­port sys­temic re­form. I guess this is the clas­sic re­form vs rev­o­lu­tion prob­lem, and the source of rev­o­lu­tion­ar­ies at­tack­ing re­form­ers for mak­ing a bro­ken sys­tem more bear­able in­stead of truly ﬁx­ing it. Again tho&thinsp;&mdash;&thinsp;the sys­tem is­n’t bro­ken but de­signed. Getting out of that polemic means iden­ti­fy­ing the de­sign.</p>\n<blockquote>\n<p>But every­thing restau­rants can do on their own is a few drops in a bucket com­pared to what gov­ern­ment sup­port in the form of things like uni­ver­sal health care, or real aid for small busi­nesses, could achieve.</p>\n</blockquote>\n<p>Thats the dream that ar­tic­u­lated by Star Trek&thinsp;&mdash;&thinsp;gov­ern­ment en­ti­ties who have the abil­ity to make real change <em>do</em>.</p>\n<blockquote>\n<p>Sustained change will take a greater un­der­stand­ing of what<span class=\"push-double\"></span> <span class=\"pull-double\">“</span>equity” means, and what it will re­quire from both restau­rants and cus­tomers. As bad as the pan­demic has been, it has put us in a great po­si­tion to do that sort of reeval­u­a­tion, and reimag­ine a restau­rant as a place where suc­cess does­n’t mean proﬁt, but rather that the whole com­mu­nity, farm-to-table, is cared for. And to maybe even ﬁght for a day when it won’t be the re­spon­si­bil­ity of restau­rants to solve these prob­lems at all</p>\n</blockquote>\n"}]