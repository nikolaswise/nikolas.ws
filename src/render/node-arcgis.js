/* generated by Svelte v3.24.0 */
import {
	SvelteComponent,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	space
} from "svelte/internal";

function create_fragment(ctx) {
	let h4;
	let t1;
	let p0;
	let t3;
	let p1;
	let t11;
	let p2;
	let t12;
	let p3;
	let t14;
	let p4;
	let t18;
	let h2;
	let t20;
	let p5;

	return {
		c() {
			h4 = element("h4");
			h4.textContent = "Goals";
			t1 = space();
			p0 = element("p");
			p0.textContent = "With this project, I was attempting to create a centralized code base for common platform interactions â€” reducing duplicated code and allowing a greater sharing of resources across different development teams at Esri.";
			t3 = space();
			p1 = element("p");
			p1.innerHTML = `Esri product developers around the globe were recreating the same solutions to common problems in the context of their applications. Node ArcGIS reduces duplicated code and allows a greater sharing of time and resources across teams, and opens solutions to the open-source community. Node ArcGIS is an API that adheres to contemporary specs, acting a buffer between NodeJS workflows and the older, highly stable, <a href="https://developers.arcgis.com/rest" rel="nofollow">ArcGIS REST API</a>. Node ArcGIS brings the power of the ArcGIS platform to the largest and fastest growing language and package manager - <a href="https://nodejs.org/en/" rel="nofollow">Node JS</a> and <a href="https://www.npmjs.com/package/arcgis" rel="nofollow">NPM</a>.`;
			t11 = space();
			p2 = element("p");
			p2.innerHTML = `<img src="https://photos.smugmug.com/Projects/Node-arcgis/i-kJnNcvC/0/1e471604/X3/docs-X3.png" alt="Node Arcgis Documentation">`;
			t12 = space();
			p3 = element("p");
			p3.textContent = "The project allows for developers on widely different projects and teams work together to solve common problems, and opens those solutions to the broader open-source community. Node ArcGIS is also a fast-moving, agile API front that adheres to contemporary API specs, acting a buffer between what Node developers expect from an API and the older, stable, but slow-moving ArcGIS REST API.";
			t14 = space();
			p4 = element("p");
			p4.innerHTML = `Read the <a href="/texts/building-a-client-library/">in-depth introduction to the project with code samples</a> for a a full run-down of what designing a project like this is all about.`;
			t18 = space();
			h2 = element("h2");
			h2.textContent = "Update from 2018";
			t20 = space();
			p5 = element("p");
			p5.innerHTML = `Two of my favorite developers, <a href="https://twitter.com/geogangster" rel="nofollow">John Gravois</a> and <a href="https://twitter.com/patrickarlt" rel="nofollow">Patrick Arlt</a>, took this idea all the way home with their excellent <a href="https://github.com/Esri/arcgis-rest-js" rel="nofollow">ArcGIS REST JS</a> project!`;
		},
		m(target, anchor) {
			insert(target, h4, anchor);
			insert(target, t1, anchor);
			insert(target, p0, anchor);
			insert(target, t3, anchor);
			insert(target, p1, anchor);
			insert(target, t11, anchor);
			insert(target, p2, anchor);
			insert(target, t12, anchor);
			insert(target, p3, anchor);
			insert(target, t14, anchor);
			insert(target, p4, anchor);
			insert(target, t18, anchor);
			insert(target, h2, anchor);
			insert(target, t20, anchor);
			insert(target, p5, anchor);
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(h4);
			if (detaching) detach(t1);
			if (detaching) detach(p0);
			if (detaching) detach(t3);
			if (detaching) detach(p1);
			if (detaching) detach(t11);
			if (detaching) detach(p2);
			if (detaching) detach(t12);
			if (detaching) detach(p3);
			if (detaching) detach(t14);
			if (detaching) detach(p4);
			if (detaching) detach(t18);
			if (detaching) detach(h2);
			if (detaching) detach(t20);
			if (detaching) detach(p5);
		}
	};
}

const metadata = {
	"title": "Node ArcGIS",
	"slug": "node-arcgis",
	"site": "http://esri.github.io/node-arcgis/",
	"date": "2016.03.10",
	"description": "An API that explored bringing the ArcGIS REST API to Node and NPM.",
	"type": "projects, esri"
};

const { title, slug, site, date, description, type } = metadata;

class Component extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

export default Component;
export { metadata };